---
  consumes: 
    - "application/json"
  produces: 
    - "application/json"
  schemes: 
    - "https"
  swagger: "2.0"
  info: 
    description: "This API provides operations for interfacing with the Cohesity Cluster.\nNOTE: To view the documentation on the responses, click 'Model' next to\n'Example Value' and keep clicking to expand the hierarchy."
    title: "Cohesity REST API"
    version: "1.0"
  basePath: "/irisservices/api/v1"
  paths: 
    /public/accessTokens: 
      post: 
        description: "Before making other REST API requests, your REST client must make a\n'POST /public/accessToken' request with a valid Cohesity username and\npassword. This POST request returns an access token and type\nin the response that is generated by the Cohesity Cluster.\nSubsequent requests to other Cohesity REST API operations must\nspecify the returned access token and type by setting 'Authorization'\nin the http header in the following format:\n\nAuthorization: token_type access_token\n\nThe generated token is valid for 24 hours. If a request is made with\nan expired token, the 'Token expired' error message is returned.\nAdd code to your REST client to check for this error and request\nanother access token before reissuing the request."
        tags: 
          - "AccessTokens"
        summary: "Generate an Access Token."
        operationId: "GenerateAccessToken"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to generate access token."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/AccessTokenCredential"
        responses: 
          201: 
            $ref: "#/responses/GenerateAccessTokenResponse"
          default: 
            $ref: "#/responses/Error"
    /public/activeDirectory: 
      get: 
        description: "After a Cohesity Cluster has been joined to an Active Directory domain,\nthe users and groups in the domain can be authenticated on the Cohesity Cluster\nusing their Active Directory credentials.\n\nNOTE: The userName and password fields are not populated by this operation."
        tags: 
          - "ActiveDirectory"
        summary: "Lists the Active Directories that the Cohesity Cluster has joined."
        operationId: "GetActiveDirectoryEntry"
        responses: 
          200: 
            $ref: "#/responses/GetActiveDirectoryResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "After a Cohesity Cluster has been joined to an Active Directory domain,\nthe users and groups in the domain can be authenticated on the Cohesity Cluster\nusing their Active Directory credentials."
        tags: 
          - "ActiveDirectory"
        summary: "Join the Cohesity Cluster to the specified Active Directory."
        operationId: "CreateActiveDirectoryEntry"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to join an Active Directory."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/ActiveDirectoryEntry"
        responses: 
          201: 
            $ref: "#/responses/CreateActiveDirectoryResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Deletes the join of the Cohesity Cluster to the specified\nActive Directory domain. After the deletion, the Cohesity Cluster\nno longer has access to the principals on the Active Directory.\nFor example, you can no longer log in to the Cohesity Cluster\nwith a user defined in a principal group of the Active Directory domain."
        tags: 
          - "ActiveDirectory"
        summary: "Deletes the join with the Active Directory."
        operationId: "DeleteActiveDirectoryEntry"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to delete a join with an Active Directory."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/ActiveDirectoryEntry"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/activeDirectory/centrifyZones: 
      get: 
        tags: 
          - "ActiveDirectory"
        summary: "Fetches the list centrify zones of an active directory domain."
        operationId: "ListCentrifyZones"
        parameters: 
          - 
            type: "string"
            x-go-name: "DomainName"
            description: "Specifies the fully qualified domain name (FQDN) of an Active Directory."
            name: "domainName"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/ListCentrifyZonesResponse"
          default: 
            $ref: "#/responses/Error"
    /public/activeDirectory/principals: 
      get: 
        description: "Optionally limit the search results by specifying security identifiers (SIDs),\nan object class (user or group) or a substring.\nYou can specify SIDs or a substring but not both."
        tags: 
          - "ActiveDirectory"
        summary: "List the user and group principals in the Active Directory that match the\nfilter criteria specified using parameters."
        operationId: "SearchActiveDirectoryPrincipals"
        parameters: 
          - 
            type: "string"
            x-go-name: "Domain"
            description: "Specifies the domain name of the principals to search. If specified\nthe principals in that domain are searched. Domain could be an\nActive Directory domain joined by the Cluster or any one of the\ntrusted domains of the Active Directory domain or the LOCAL domain.\nIf not specified, all the domains are searched."
            name: "domain"
            in: "query"
          - 
            enum: 
              - "kUser"
              - "kGroup"
            type: "string"
            x-go-name: "ObjectClass"
            description: "Optionally filter by a principal object class such as 'kGroup' or 'kUser'.\nIf 'kGroup' is specified, only group principals are returned.\nIf 'kUser' is specified, only user principals are returned.\nIf not specified, both group and user principals are returned.\n'kUser' specifies a user object class.\n'kGroup' specifies a group object class."
            name: "objectClass"
            in: "query"
          - 
            type: "string"
            x-go-name: "Search"
            description: "Optionally filter by matching a substring. Only principals in\nthe with a name or sAMAccountName that matches\npart or all of the specified substring are returned.\nIf specified, a 'sids' parameter should not be specified."
            name: "search"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "Sids"
            description: "Optionally filter by a list of security identifiers (SIDs) found\nin the specified domain. Only principals matching\nthe specified SIDs are returned.\nIf specified, a 'search' parameter should not be specified."
            name: "sids"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/SearchActiveDirectoryPrincipalsResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "After a group or user has been added to a Cohesity Cluster,\nthe referenced Active Directory principal can be used by the Cohesity Cluster.\nIn addition, this operation maps Cohesity roles with a group or user and\nthis mapping defines the privileges allowed on the Cohesity Cluster for the\ngroup or user.\nFor example if an 'management' group is created on the Cohesity Cluster\nfor the Active Directory 'management' principal group and is\nassociated with the Cohesity 'View' role, all users in the\nreferenced Active Directory 'management' principal group can log in to the\nCohesity Dashboard but will only have view-only privileges.\nThese users cannot create new Protection Jobs, Policies, Views, etc.\n\nNOTE: Local Cohesity users and groups cannot be created by this operation.\nLocal Cohesity users or groups do not have an associated Active Directory\nprincipals and are created directly in the default LOCAL domain."
        tags: 
          - "ActiveDirectory"
        summary: "Add multiple groups or users on the Cohesity Cluster for the specified\nActive Directory principals. In addition, assign Cohesity roles to the\nusers or groups to define their Cohesity privileges."
        operationId: "AddActiveDirectoryPrincipals"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to add groups or users to the Cohesity Cluster."
            name: "body"
            in: "body"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/ActiveDirectoryPrincipalsAddParameters"
        responses: 
          201: 
            $ref: "#/responses/AddActiveDirectoryPrincipalsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/activeDirectory/{name}/idMappingInfo: 
      put: 
        tags: 
          - "ActiveDirectory"
        summary: "Updates the user id mapping info of an Active Directory."
        operationId: "UpdateActiveDirectoryIdMapping"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to update user id mapping of an Active Directory."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/IdMappingInfo"
          - 
            type: "string"
            x-go-name: "Name"
            description: "Specifies the Active Directory Domain Name."
            name: "name"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/UpdateActiveDirectoryResponse"
          default: 
            $ref: "#/responses/Error"
    /public/activeDirectory/{name}/machineAccounts: 
      post: 
        tags: 
          - "ActiveDirectory"
        summary: "Updates the machine accounts of an Active Directory."
        operationId: "UpdateActiveDirectoryMachineAccounts"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to update machine accounts of an Active Directory."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/UpdateMachineAccountsParams"
          - 
            type: "string"
            x-go-name: "Name"
            description: "Specifies the Active Directory Domain Name."
            name: "name"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/UpdateActiveDirectoryResponse"
          default: 
            $ref: "#/responses/Error"
    /public/alertResolutions: 
      get: 
        description: "Returns all Alert Resolution objects found on the Cohesity Cluster\nthat match the filter criteria specified using parameters.\nIf no filter parameters are specified,\nall Alert Resolution objects are returned.\nEach object provides details about the Alert Resolution such as\nthe resolution summary and details."
        tags: 
          - "Alerts"
        summary: "List the Alert Resolutions on the Cohesity Cluster."
        operationId: "GetResolutions"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeUsecs"
            description: "Filter by Start Date and Time by specifying a Unix epoch time\nin microseconds."
            name: "startDateUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeUsecs"
            description: "Filter by End Date and Time by specifying a Unix epoch time in\nmicroseconds."
            name: "endDateUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int32"
            x-go-name: "MaxResolutions"
            description: "Limit the number of returned Alert Resolutions.\nThe newest Resolutions are returned."
            name: "maxResolutions"
            in: "query"
            required: true
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "ResolutionIdList"
            description: "Filter by a list of Alert Resolution ids."
            name: "resolutionIdList"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "AlertIdList"
            description: "Filter by a list of Alert ids."
            name: "alertIdList"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetResolutionsResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Create an Alert Resolution and apply it to one or more Alerts.\nMark the Alerts as resolved."
        tags: 
          - "Alerts"
        summary: "Create an Alert Resolution."
        operationId: "CreateResolution"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create an Alert Resolution and apply it to the specified Alerts."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/AlertResolutionRequest"
        responses: 
          201: 
            $ref: "#/responses/CreateResolutionResponse"
          default: 
            $ref: "#/responses/Error"
    /public/alertResolutions/{id}: 
      get: 
        description: "Returns the Alert Resolution object corresponding to passed in Alert\nResolution Id."
        tags: 
          - "Alerts"
        summary: "List details about a single Alert Resolution."
        operationId: "GetResolutionById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Unique id of the Alert Resolution to return."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetResolutionByIdResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Apply an existing Alert Resolution to one or more additional Alerts.\nMark those additional Alerts as resolved."
        tags: 
          - "Alerts"
        summary: "Apply an existing Alert Resolution to additional Alerts."
        operationId: "UpdateResolution"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Unique id of the Alert Resolution to return."
            name: "id"
            in: "path"
            required: true
          - 
            x-go-name: "Body"
            description: "Request to apply an existing resolution to the specified Alerts."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/UpdateResolutionParams"
        responses: 
          200: 
            $ref: "#/responses/UpdateResolutionResponse"
          default: 
            $ref: "#/responses/Error"
    /public/alerts: 
      get: 
        description: "Returns all Alert objects found on the Cohesity Cluster that\nmatch the filter criteria specified using parameters.\nThe Cohesity Cluster creates an Alert when a potential problem\nis found or when a threshold has been exceeded on the Cohesity Cluster.\nIf no filter parameters are specified, all Alert objects are returned.\nEach object provides details about the Alert such as the Status and Severity."
        tags: 
          - "Alerts"
        summary: "List the Alerts on the Cohesity Cluster."
        operationId: "GetAlerts"
        parameters: 
          - 
            type: "array"
            items: 
              enum: 
                - "kDisk"
                - "kNode"
                - "kCluster"
                - "kNodeHealth"
                - "kClusterHealth"
                - "kBackupRestore"
                - "kEncryption"
                - "kArchivalRestore"
              type: "string"
            x-go-name: "AlertCategoryList"
            description: "Filter by a list of Alert Categories such as 'kDisk', 'kNode', 'kCluster',\n'kNodeHealth', 'kClusterHealth', 'kBackupRestore', 'kEncryption'\nand 'kArchivalRestore'."
            name: "alertCategoryList"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeUsecs"
            description: "Filter by End Date and Time by specifying\na Unix epoch time in microseconds."
            name: "endDateUsecs"
            in: "query"
          - 
            type: "array"
            items: 
              enum: 
                - "kOpen"
                - "kResolved"
              type: "string"
            x-go-name: "AlertStateList"
            description: "Filter by a list of Alert States such as 'kOpen' and 'kResolved'."
            name: "alertStateList"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "ResolutionIdList"
            description: "Filter by a list of Resolution Ids."
            name: "resolutionIdList"
            in: "query"
          - 
            type: "integer"
            format: "int32"
            x-go-name: "MaxAlerts"
            description: "Limit the number of returned Alerts. The newest Alerts are returned."
            name: "maxAlerts"
            in: "query"
            required: true
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "AlertIdList"
            description: "Filter by a list of Alert ids."
            name: "alertIdList"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeUsecs"
            description: "Filter by Start Date and Time by specifying\na Unix epoch time in microseconds."
            name: "startDateUsecs"
            in: "query"
          - 
            type: "array"
            items: 
              enum: 
                - "kCritical"
                - "kWarning"
                - "kInfo"
              type: "string"
            x-go-name: "AlertSeverityList"
            description: "Filter by a list of Alert Severities such as 'kCritical', 'kWarning'\nand 'kInfo'."
            name: "alertSeverityList"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int32"
            x-go-name: "AlertTypeList"
            description: "Filter by a list of Alert Types."
            name: "alertTypeList"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetAlertsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/alerts/{id}: 
      get: 
        description: "Returns the Alert object corresponding to the specified id."
        tags: 
          - "Alerts"
        summary: "List details about a single Alert."
        operationId: "GetAlertById"
        parameters: 
          - 
            type: "string"
            x-go-name: "Id"
            description: "Unique id of the Alert to return."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetAlertByIdResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/analyzeJar: 
      post: 
        description: "Returns the result of the jar analysis."
        tags: 
          - "Analytics"
        summary: "Analyze the uploaded jar."
        operationId: "AnalyzeJar"
        parameters: 
          - 
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/AnalyseJarArg"
        responses: 
          200: 
            $ref: "#/responses/AnalyzeJarResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/apps: 
      get: 
        description: "If no parameters are specified, all Applications currently on\nthe Cohesity Cluster are returned.\nSpecifying parameters filters the results that are returned."
        tags: 
          - "Analytics"
        summary: "List Applications filtered by the specified parameters."
        operationId: "GetApplications"
        responses: 
          200: 
            $ref: "#/responses/GetApplicationsResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns the created application."
        tags: 
          - "Analytics"
        summary: "Create an Application."
        operationId: "CreateApplication"
        parameters: 
          - 
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/MapReduceInfo"
        responses: 
          201: 
            $ref: "#/responses/ApplicationResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/apps/{id}: 
      get: 
        description: "Returns the Application corresponding to the specified Application Id."
        tags: 
          - "Analytics"
        summary: "List details about a single Application."
        operationId: "GetApplicationById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetApplicationByIdResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the updated Application."
        tags: 
          - "Analytics"
        summary: "Update an Application."
        operationId: "UpdateApplication"
        parameters: 
          - 
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/MapReduceInfo"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/ApplicationResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns delete status upon completion."
        tags: 
          - "Analytics"
        summary: "Delete an Application."
        operationId: "DeleteApplication"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            name: "id"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/cancelAppInstanceRun/{id}: 
      put: 
        description: "Returns the result."
        tags: 
          - "Analytics"
        summary: "Cancel a specific map reduce instance run."
        operationId: "CancelMapReduceInstanceRun"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/CancelMapReduceInstanceRunResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/mappers: 
      get: 
        description: "If no parameters are specified, all Mappers currently on\nthe Cohesity Cluster are returned.\nSpecifying parameters filters the results that are returned."
        tags: 
          - "Analytics"
        summary: "List Mappers filtered by the specified parameters."
        operationId: "GetMappers"
        responses: 
          200: 
            $ref: "#/responses/GetMappersResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns the created mapper."
        tags: 
          - "Analytics"
        summary: "Create a Mapper."
        operationId: "CreateMapper"
        parameters: 
          - 
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/MapperInfo"
        responses: 
          201: 
            $ref: "#/responses/MapperResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/mappers/{id}: 
      get: 
        description: "Returns the Mapper corresponding to the specified Mapper Id."
        tags: 
          - "Analytics"
        summary: "List details about a single Mapper."
        operationId: "GetMapperById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetMapperByIdResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the updated Mapper."
        tags: 
          - "Analytics"
        summary: "Update a Mapper."
        operationId: "UpdateMapper"
        parameters: 
          - 
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/MapperInfo"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/MapperResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns delete status upon completion."
        tags: 
          - "Analytics"
        summary: "Delete a Mapper."
        operationId: "DeleteMapper"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            name: "id"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/mrAppRun/{id}: 
      delete: 
        description: "Returns delete status upon completion."
        tags: 
          - "Analytics"
        summary: "Delete a Map-Reduce Application Instance Run."
        operationId: "DeleteMapReduceInstanceRun"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            name: "id"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/mrAppRuns: 
      get: 
        description: "If no parameters are specified, all map reduce application instance runs\ncurrently on the Cohesity Cluster are returned.\nSpecifying parameters filters the results that are returned."
        tags: 
          - "Analytics"
        summary: "List map reduce application runs filtered by the specified parameters."
        operationId: "GetMapReduceAppRuns"
        parameters: 
          - 
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/GetMapReduceAppRunsParams"
        responses: 
          200: 
            $ref: "#/responses/GetApplicationsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/mrBaseJar: 
      get: 
        description: "Returns a struct containing the map reduce base jar from the cluster."
        tags: 
          - "Analytics"
        summary: "Downloads the map reduce base jar."
        operationId: "DownloadMRBaseJar"
        responses: 
          200: 
            $ref: "#/responses/DownloadResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/mrOutputfiles: 
      get: 
        description: "Returns a struct containing the map reduce instance run output files from Yoda."
        tags: 
          - "Analytics"
        summary: "Download map reduce base instance run output files from Yoda."
        operationId: "DownloadMROutputFiles"
        parameters: 
          - 
            type: "boolean"
            x-go-name: "IsNfsFile"
            description: "If true, then extracts file from NFS, else from local file system."
            name: "isNfsFile"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "PartitionId"
            description: "Cluster partition id for the file to be read."
            name: "partitionId"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "ViewBoxId"
            description: "View box id for the file to be read. Required for nfs files only."
            name: "viewBoxId"
            in: "query"
          - 
            type: "string"
            x-go-name: "ViewName"
            description: "View name for the file to be read. Required for nfs files only."
            name: "viewName"
            in: "query"
          - 
            type: "string"
            x-go-name: "FilePath"
            description: "filepath of the file on NFS."
            name: "filePath"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartOffset"
            description: "start offset from where bytes will be read."
            name: "startOffset"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "LengthBytes"
            description: "Number of bytes to be read from start_offset."
            name: "lengthBytes"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/DownloadResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/reducers: 
      get: 
        description: "If no parameters are specified, all Reducers currently on\nthe Cohesity Cluster are returned.\nSpecifying parameters filters the results that are returned."
        tags: 
          - "Analytics"
        summary: "List Reducers filtered by the specified parameters."
        operationId: "GetReducers"
        responses: 
          200: 
            $ref: "#/responses/GetReducersResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns the created reducer."
        tags: 
          - "Analytics"
        summary: "Create a Reducer."
        operationId: "CreateReducer"
        parameters: 
          - 
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/ReducerInfo"
        responses: 
          201: 
            $ref: "#/responses/ReducerResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/reducers/{id}: 
      get: 
        description: "Returns the Reducer corresponding to the specified Reducer Id."
        tags: 
          - "Analytics"
        summary: "List details about a single Reducer."
        operationId: "GetReducerById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetReducerByIdResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the updated reducer."
        tags: 
          - "Analytics"
        summary: "Update a Reducer."
        operationId: "UpdateReducer"
        parameters: 
          - 
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/ReducerInfo"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/ReducerResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns delete status upon completion."
        tags: 
          - "Analytics"
        summary: "Delete a Reducer."
        operationId: "DeleteReducer"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            name: "id"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/runAppInstance: 
      put: 
        description: "Returns the updated Application."
        tags: 
          - "Analytics"
        summary: "Run a map-reduce application instance."
        operationId: "RunMapReduceAppInstance"
        parameters: 
          - 
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/RunMapReduceParams"
        responses: 
          200: 
            $ref: "#/responses/RunMapReduceAppInstanceResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/uploadJar: 
      post: 
        description: "Returns a struct containing the jar name and local mount path where the jar\nwill be uploaded."
        tags: 
          - "Analytics"
        summary: "Upload a jar to pre-specified Yoda internal view."
        operationId: "UploadJar"
        responses: 
          200: 
            $ref: "#/responses/UploadJarResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns delete status upon completion."
        tags: 
          - "Analytics"
        summary: "Delete the uploaded jar from temporary locaation."
        operationId: "DeleteUploadedJar"
        parameters: 
          - 
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/UploadMRJarViewPathWrapper"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/analytics/uploadJarPath: 
      get: 
        description: "Returns the mounted path to upload Jars."
        tags: 
          - "Analytics"
        summary: "Get details about the mounted path to upload Jars."
        operationId: "GetMRUploadJarPath"
        responses: 
          200: 
            $ref: "#/responses/GetMRUploadJarPathResponse"
          default: 
            $ref: "#/responses/Error"
    /public/auditLogs/cluster: 
      get: 
        description: "When actions (such as a login or a Job being paused) occur on the\nCohesity Cluster, the Cluster generates Audit Logs.\nIf no parameters are specified, all logs currently on the Cohesity Cluster\nare returned. Specifying parameters filters the results that are returned."
        tags: 
          - "Audit"
        summary: "List the cluster audit logs on the Cohesity Cluster that match the filter\ncriteria specified using parameters."
        operationId: "SearchClusterAuditLogs"
        parameters: 
          - 
            type: "string"
            x-go-name: "Search"
            description: "Filter by matching a substring in entity name or details of the\nCluster audit log."
            name: "search"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartIndex"
            description: "Specifies an index number that can be used to return subsets of items\nin multiple requests.\nBreak up the items to return into multiple requests by setting pageCount\nand startIndex to return a subsets of items in the search result.\nFor example, set startIndex to 0 to get the first set of pageCount items\nfor the first request. Increment startIndex by pageCount\nto get the next set of pageCount items for a next request.\nContinue until all items are returned and therefore the total number of\nreturned items is equal to totalCount. Default value is 0."
            name: "startIndex"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "UserNames"
            description: "Filter by user names who cause the actions that generate Cluster Audit\nLogs."
            name: "userNames"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "EntityTypes"
            description: "Filter by entity types involved in the actions that generate the\nCluster audit logs, such as User, Protection Job, View, etc.\nFor a complete list, see the Category drop-down in the Admin > Audit Logs\npage of the Cohesity Dashboard."
            name: "entityTypes"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeUsecs"
            description: "Filter by a start time. Only Cluster audit logs that were generated after\nthe specified time are returned.\nSpecify the start time as a Unix epoch Timestamp (in microseconds)."
            name: "startTimeUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeUsecs"
            description: "Filter by a end time specified as a Unix epoch Timestamp\n(in microseconds). Only Cluster audit logs that were generated before the\nspecified end time are returned."
            name: "endTimeUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "PageCount"
            description: "Limit the number of items to return in the response for pagination\npurposes. Default value is 1000."
            name: "pageCount"
            in: "query"
          - 
            type: "string"
            x-go-name: "OutputFormat"
            description: "Specifies the format of the output such as csv and json.\nIf not specified, the json format is returned. If csv is specified,\na comma-separated list with a heading row is returned."
            name: "outputFormat"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "Domains"
            description: "Filter by domains of users who cause the actions that trigger\nCluster audit logs."
            name: "domains"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "Actions"
            description: "Filter by the actions that generate Cluster audit logs such as\nActivate, Cancel, Clone, Create, etc. For a complete list, see the\nActions drop-down in the Admin > Audit Logs page of the Cohesity\nDashboard."
            name: "actions"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/SearchClusterAuditLogsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/basicClusterInfo: 
      get: 
        description: "All Active Directory domains that are currently joined to the Cohesity\nCluster are returned. In addition, the default LOCAL domain on the\nCohesity Cluster is returned as the first element of the domains array in\nthe response."
        tags: 
          - "Cluster"
        summary: "List details about the Cohesity Cluster such as the name, type, version,\nlanguage, locale and domains.\nThis operation does not require authentication."
        operationId: "GetBasicClusterInfo"
        responses: 
          200: 
            $ref: "#/responses/GetBasicClusterInfoResponse"
          default: 
            $ref: "#/responses/Error"
    /public/certificates/webServer: 
      get: 
        description: "Returns the Server Certificate configured on the cluster."
        tags: 
          - "Certificates"
        summary: "Get the Server Certificate configured on the Cluster."
        operationId: "GetWebServerCertificate"
        responses: 
          200: 
            $ref: "#/responses/GetWebServerCertificateResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the updated Web Server Certificate on the cluster."
        tags: 
          - "Certificates"
        summary: "Update the Web Server Certificate on the Cluster."
        operationId: "UpdateWebServerCertificate"
        parameters: 
          - 
            x-go-name: "Body"
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/SslCertificateConfig"
        responses: 
          200: 
            $ref: "#/responses/UpdateWebServerCertificateResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns delete status upon completion."
        tags: 
          - "Certificates"
        summary: "Delete the SSL Certificate in the Cluster."
        operationId: "DeleteWebServerCertificate"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/cluster: 
      get: 
        description: "Returns information about this Cohesity Cluster."
        tags: 
          - "Cluster"
        summary: "List details about this Cohesity Cluster."
        operationId: "GetCluster"
        parameters: 
          - 
            type: "boolean"
            x-go-name: "FetchStats"
            description: "If 'true', also get statistics about the Cohesity Cluster."
            name: "fetchStats"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/ClusterResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the updated Cluster configuration."
        tags: 
          - "Cluster"
        summary: "Update the configuration of this Cohesity Cluster."
        operationId: "UpdateClusterParams"
        parameters: 
          - 
            description: "Update Cluster Parameter."
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/UpdateClusterParams"
        responses: 
          200: 
            $ref: "#/responses/UpdateClusterResponse"
          default: 
            $ref: "#/responses/Error"
    /public/clusterPartitions: 
      get: 
        description: "If no parameters are specified, all Cluster Partitions currently on\nthe Cohesity Cluster are returned.\nSpecifying parameters filters the results that are returned."
        tags: 
          - "ClusterPartitions"
        summary: "List Cluster Partitions filtered by the specified parameters."
        operationId: "GetClusterPartitions"
        parameters: 
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "IdList"
            description: "Array of Cluster Partition Ids.\n\nFilter by a list of Cluster Partition ids. If empty, the Cluster Partitions\nare not filtered by id."
            name: "ids"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "NameList"
            description: "Array of Cluster Partition Names.\n\nFilter by a list of Cluster Partition Names. If empty, the Cluster\nPartitions are not filtered by names."
            name: "names"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetClusterPartitionsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/clusterPartitions/{id}: 
      get: 
        description: "Returns the Cluster Partition corresponding to the specified Cluster Partition Id."
        tags: 
          - "ClusterPartitions"
        summary: "List details about a single Cluster Partition."
        operationId: "GetClusterPartitionById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Cluster Partition to return."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/ClusterPartitionResponse"
          404: 
            $ref: "#/responses/NotFoundResponse"
          default: 
            $ref: "#/responses/Error"
    /public/dashboard: 
      get: 
        description: "If no parameters are specified, dashboard for the local cluster is returned."
        tags: 
          - "Dashboard"
        summary: "Returns the dashboard that match the filter criteria specified using parameters."
        operationId: "GetDashboard"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "ClusterId"
            description: "Id of the remote cluster for which to fetch the data. If value is not\nspecified, it is assumed to be local cluster."
            name: "clusterId"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "AllClusters"
            description: "Summary data for all clusters. If this is set to true, ClusterId will be\nignored."
            name: "allClusters"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetDashboardResponse"
          default: 
            $ref: "#/responses/Error"
    /public/export/config: 
      post: 
        description: "Export metadata into Json files"
        tags: 
          - "Export"
        operationId: "ExportConfig"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to open an exported config file to prepare for importing."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/ExportParameters"
        responses: 
          200: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/groups: 
      get: 
        description: "If no parameters are specified, all groups currently on the Cohesity Cluster\nare returned. Specifying parameters filters the results that are returned."
        tags: 
          - "Groups"
        summary: "List the groups that match the filter criteria specified using parameters."
        operationId: "GetGroups"
        parameters: 
          - 
            type: "string"
            x-go-name: "Name"
            description: "Optionally specify a group name to filter by."
            name: "name"
            in: "query"
          - 
            type: "string"
            x-go-name: "Domain"
            description: "If no domain is specified, all groups on the Cohesity Cluster are searched.\nIf a domain is specified, only groups on the Cohesity Cluster\nassociated with that domain are searched."
            name: "domain"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetGroupsResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the group that was updated on the Cohesity Cluster."
        tags: 
          - "Groups"
        summary: "Update an existing group on the Cohesity Cluster. Only group settings\non the Cohesity Cluster are updated. No changes are made to the\nreferenced group principal on the Active Directory."
        operationId: "UpdateGroup"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to update a group."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/GroupParameters"
        responses: 
          200: 
            $ref: "#/responses/UpdateGroupResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "If an Active Directory domain is specified, a new group is added to the\nCohesity Cluster for the specified Active Directory group principal.\nIf the LOCAL domain is specified, a new group is created directly in\nthe default LOCAL domain on the Cohesity Cluster.\n\nReturns the created or added group."
        tags: 
          - "Groups"
        summary: "Create or add a new group to the Cohesity Cluster."
        operationId: "CreateGroup"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to add or create a Group."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/GroupParameters"
        responses: 
          201: 
            $ref: "#/responses/CreateGroupResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "If the group on the Cohesity Cluster was added for an Active Directory user,\nthe referenced principal group on the Active Directory domain is NOT deleted.\nOnly the group on the Cohesity Cluster is deleted.\n\nReturns Success if the specified groups are deleted."
        tags: 
          - "Groups"
        summary: "Delete one or more groups on the Cohesity Cluster."
        operationId: "DeleteGroups"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to delete one or more groups on the Cohesity Cluster."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/GroupDeleteParameters"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/import/config: 
      put: 
        tags: 
          - "Import"
        summary: "Import config into local cluster."
        operationId: "ImportConfig"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to import configurations from an exported file."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/ImportConfigurations"
        responses: 
          200: 
            $ref: "#/responses/ImportConfigResponse"
          default: 
            $ref: "#/responses/Error"
    /public/nodes: 
      get: 
        description: "If no parameters are specified, all Nodes currently on the Cohesity Cluster are\nreturned.\nSpecifying parameters filters the results that are returned."
        tags: 
          - "Nodes"
        summary: "List Nodes of the cluster."
        operationId: "GetNodes"
        responses: 
          200: 
            $ref: "#/responses/GetNodesResponse"
          default: 
            $ref: "#/responses/Error"
    /public/nodes/{id}: 
      get: 
        description: "Returns the Node corresponding to the specified Node Id."
        tags: 
          - "Nodes"
        summary: "List details about a single node."
        operationId: "GetNodeById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Id of the Node"
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetNodeByIdResponse"
          default: 
            $ref: "#/responses/Error"
    /public/physicalAgents/upgrade: 
      post: 
        description: "If the request is successful, the Cohesity agents on the specified\nPhysical Servers are upgraded to the agent release\ncurrently available from this Cohesity Cluster.\nFor example if the Cluster is upgraded from 3.7.1 to 4.0,\nthe agents on the specified Physical Servers can be upgraded to 4.0 using\nthis POST operation.\nTo get the agentIds to pass into this operation, call\nGET /public/protectionSources with the environment set to 'KPhysical'.\nIn addition this GET operation returns the agentUpgradability field, that\nindicates if an agent can be upgraded. Use the agentUpgradability field\nto determine which Physical Servers to upgrade using this\nPOST /public/physicalAgents/upgrade operation.\n\nWARNING: Only agents at a particular Cohesity release can be\nupgraded using this operation.\nSee the Cohesity online help for details.\n\nReturns the status of the upgrade initiation."
        tags: 
          - "ProtectionSources"
        summary: "Initiate a request to upgrade Cohesity agents on one or more Physical Servers\nregistered on the Cohesity Cluster."
        operationId: "UpgradePhysicalAgents"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to upgrade agents on Physical Servers."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/UpgradePhysicalServerAgents"
        responses: 
          201: 
            $ref: "#/responses/UpgradePhysicalAgentsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/principals/protectionSources: 
      get: 
        description: "From the passed in list principals (specified by SIDs),\nreturn the list of Protection Sources objects and View names that each\nprincipal has permission to access."
        tags: 
          - "Principals"
        summary: "Returns the Protection Sources objects and View names that the principals\nhave permissions to access."
        operationId: "ListSourcesForPrincipals"
        parameters: 
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "Sids"
            description: "Specifies a list of security identifiers (SIDs) that specify user or\ngroup principals."
            name: "sids"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/ListSourcesForPrincipalsResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Specify the security identifier (SID) of the principal to grant access\npermissions for."
        tags: 
          - "Principals"
        summary: "Set the Protection Sources and Views that the specified principal\nhas permissions to access."
        operationId: "UpdateSourcesForPrincipals"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to set access permissions to Protection Sources and Views\nfor a principal."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/UpdateSourcesForPrincipalsParams"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/principals/searchPrincipals: 
      get: 
        description: "Optionally limit the search results by specifying security identifiers (SIDs),\nan object class (user or group) or a substring.\nYou can specify SIDs or a substring but not both."
        tags: 
          - "Principals"
        summary: "List the user and group principals that match the filter criteria specified\nusing parameters."
        operationId: "SearchPrincipals"
        parameters: 
          - 
            type: "string"
            x-go-name: "Domain"
            description: "Specifies the domain name of the principals to search. If specified\nthe principals in that domain are searched. Domain could be an\nActive Directory domain joined by the Cluster or any one of the\ntrusted domains of the Active Directory domain or the LOCAL domain.\nIf not specified, all the domains are searched."
            name: "domain"
            in: "query"
          - 
            enum: 
              - "kUser"
              - "kGroup"
            type: "string"
            x-go-name: "ObjectClass"
            description: "Optionally filter by a principal object class such as 'kGroup' or 'kUser'.\nIf 'kGroup' is specified, only group principals are returned.\nIf 'kUser' is specified, only user principals are returned.\nIf not specified, both group and user principals are returned.\n'kUser' specifies a user object class.\n'kGroup' specifies a group object class."
            name: "objectClass"
            in: "query"
          - 
            type: "string"
            x-go-name: "Search"
            description: "Optionally filter by matching a substring. Only principals in\nthe with a name or sAMAccountName that matches\npart or all of the specified substring are returned.\nIf specified, a 'sids' parameter should not be specified."
            name: "search"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "Sids"
            description: "Optionally filter by a list of security identifiers (SIDs) found\nin the specified domain. Only principals matching\nthe specified SIDs are returned.\nIf specified, a 'search' parameter should not be specified."
            name: "sids"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/SearchPrincipalsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/privileges: 
      get: 
        description: "If the 'name' parameter is not specified, all privileges defined\non the Cohesity Cluster are returned.\nIn addition, information about each privilege is returned such as the\nassociated category, description, name,  etc.\nIf an exact privilege name (such as PRINCIPAL_VIEW) is specified in the\n'name' parameter, only information about that single privilege is returned."
        tags: 
          - "Privileges"
        summary: "List the privileges defined on the Cohesity Cluster."
        operationId: "GetPrivileges"
        parameters: 
          - 
            type: "string"
            x-go-name: "Name"
            description: "Specifies the name of the privilege."
            name: "name"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetPrivilegesResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionJobState/{id}: 
      post: 
        description: "If the Protection Job is currently running (not paused) and true is passed in,\nthis operation stops any new Runs of this Protection Job\nfrom stating and executing.\nHowever, any existing Runs that were already executing will continue to run.\nIf this Projection Job is paused and false is passed in, this operation\nrestores the Job to a running state and new Runs are started as defined\nby the schedule in the Policy associated with the Job.\n\nReturns success if the paused state is changed."
        tags: 
          - "ProtectionJobs"
        summary: "Pause future Runs or resume future Runs of the specified Protection Job."
        operationId: "ChangeProtectionJobState"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Protection Job."
            name: "id"
            in: "path"
            required: true
          - 
            x-go-name: "Body"
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/ChangeProtectionJobStateParam"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionJobs: 
      get: 
        description: "If no parameters are specified, all Protection Jobs currently\non the Cohesity Cluster are returned.\nSpecifying parameters filters the results that are returned."
        tags: 
          - "ProtectionJobs"
        summary: "List Protections Jobs filtered by the specified parameters."
        operationId: "GetProtectionJobs"
        parameters: 
          - 
            type: "boolean"
            x-go-name: "IsActive"
            description: "Filter by Inactive or Active Jobs. If not set, all Inactive and\nActive Jobs are returned. If true, only Active Jobs are returned.\nIf false, only Inactive Jobs are returned.\nWhen you create a Protection Job on a Primary Cluster\nwith a replication schedule, the Cluster creates an\nInactive copy of the Job on the Remote Cluster.\nIn addition, when an Active and running Job is deactivated,\nthe Job becomes Inactive."
            name: "isActive"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "IsDeleted"
            description: "If true, return only Protection Jobs that have been deleted but still\nhave Snapshots associated with them.\nIf false, return all Protection Jobs except those Jobs that have\nbeen deleted and still have Snapshots associated with them.\nA Job that is deleted with all its Snapshots is not returned for\neither of these cases."
            name: "isDeleted"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "IncludeLastRunAndStats"
            description: "If true, return the last Protection Run of the Job and the summary stats."
            name: "includeLastRunAndStats"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "Ids"
            description: "Filter by a list of Protection Job ids."
            name: "ids"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "Names"
            description: "Filter by a list of Protection Job names."
            name: "names"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "PolicyIds"
            description: "Filter by Policy ids that are associated with Protection Jobs.\nOnly Jobs associated with the specified Policy ids, are returned."
            name: "policyIds"
            in: "query"
          - 
            type: "array"
            items: 
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetapp"
                - "kGenericNas"
                - "kHyperV"
                - "kAcropolis"
                - "kAzure"
              type: "string"
            x-go-name: "Environments"
            description: "Filter by environment types such as 'kVMware', 'kView', 'kSQL'\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp', 'kGenericNas', 'kHyperV',\n'kAcropolis', 'kAzure'.\nOnly Jobs protecting the specified environment types are returned.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
            name: "environments"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetProtectionJobsResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns the created Protection Job."
        tags: 
          - "ProtectionJobs"
        summary: "Create a Protection Job."
        operationId: "CreateProtectionJob"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a Protection Job."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/ProtectionJobRequestBody"
        responses: 
          201: 
            $ref: "#/responses/CreateProtectionJobResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionJobs/run/{id}: 
      post: 
        description: "Immediately excute a single Job Run and ignore the schedule defined\nin the Policy.\nA Protection Policy associated with the Job may define up to three\nbackup run types:\n1) Regular (CBT utilized), 2) Full (CBT not utilized) and 3) Log.\nThe passed in run type defines what type of backup is done by the Job Run.\nThe schedule defined in the Policy for the backup run type is ignored but\nother settings such as the snapshot retention and retry settings are used.\nReturns success if the Job Run starts."
        tags: 
          - "ProtectionJobs"
        summary: "Immediately execute a single Protection Job Run."
        operationId: "RunProtectionJob"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Protection Job."
            name: "id"
            in: "path"
            required: true
          - 
            x-go-name: "Body"
            description: "Specifies the type of backup. If not specified, the 'kRegular'\nbackup is run."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/RunProtectionJobParam"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionJobs/{id}: 
      get: 
        description: "Returns the Protection Job corresponding to the specified Job id."
        tags: 
          - "ProtectionJobs"
        summary: "List details about single Protection Job."
        operationId: "GetProtectionJobById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Protection Job."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetProtectionJobByIdResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the updated Protection Job."
        tags: 
          - "ProtectionJobs"
        summary: "Update a Protection Job."
        operationId: "UpdateProtectionJob"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to update a protection job."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/ProtectionJobRequestBody"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Protection Job."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/UpdateProtectionJobResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns Success if the Protection Job is deleted."
        tags: 
          - "ProtectionJobs"
        summary: "Delete a Protection Job."
        operationId: "DeleteProtectionJob"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Protection Job."
            name: "id"
            in: "path"
            required: true
          - 
            x-go-name: "DeleteSnapshots"
            description: "Specifies if Snapshots generated by the Protection Job should also be\ndeleted when the Job is deleted."
            name: "deleteSnapshots"
            in: "body"
            schema: 
              type: "boolean"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionPolicies: 
      get: 
        description: "If no parameters are specified, all Protection Policies currently on the\nCohesity Cluster are returned.\nSpecifying parameters filters the results that are returned."
        tags: 
          - "ProtectionPolicies"
        summary: "List Protection Policies filtered by some parameters."
        operationId: "GetProtectionPolicies"
        parameters: 
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "Ids"
            description: "Filter by a list of Protection Policy ids."
            name: "ids"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "Names"
            description: "Filter by a list of Protection Policy names."
            name: "names"
            in: "query"
          - 
            type: "array"
            items: 
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetapp"
                - "kGenericNas"
                - "kHyperV"
                - "kAcropolis"
                - "kAzure"
              type: "string"
            x-go-name: "Environments"
            description: "Filter by Environment type such as 'kView', 'kSQL', 'kVMware',\n'kPuppeteer' 'kPhysical', 'kPure', 'kNetapp', 'kGenericNas',\n'kHyperV', 'kAcropolis', or 'kAzure'\nOnly Policies protecting the specified environment type are returned.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
            name: "environments"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetProtectionPoliciesResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns the created Protection Policy."
        tags: 
          - "ProtectionPolicies"
        summary: "Create a Protection Policy."
        operationId: "CreateProtectionPolicy"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a Protection Policy."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/ProtectionPolicyRequest"
        responses: 
          201: 
            $ref: "#/responses/CreateProtectionPolicyResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionPolicies/{id}: 
      get: 
        description: "Returns the Protection Policy corresponding to the specified Policy Id."
        tags: 
          - "ProtectionPolicies"
        summary: "List details about a single Protection Policy."
        operationId: "GetProtectionPolicyById"
        parameters: 
          - 
            type: "string"
            x-go-name: "Id"
            description: "Specifies a unique id of the Protection Policy to return."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetProtectionPolicyByIdResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the updated Protection Policy."
        tags: 
          - "ProtectionPolicies"
        summary: "Update a Protection Policy."
        operationId: "UpdateProtectionPolicy"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to update a Protection Policy."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/ProtectionPolicyRequest"
          - 
            type: "string"
            x-go-name: "Id"
            description: "Specifies a unique id of the Protection Policy to return."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/UpdateProtectionPolicyResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns Success if the Protection Policy is deleted."
        tags: 
          - "ProtectionPolicies"
        summary: "Delete a Protection Policy."
        operationId: "DeleteProtectionPolicy"
        parameters: 
          - 
            type: "string"
            x-go-name: "Id"
            description: "Specifies a unique id of the Protection Policy to return."
            name: "id"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionRuns: 
      get: 
        description: "If no parameters are specified, Job Runs currently\non the Cohesity Cluster are returned. Both running and completed Job Runs\nare reported.\nSpecifying parameters filters the results that are returned."
        tags: 
          - "ProtectionRuns"
        summary: "List Protection Job Runs filtered by the specified parameters."
        operationId: "GetProtectionRuns"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "JobId"
            description: "Filter by a Protection Job that is specified by id.\nIf not specified, all Job Runs for all Protection Jobs are returned."
            name: "jobId"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "ExcludeTasks"
            description: "If true, the individual backup status for all the objects protected by\nthe Job Run are not populated in the response. For example in a VMware\nenvironment, the status of backing up each VM associated with a Job\nis not returned."
            name: "excludeTasks"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "ExcludeErrorRuns"
            description: "Filter out Jobs Runs with errors by setting this field to 'true'.\nIf not set or set to 'false', Job Runs with errors are returned."
            name: "excludeErrorRuns"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "ExcludeNonRestoreableRuns"
            description: "Filter out jobs runs that cannot be restored by setting this field to\n'true'. If not set or set to 'false', Runs without any successful\nobject will be returned. The default value is false."
            name: "excludeNonRestoreableRuns"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartedTimeUsecs"
            description: "Return a specific Job Run by specifying a time and a jobId.\nSpecify the time when the Job Run started as a\nUnix epoch Timestamp (in microseconds).\nIf this field is specified, jobId must also be\nspecified."
            name: "startedTimeUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeUsecs"
            description: "Filter by a start time. Only Job Runs that started after the specified\ntime are returned.\nSpecify the start time as a Unix epoch Timestamp (in microseconds)."
            name: "startTimeUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeUsecs"
            description: "Filter by a end time specified as a Unix epoch Timestamp\n(in microseconds). Only Job Runs that completed before the specified\nend time are returned."
            name: "endTimeUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "NumRuns"
            description: "Specify the number of Job Runs to return.\nThe newest Job Runs are returned."
            name: "numRuns"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "SourceId"
            description: "Filter by source id. Only Job Runs protecting the specified source\n(such as a VM or View) are returned. The source id\nis assigned by the Cohesity Cluster."
            name: "sourceId"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "RunTypes"
            description: "Filter by run type such as 'kFull', 'kRegular' or 'kLog'.\nIf not specified, Job Runs of all types are returned."
            name: "runTypes"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetProtectionRunsResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Update the expiration date (retention period) for the specified Protection\nJob Runs and their snapshots.\nAfter an expiration time is reached, the Job Run and its snapshots are deleted.\nIf an expiration time of 0 is specified, a Job Run and its snapshots\nare immediately deleted."
        tags: 
          - "ProtectionRuns"
        summary: "Update how long Protection Job Runs and their snapshots are retained\non the Cohesity Cluster."
        operationId: "UpdateProtectionRuns"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to update the expiration time of Protection Job Runs."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/UpdateProtectionJobRunsParam"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionRuns/cancel/{id}: 
      post: 
        tags: 
          - "ProtectionRuns"
        summary: "Cancel a Protection Job run."
        operationId: "CancelProtectionJobRun"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Protection Job."
            name: "id"
            in: "path"
            required: true
          - 
            x-go-name: "Body"
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/CancelProtectionJobRunParam"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionSources: 
      get: 
        description: "If no parameters are specified, all Protection Sources that are registered\non the Cohesity Cluster are returned.\nIn addition, an Object subtree gathered from each Source is returned.\nFor example, the Cohesity Cluster interrogates a Source VMware vCenter Server\nand creates an hierarchical Object subtree that mirrors the\nInventory tree on vCenter Server.\nThe contents of the Object tree is returned as a \"nodes\" hierarchy\nof \"protectionSource\"s.\nSpecifying parameters can alter the results that are returned."
        tags: 
          - "ProtectionSources"
        summary: "Returns the registered Protection Sources and their Object subtrees."
        operationId: "ListProtectionSources"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Return the Object subtree for the passed in Protection Source id."
            name: "id"
            in: "query"
          - 
            type: "array"
            items: 
              enum: 
                - "kVCenter"
                - "kFolder"
                - "kDatacenter"
                - "kComputeResource"
                - "kClusterComputeResource"
                - "kResourcePool"
                - "kDatastore"
                - "kHostSystem"
                - "kVirtualMachine"
                - "kVirtualApp"
                - "kStandaloneHost"
                - "kStoragePod"
                - "kNetwork"
                - "kDistributedVirtualPortgroup"
                - "kTagCategory"
                - "kTag"
              type: "string"
            x-go-name: "ExcludeTypes"
            description: "Filter out the Object types (and their subtrees) that match the passed\nin types such as 'kVCenter', 'kFolder', 'kDatacenter',\n'kComputeResource', 'kResourcePool', 'kDatastore', 'kHostSystem',\n'kVirtualMachine', etc.\nFor example, set this parameter to 'kResourcePool' to\nexclude Resource Pool Objects from being returned."
            name: "excludeTypes"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "IncludeDatastores"
            description: "Set this parameter to true to also return kDatastore object types found in\nthe Source in addition to their Object subtrees.\nBy default, datastores are not returned."
            name: "includeDatastores"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "IncludeNetworks"
            description: "Set this parameter to true to also return kNetwork object types found in\nthe Source in addition to their Object subtrees.\nBy default, network objects are not returned."
            name: "includeNetworks"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "IncludeVMFolders"
            description: "Set this parameter to true to also return kVMFolder object types found in\nthe Source in addition to their Object subtrees.\nBy default, VM folder objects are not returned."
            name: "includeVMFolders"
            in: "query"
          - 
            type: "array"
            items: 
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetapp"
                - "kGenericNas"
                - "kHyperV"
                - "kAcropolis"
                - "kAzure"
              type: "string"
            x-go-name: "Environments"
            description: "Return only Protection Sources that match the passed in environment type\nsuch as 'kVMware', 'kSQL', 'kView' 'kPhysical', 'kPuppeteer', 'kPure',\n'kNetapp', 'kGenericNas', 'kHyperV', 'kAcropolis', or 'kAzure'.\nFor example, set this parameter to 'kVMware' to only return the Sources\n(and their Object subtrees) found in the 'kVMware'\n(VMware vCenter Server) environment.\n\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
            name: "environments"
            in: "query"
          - 
            type: "string"
            x-go-name: "Environment"
            description: "This field is deprecated. Use environments instead.\ndeprecated: true"
            name: "environment"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/ListProtectionSourcesResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionSources/applicationServers: 
      get: 
        description: "Given the root node id of a Protection Source tree, returns the list of\nApplication Servers registered under that tree based on the filters."
        tags: 
          - "ProtectionSources"
        summary: "Returns the registered Application Servers and their Object subtrees."
        operationId: "ListApplicationServers"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "ProtectionSourcesRootNodeId"
            description: "Specifies the Protection Source Id of the root node of a Protection\nSources tree. A root node represents a registered Source on the\nCohesity Cluster, such as a vCenter Server."
            name: "protectionSourcesRootNodeId"
            in: "query"
          - 
            enum: 
              - "kVMware"
              - "kSQL"
              - "kView"
              - "kPuppeteer"
              - "kPhysical"
              - "kPure"
              - "kNetapp"
              - "kGenericNas"
              - "kHyperV"
              - "kAcropolis"
              - "kAzure"
            type: "string"
            x-go-name: "Environment"
            description: "Specifies the environment such as 'kPhysical' or 'kVMware' of the\nProtection Source tree.\noverrideDescription: true\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
            name: "environment"
            in: "query"
          - 
            enum: 
              - "kVMware"
              - "kSQL"
              - "kView"
              - "kPuppeteer"
              - "kPhysical"
              - "kPure"
              - "kNetapp"
              - "kGenericNas"
              - "kHyperV"
              - "kAcropolis"
              - "kAzure"
            type: "string"
            x-go-name: "Application"
            description: "Specifies the application such as 'kSQL', 'kExchange' running on the\nProtection Source.\noverrideDescription: true\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
            name: "application"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/ListApplicationServersResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the Protection Source whose registration parameters of its\nApplication Servers are modified upon success."
        tags: 
          - "ProtectionSources"
        summary: "Modifies the registration parameters of Application Servers in a Protection\nSource."
        operationId: "UpdateApplicationServers"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to modify the Application Servers registration of a Protection\nSource."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/UpdateApplicationServerParameters"
        responses: 
          200: 
            $ref: "#/responses/UpdateApplicationServersResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Registering Application Servers will help Cohesity Cluster such that any\napplication specific data can be backed up.\n\nReturns the Protection Source registered upon success."
        tags: 
          - "ProtectionSources"
        summary: "Register a Protection Source as running one or more Application Servers like\nMicrosoft SQL servers or Microsoft Exchange servers."
        operationId: "RegisterApplicationServers"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to register Application Servers in a Protection Source."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/RegisterApplicationServersParameters"
        responses: 
          200: 
            $ref: "#/responses/RegisterApplicationServersResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionSources/applicationServers/{id}: 
      delete: 
        description: "Unregistering Application Servers will fail if the Protection Source is\ncurrently being backed up.\n\nReturns the Protection Source whose Application Servers are unregistered upon\nsuccess."
        tags: 
          - "ProtectionSources"
        summary: "Unregister Application Servers like Microsoft SQL servers or Microsoft Exchange\nservers running on a Protection Source."
        operationId: "UnregisterApplicationServers"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Protection Source to unregister the\nApplication Servers. If the Protection Source is currently being\nbacked up, unregister operation will fail."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/UnregisterApplicationServersResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionSources/objects: 
      get: 
        description: "Returns the Protection Source objects corresponding to the specified ids."
        tags: 
          - "ProtectionSources"
        summary: "List details about Protection Source objects."
        operationId: "GetProtectionSourcesObjects"
        parameters: 
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "ObjectIds"
            description: "Specifies the ids of the Protection Source objects to return."
            name: "objectIds"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetProtectionSourcesObjectsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionSources/objects/{id}: 
      get: 
        description: "Returns the Protection Source object corresponding to the specified id."
        tags: 
          - "ProtectionSources"
        summary: "Get details about a single Protection Source Object."
        operationId: "GetProtectionSourcesObjectById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Protection Source to return."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetProtectionSourcesObjectByIdResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionSources/protectedVms: 
      get: 
        tags: 
          - "ProtectionSources"
        summary: "Returns the list of protected VMs in a registered Protection Source tree."
        operationId: "ListProtectedVms"
        parameters: 
          - 
            enum: 
              - "kVMware"
              - "kSQL"
              - "kView"
              - "kPuppeteer"
              - "kPhysical"
              - "kPure"
              - "kNetapp"
              - "kGenericNas"
              - "kHyperV"
              - "kAcropolis"
              - "kAzure"
            type: "string"
            x-go-name: "Environment"
            description: "Specifies the environment type of the registered Protection Source\nsuch as 'kVMware', 'kSQL', 'kView' 'kPhysical', 'kPuppeteer', 'kPure',\n'kNetapp', 'kGenericNas', 'kHyperV', 'kAcropolis', or 'kAzure'.\nFor example, set this parameter to 'kVMware' if the registered\nProtection Source is of 'kVMware' environment type.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
            name: "environment"
            in: "query"
            required: true
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies the Id of a registered Protection Source of the type\ngiven in environment."
            name: "id"
            in: "query"
            required: true
        responses: 
          200: 
            $ref: "#/responses/ListProtectedVmsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionSources/refresh/{id}: 
      post: 
        description: "Force an immediate refresh between the specified Protection Source tree\non the Cohesity Cluster and the Inventory tree\nin the associated vCenter Server.\n\nFor example if a new VM is added to the vCenter Server, after a refresh,\na new Protection Source node for this VM is added to the Protection Sources\ntree.\n\nSuccess indicates the forced refresh has been started. The amount of time to\ncomplete a refresh depends on the size of the Object hierarchies."
        tags: 
          - "ProtectionSources"
        summary: "Refresh the Object hierarchy of the Protection Sources tree."
        operationId: "RefreshProtectionSourceById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Id of the root node of the Protection Sources tree to refresh.\n\nForce a refresh of the Object hierarchy for the passed in Protection\nSources Id."
            name: "id"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionSources/register: 
      post: 
        description: "Register a Protection Source on the Cohesity Cluster.\nIt could be the root node of a vCenter Server or a physcical server.\n\nReturns the newly registered Protection Source upon success."
        tags: 
          - "ProtectionSources"
        summary: "Register a Protection Source."
        operationId: "RegisterProtectionSource"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to register a protection source."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/RegisterProtectionSourceParameters"
        responses: 
          200: 
            $ref: "#/responses/RegisterProtectionSourceResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionSources/registrationInfo: 
      get: 
        description: "Returns the registration and protection information of the registered\nProtection Sources."
        tags: 
          - "ProtectionSources"
        operationId: "ListProtectionSourcesRegistrationInfo"
        parameters: 
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "ViewNames"
            description: "Return only the Views whose names are specified in the list."
            name: "viewNames"
            in: "query"
          - 
            type: "array"
            items: 
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetapp"
                - "kGenericNas"
                - "kHyperV"
                - "kAcropolis"
                - "kAzure"
              type: "string"
            x-go-name: "Environments"
            description: "Return only Protection Sources that match the passed in environment type\nsuch as 'kVMware', 'kSQL', 'kView' 'kPhysical', 'kPuppeteer', 'kPure',\n'kNetapp', 'kGenericNas', 'kHyperV', 'kAcropolis', or 'kAzure'.\nFor example, set this parameter to 'kVMware' to only return the Sources\n(and their Object subtrees) found in the 'kVMware'\n(VMware vCenter Server) environment.\n\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
            name: "environments"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "Ids"
            description: "Return only the registered root nodes whose Ids are given in the list."
            name: "ids"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/ListProtectionSourcesRegistrationInfoResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionSources/rootNodes: 
      get: 
        description: "Returns the root Protection Sources and the registration information for\neach of these Sources."
        tags: 
          - "ProtectionSources"
        summary: "Returns the top level (root) Protection Sources with registration information."
        operationId: "ListProtectionSourcesRootNodes"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Return the registration information for the Protection Source id."
            name: "id"
            in: "query"
          - 
            type: "array"
            items: 
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetapp"
                - "kGenericNas"
                - "kHyperV"
                - "kAcropolis"
                - "kAzure"
              type: "string"
            x-go-name: "Environments"
            description: "Return only the root Protection Sources that match the passed in\nenvironment type such as 'kVMware', 'kSQL', 'kView', 'kPuppeteer',\n'kPhysical', 'kPure', 'kNetapp', 'kGenericNas', 'kHyperV', 'kAcropolis'\n'kAzure'.\nFor example, set this parameter to 'kVMware' to\nonly return the root Protection Sources found in the 'kVMware'\n(VMware vCenter) environment. In addition, the registration\ninformation for each Source is returned.\n\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
            name: "environments"
            in: "query"
          - 
            type: "string"
            x-go-name: "Environment"
            description: "This field is deprecated. Use environments instead.\ndeprecated: true"
            name: "environment"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/ListProtectionSourcesRootNodesResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionSources/sqlAagHostsAndDatabases: 
      get: 
        description: "Given a list of Protection Source Ids registered as SQL servers, returns\nAAGs found and the databases in AAG(Always on Availablity Group)."
        tags: 
          - "ProtectionSources"
        summary: "Returns the registered Protection Sources and their Object subtrees."
        operationId: "ListSqlAagHostsAndDatabases"
        parameters: 
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "SqlProtectionSourceIds"
            description: "Specifies a list of Ids of Protection Sources registered as SQL servers.\nThese sources may have one or more SQL databases in them. Some of them\nmay be part of AAGs(Always on Availability Group)."
            name: "sqlProtectionSourceIds"
            in: "query"
            required: true
        responses: 
          200: 
            $ref: "#/responses/ListSqlAagHostsAndDatabasesResponse"
          default: 
            $ref: "#/responses/Error"
    /public/protectionSources/virtualMachines: 
      get: 
        description: "Returns all Virtual Machines found in all the vCenter Servers registered\non the Cohesity Cluster that match the filter criteria specified using\nparameters.\nIf an id is specified, only VMs found in the specified vCenter Server\nare returned.\nOnly VM Objects are returned.\nOther VMware Objects such as datacenters are not returned."
        tags: 
          - "ProtectionSources"
        summary: "Returns the Virtual Machines in a vCenter Server."
        operationId: "ListVirtualMachines"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "VCenterId"
            description: "Limit the VMs returned to the set of VMs found in a specific\nvCenter Server.\nPass in the root Protection Source id for the vCenter Server\nto search for VMs."
            name: "vCenterId"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "Names"
            description: "Limit the returned VMs to those that exactly match the passed in VM name.\nTo match multiple VM names, specify multiple \"names\" parameters that each\nspecify a single VM name.\nThe string must exactly match the passed in VM name and wild cards are\nnot supported."
            name: "names"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "Uuids"
            description: "Limit the returned VMs to those that exactly match the passed in UUIDs."
            name: "uuids"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "Protected"
            description: "Limit the returned VMs to those that have been protected\nby a Protection Job.\nBy default, both protected and unprotected VMs are returned."
            name: "protected"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/ListVirtualMachinesResponse"
          default: 
            $ref: "#/responses/Error"
    /public/remoteClusters: 
      get: 
        description: "Cohesity Clusters involved in replication, must be registered to each other.\nFor example, if Cluster A is replicating Snapshots to Cluster B, Cluster\nB must be registered on Cluster A and Cluster B must be registered\non Cluster A."
        tags: 
          - "RemoteCluster"
        summary: "List the remote Cohesity Clusters that are registered on this local\nCohesity Cluster that match the filter criteria specified using parameters."
        operationId: "GetRemoteClusters"
        parameters: 
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "ClusterIds"
            description: "Filter by a list of Cluster ids."
            name: "clusterIds"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "ClusterNames"
            description: "Filter by a list of Cluster names."
            name: "clusterNames"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "PurposeReplication"
            description: "Filter for purpose as Replication."
            name: "purposeReplication"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "PurposeRemoteAccess"
            description: "Filter for purpose as Remote Access."
            name: "purposeRemoteAccess"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetRemoteClustersResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "For a Protection Job to replicate Snapshots from one Cluster\nto another Cluster, the Clusters must be paired together by\nregistering each Cluster on the other Cluster.\nFor example, Cluster A must be registered on Cluster B\nand Cluster B must be registered on Cluster A."
        tags: 
          - "RemoteCluster"
        summary: "Register a remote Cluster on this local Cluster for replication."
        operationId: "CreateRemoteCluster"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to register a remote Cluster."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/RegisterRemoteCluster"
        responses: 
          201: 
            $ref: "#/responses/CreateRemoteClusterResponse"
          default: 
            $ref: "#/responses/Error"
    /public/remoteClusters/{id}: 
      get: 
        description: "Returns the details about the remote Cluster with the specified Cluster id\nthat is registered on this local Cluster."
        tags: 
          - "RemoteCluster"
        summary: "List details about a single remote Cluster registered on this local Cluster."
        operationId: "GetRemoteClusterById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "id of the remote Cluster"
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetRemoteClusterByIdResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Update the connection settings of the specified remote Cluster that is\nregistered on this Cluster."
        tags: 
          - "RemoteCluster"
        summary: "Update the connection settings of the registered remote Cluster."
        operationId: "UpdateRemoteCluster"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "id of the remote Cluster"
            name: "id"
            in: "path"
            required: true
          - 
            x-go-name: "Body"
            description: "Request to update a remote Cluster."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/RegisterRemoteCluster"
        responses: 
          200: 
            $ref: "#/responses/UpdateRemoteClusterResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Delete the specified remote Cluster registration connection\non this Cluster."
        tags: 
          - "RemoteCluster"
        summary: "Delete a remote Cluster registration connection."
        operationId: "DeleteRemoteCluster"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "id of the remote Cluster"
            name: "id"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/remoteVaults/encryptionKeys/{id}: 
      put: 
        description: "This request contains multiple files stored as multipart mime data.\nEach file has a key used to encrypt data between a remote Cluster and the\nremote Vault.\nContent of the file should be same as the file downloaded from the remote\nCluster."
        tags: 
          - "RemoteRestore"
        summary: "Upload the encryption keys required to restore data from a remote Vault.\n(CloudRetrieve)"
        operationId: "UploadVaultEncryptionKeys"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to upload encryption keys of a remote Vault."
            name: "body"
            in: "body"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/VaultEncryptionKey"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Vault."
            name: "id"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/remoteVaults/restoreTasks: 
      get: 
        description: "A remote Vault restore task can restore archived data from a Vault\n(External Target) to this local Cluster.\nThis is part of the CloudRetrieve functionality for finding and restoring\narchived data from remote Vaults to an alternative (non-original) Cluster."
        tags: 
          - "RemoteRestore"
        summary: "List the remote Vault restore tasks that have completed or are running on\nthis Cohesity Cluster. (CloudRetrieve)"
        operationId: "ListRemoteVaultRestoreTasks"
        responses: 
          200: 
            $ref: "#/responses/ListRemoteVaultRestoreTasksStatusResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns the id of the remote Vault restore Task that was created.\n\nAfter a Vault is searched by a search Job, this operation can be\ncalled to create a task that restores the indexes and/or the Snapshots\nof a Protection Job, which were archived on a remote Vault (External Target).\nThis is part of the CloudRetrieve functionality for finding and restoring\narchived data from remote Vaults to an alternative (non-original) Cluster."
        tags: 
          - "RemoteRestore"
        summary: "Create a remote Vault restore task. (CloudRetrieve)"
        operationId: "CreateRemoteVaultRestoreTask"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a remote Vault restore task."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/CreateRemoteVaultRestoreTaskParameters"
        responses: 
          201: 
            $ref: "#/responses/CreateRemoteVaultRestoreTaskResponse"
          default: 
            $ref: "#/responses/Error"
    /public/remoteVaults/searchJobResults: 
      get: 
        description: "Specify a unique id of the search Job using a combination of the\nsearchJobId, clusterId, and clusterIncarnationId parameters,\nwhich are all required.\n\nThe results can be optionally filtered by the remote Cluster name.\nThis is part of the CloudRetrieve functionality for finding and restoring\narchived data from a remote Vault."
        tags: 
          - "RemoteRestore"
        summary: "List details about the Job Runs of Protection Jobs found by a single search\nof a remote Vault. (CloudRetrieve)"
        operationId: "GetRemoteVaultSearchJobResults"
        parameters: 
          - 
            type: "integer"
            format: "int32"
            x-go-name: "PageCount"
            description: "Specifies the number of Protection Jobs to return in the response\nto support pagination."
            name: "pageCount"
            in: "query"
          - 
            type: "string"
            x-go-name: "ClusterName"
            description: "Optionally filter the result by the remote Cohesity Cluster name."
            name: "clusterName"
            in: "query"
          - 
            type: "string"
            x-go-name: "Cookie"
            description: "Specifies the opaque string cookie returned by the previous response, to\nget next set of results. Used in combination with pageCount to support\npagination."
            name: "cookie"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "SearchJobId"
            description: "Specifies the id of the remote Vault search Job assigned\nby the Cohesity Cluster. Used in combination with the clusterId\nand clusterIncarnationId to uniquely identify the search Job."
            name: "searchJobId"
            in: "query"
            required: true
          - 
            type: "integer"
            format: "int64"
            x-go-name: "ClusterId"
            description: "Specifies the Cohesity Cluster id where the search Job was created.\nUsed in combination with the searchJobId and clusterIncarnationId\nto uniquely identify the search Job."
            name: "clusterId"
            in: "query"
            required: true
          - 
            type: "integer"
            format: "int64"
            x-go-name: "ClusterIncarnationId"
            description: "Specifies the incarnation id of the Cohesity Cluster where the\nsearch Job was created.\nUsed in combination with the searchJobId and clusterId to uniquely\nidentify the search Job."
            name: "clusterIncarnationId"
            in: "query"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetRemoteVaultSearchJobResultsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/remoteVaults/searchJobs: 
      get: 
        description: "List all the searches of remote Vaults (External Targets) that\nhave run or are running on this Cohesity Cluster.\nA search finds Protection Jobs that have archived to a\nVault (External Target).\nThis is part of the CloudRetrieve functionality for finding and restoring\narchived data from remote Vaults to an alternative (non-original) Cluster.\n\nNOTE: A Vault is equivalent to an External Target in the Cohesity Dashboard.\nA search Job is equivalent to a search task in the Cohesity Dashboard."
        tags: 
          - "RemoteRestore"
        summary: "List all the searches of remote Vaults. (CloudRetrieve)"
        operationId: "ListRemoteVaultSearchJobs"
        responses: 
          200: 
            $ref: "#/responses/ListRemoteVaultSearchJobsResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "A search Job finds Protection Jobs that archived data to a\nVault (External Target) which also match the specified search criteria.\nThe results can be optionally filtered by specifying a Cluster match string,\na Protection Job match string, a start time and an end time.\nThis is part of the CloudRetrieve functionality for finding and restoring\narchived data from remote Vaults to an alternative (non-original) Cluster.\n\nNOTE: A Vault is equivalent to an External Target in the Cohesity Dashboard.\nA search Job is equivalent to a search task in the Cohesity Dashboard."
        tags: 
          - "RemoteRestore"
        summary: "Create a search of a remote Vault. (CloudRetrieve)"
        operationId: "CreateRemoteVaultSearchJob"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a search of a remote Vault."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/CreateRemoteVaultSearchJobParameters"
        responses: 
          201: 
            $ref: "#/responses/CreateRemoteVaultSearchJobResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "This is part of the CloudRetrieve functionality for finding and restoring\narchived data from remote Vaults to an alternative (non-original) Cluster."
        tags: 
          - "RemoteRestore"
        summary: "Stop a search of a remote Vault (External Target). (CloudRetrieve)"
        operationId: "StopRemoteVaultSearchJob"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to stop a Remote Vault Search Job."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/StopRemoteVaultSearchJobParameters"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/remoteVaults/searchJobs/{id}: 
      get: 
        description: "Specify an id for a completed or running search Job.\nA search Job finds data that has been archived to a Vault (External Target).\nThe returned results do not include Job Run (Snapshot) information.\nIt is part of the CloudRetrieve functionality for finding and restoring\narchived data from remote Vaults to an alternative (non-original) Cluster."
        tags: 
          - "RemoteRestore"
        summary: "List details about a single search Job of a remote Vault. (CloudRetrieve)"
        operationId: "ListRemoteVaultSearchJobById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies the id of the remote Vault search Job to return."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/ListRemoteVaultSearchJobByIdResponse"
          default: 
            $ref: "#/responses/Error"
    /public/replicationEncryptionKey: 
      get: 
        description: "Get the encryption key that is used for encrypting replication data\nbetween this Cluster and a remote Cluster."
        tags: 
          - "RemoteCluster"
        summary: "Get the encryption key on this Cluster."
        operationId: "GetReplicationEncryptionKey"
        responses: 
          200: 
            $ref: "#/responses/GetReplicationEncryptionKeyResponse"
          default: 
            $ref: "#/responses/Error"
    /public/reports/dataTransferFromVaults: 
      get: 
        description: "A Vault can provide an additional Cloud Tier where cold data of the\nCohesity Cluster is stored in the Cloud.\nA Vault can also provide archive storage for backup data.\nThis archive data is stored on Tapes and in Cloud Vaults."
        tags: 
          - "Reports"
        summary: "Get summary statistics about transferring data from Vaults\n(External Targets) to this Cohesity Cluster."
        operationId: "GetDataTransferFromVaultsReportRequest"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeMsecs"
            description: "Filter by a start time. Specify the start time as a Unix epoch Timestamp\n(in milliseconds).\nIf startTimeMsecs and endTimeMsecs are not specified,\nthe time period is the last 7 days."
            name: "startTimeMsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeMsecs"
            description: "Filter by end time. Specify the end time as a Unix epoch Timestamp\n(in milliseconds).\nIf startTimeMsecs and endTimeMsecs are not specified,\nthe time period is the last 7 days."
            name: "endTimeMsecs"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "VaultIds"
            description: "Filter by a list of Vault ids."
            name: "vaultIds"
            in: "query"
          - 
            type: "string"
            x-go-name: "OutputFormat"
            description: "Specifies the format for the output such as 'csv' or 'json'.\nIf not specified, the json format is returned.\nIf 'csv' is specified, a comma-separated list with a heading\nrow is returned."
            name: "outputFormat"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetDataTransferFromVaultsSummaryResponse"
          default: 
            $ref: "#/responses/Error"
    /public/reports/dataTransferToVaults: 
      get: 
        description: "A Vault can provide an additional Cloud Tier where cold data of the\nCohesity Cluster can be stored in the Cloud.\nA Vault can also provide archive storage for backup data.\nThis archive data is stored on Tapes and in Cloud Vaults."
        tags: 
          - "Reports"
        summary: "Get summary statistics about transferring data from the\nCohesity Cluster to Vaults (External Targets)."
        operationId: "GetDataTransferToVaultsReportRequest"
        parameters: 
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "VaultIds"
            description: "Filter by a list of Vault ids."
            name: "vaultIds"
            in: "query"
          - 
            type: "string"
            x-go-name: "OutputFormat"
            description: "Specifies the format for the output such as 'csv' or 'json'.\nIf not specified, the json format is returned.\nIf 'csv' is specified, a comma-separated list with a heading\nrow is returned."
            name: "outputFormat"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeMsecs"
            description: "Filter by a start time. Specify the start time as a Unix epoch Timestamp\n(in milliseconds).\nIf startTimeMsecs and endTimeMsecs are not specified,\nthe time period is the last 7 days."
            name: "startTimeMsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeMsecs"
            description: "Filter by end time. Specify the end time as a Unix epoch Timestamp\n(in milliseconds).\nIf startTimeMsecs and endTimeMsecs are not specified,\nthe time period is the last 7 days."
            name: "endTimeMsecs"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetDataTransferToVaultsSummaryResponse"
          default: 
            $ref: "#/responses/Error"
    /public/reports/protectionSourcesJobRuns: 
      get: 
        description: "Returns the Snapshots that contain backups of the specified\nProtection Source Objects and match the specified filter criteria."
        tags: 
          - "Reports"
        summary: "Get protection details about the specified list of leaf\nProtection Source Objects (such as a VMs)."
        operationId: "GetProtectionSourcesJobRunsReportRequest"
        parameters: 
          - 
            type: "array"
            items: 
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetapp"
                - "kGenericNas"
                - "kHyperV"
                - "kAcropolis"
                - "kAzure"
              type: "string"
            x-go-name: "Environments"
            description: "Filter by a list of environment types such as 'kVMware', 'kView', 'kSQL'\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp', 'kGenericNas',\n'kHyperV', 'kAcropolis', or 'kAzure'.\nSnapshots of leaf Protection Source Objects for the\nspecified environment types are returned.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
            name: "environments"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "ProtectionSourceIds"
            description: "Filter by a list of leaf Protection Sources Objects (such as VMs).\nSnapshots of the specified Protection Source Objects are returned."
            name: "protectionSourceIds"
            in: "query"
            required: true
          - 
            type: "string"
            x-go-name: "OutputFormat"
            description: "Specifies the format for the output such as 'cvs' or 'json'.\nIf not specified, the json format is returned.\nIf 'csv' is specified, a comma-separated list with a heading\nrow is returned."
            name: "outputFormat"
            in: "query"
          - 
            type: "integer"
            format: "int32"
            x-go-name: "PageCount"
            description: "Specifies the number of Snapshots to return in the response for\npagination purposes. Used in combination with the paginationCookie in\nthe response to return multiple sets of Snapshots."
            name: "pageCount"
            in: "query"
          - 
            type: "array"
            items: 
              enum: 
                - "kSuccess"
                - "kRunning"
                - "kWarning"
                - "kCancelled"
                - "kError"
              type: "string"
            x-go-name: "RunStatus"
            description: "Filter by a list of run statuses such as 'kRunning',\n'kSuccess', 'kFailure' etc.\nSnapshots of Job Runs with the specified run statuses are reported.\n'kSuccess' indicates that the Job Run was successful.\n'kRunning' indicates that the Job Run is currently running.\n'kWarning' indicates that the Job Run was successful but warnings were\nissued.\n'kCancelled' indicates that the Job Run was canceled.\n'kError' indicates the Job Run encountered an error and did not run to\ncompletion."
            name: "runStatus"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "JobIds"
            description: "Filter by a list of Job ids. Snapshots for the specified\nProtection Jobs are listed."
            name: "jobIds"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeUsecs"
            description: "Filter by a start time. Snapshots that started after the\nspecified time are returned.\nSpecify the start time as a Unix epoch Timestamp (in microseconds)."
            name: "startTimeUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeUsecs"
            description: "Filter by a end time. Snapshots that ended before the\nspecified time are returned.\nSpecify the end time as a Unix epoch Timestamp (in microseconds)."
            name: "endTimeUsecs"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/ProtectionSourcesJobRunsReportResponse"
          default: 
            $ref: "#/responses/Error"
    /public/reports/protectionSourcesJobsSummary: 
      get: 
        description: "For example, if two Job ids are passed in, Snapshot summary statistics about\nall the leaf Objects that have been protected by the two specified\nJobs are reported.\nFor example if a top level registered Source id is passed in, summary\nstatistics about all the Snapshots backing up leaf Objects in\nthe specified Source are reported."
        tags: 
          - "Reports"
        summary: "Get Job Run (Snapshot) summary statistics about the leaf Protection Sources\nObjects that match the specified filter criteria."
        operationId: "GetProtectionSourcesJobsSummaryReportRequest"
        parameters: 
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "ProtectionSourceIds"
            description: "Filter by a list of leaf Protection Sources Objects (such as VMs).\nSnapshot summary statistics for the listed Protection Source Objects\nare reported."
            name: "protectionSourceIds"
            in: "query"
          - 
            type: "array"
            items: 
              enum: 
                - "kSuccess"
                - "kRunning"
                - "kWarning"
                - "kCancelled"
                - "kError"
              type: "string"
            x-go-name: "Statuses"
            description: "Filter by a list of run statuses.\n'kSuccess' indicates that the Job Run was successful.\n'kRunning' indicates that the Job Run is currently running.\n'kWarning' indicates that the Job Run was successful but warnings were\nissued.\n'kCancelled' indicates that the Job Run was canceled.\n'kError' indicates the Job Run encountered an error and did not run to\ncompletion."
            name: "statuses"
            in: "query"
          - 
            type: "string"
            x-go-name: "OutputFormat"
            description: "Specifies the format for the output such as 'csv' or 'json'.\nIf not specified, the json format is returned.\nIf 'csv' is specified, a comma-separated list with a heading\nrow is returned."
            name: "outputFormat"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "RegisteredEntityId"
            description: "Specifies an id of a top level Registered Source such as\na vCenter Server. If specified, Snapshot summary statistics for all\nthe leaf Protection Sources (such as VMs) that are children of this\nRegistered Source are reported.\nNOTE: If specified, filtering by other fields is not supported."
            name: "registeredSourceId"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "JobIds"
            description: "Filter by a list of Job ids. Snapshots summary statistics\nfor the specified Protection Jobs are reported."
            name: "jobIds"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeUsecs"
            description: "Filter by a start time. Snapshot summary statistics\nfor Job Runs that started after the specified time are reported.\nSpecify the start time as a Unix epoch Timestamp (in microseconds)."
            name: "startTimeUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeUsecs"
            description: "Filter by end time. Snapshot summary statistics\nfor Job Runs that ended before the specified time are returned.\nSpecify the end time as a Unix epoch Timestamp (in microseconds)."
            name: "endTimeUsecs"
            in: "query"
          - 
            type: "array"
            items: 
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetapp"
              type: "string"
            x-go-name: "Environments"
            description: "Filter by a list of environment types such as 'kVMware', 'kView', 'kSQL'\n'kPuppeteer', 'kPhysical', 'kPure', or 'kNetapp'.\nSnapshot summary statistics about the leaf Protection Source\nObjects of specified environment types are reported.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
            name: "environments"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/ProtectionSourcesJobsSummaryReportResponse"
          default: 
            $ref: "#/responses/Error"
    /public/reports/restoreSummaryByObjectType: 
      get: 
        tags: 
          - "Reports"
        operationId: "GetRestoreSummaryByObjectTypeReport"
        parameters: 
          - 
            type: "string"
            x-go-name: "RecoverTaskName"
            description: "Specifies the recover task name."
            name: "recoverTaskName"
            in: "query"
          - 
            enum: 
              - "kReadyToSchedule"
              - "kProgressMonitorCreated"
              - "kRetrievedFromArchive"
              - "kAdmitted"
              - "kInProgress"
              - "kFinishingProgressMonitor"
              - "kFinished"
            type: "string"
            x-go-name: "Status"
            description: "Specifies the overall status of the Restore Task to filter.\n'kReadyToSchedule' indicates the Restore Task is waiting to be scheduled.\n'kProgressMonitorCreated' indicates the progress monitor for the\nRestore Task has been created.\n'kRetrievedFromArchive' indicates that the objects to restore have been\nretrieved from the specified archive. A Task will only ever transition to\nthis state if a retrieval is necessary.\n'kAdmitted' indicates the task has been admitted. After a task has been\nadmitted, its status does not move back to 'kReadyToSchedule' state\neven if it is rescheduled.\n'kInProgress' indicates that the Restore Task is in progress.\n'kFinishingProgressMonitor' indicates that the Restore Task is\nfinishing its progress monitoring.\n'kFinished' indicates that the Restore Task has finished.\nThe status indicating success or failure is found in the error code that\nis stored with the Restore Task."
            name: "status"
            in: "query"
          - 
            type: "string"
            x-go-name: "OutputFormat"
            description: "Specifies the format for the output such as 'csv' or 'json'.\nIf not specified, the json format is returned.\nIf 'csv' is specified, a comma-separated list with a heading\nrow is returned."
            name: "outputFormat"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeUsecs"
            description: "Filter by a start time specified as a Unix epoch Timestamp\n(in microseconds)."
            name: "startTimeUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeUsecs"
            description: "Filter by an end time specified as a Unix epoch Timestamp\n(in microseconds)."
            name: "endTimeUsecs"
            in: "query"
          - 
            enum: 
              - "kRecoverVMs"
              - "kCloneVMs"
              - "kCloneView"
              - "kMountVolumes"
              - "kRestoreFiles"
            type: "string"
            x-go-name: "Type"
            description: "Specify the object type to filter with.\nSpecifies the type of Restore Task.\n\n'kRecoverVMs' specifies a Restore Task that recovers VMs.\n'kCloneVMs' specifies a Restore Task that clones VMs.\n'kCloneView' specifies a Restore Task that clones a View.\n'kMountVolumes' specifies a Restore Task that mounts volumes.\n'kRestoreFiles' specifies a Restore Task that recovers files and folders."
            name: "type"
            in: "query"
          - 
            type: "string"
            x-go-name: "UserName"
            description: "Specify the user name to filter with."
            name: "userName"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "RecoveredFrom"
            description: "Specifies the targets from which the recovery happend."
            name: "recoveredFrom"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetRestoreSummaryByObjectTypeReportResponse"
          default: 
            $ref: "#/responses/Error"
    /public/restore/applicationsClone: 
      post: 
        description: "Returns the created Restore Task."
        tags: 
          - "RestoreTasks"
        summary: "Create a Restore Task for cloning Applications like SQL Databases."
        operationId: "CreateApplicationsCloneTask"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a Restore Task for cloning Applications like SQL DB."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/ApplicationsRestoreTaskRequest"
        responses: 
          201: 
            $ref: "#/responses/CreateCloneTaskResponse"
          default: 
            $ref: "#/responses/Error"
    /public/restore/applicationsRecover: 
      post: 
        description: "Returns the created Restore Task."
        tags: 
          - "RestoreTasks"
        summary: "Create a Restore Task for recovering Applications like SQL Databases."
        operationId: "CreateApplicationsRecoverTask"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a Restore Task for recovering Applications like SQL DB.\nvolumes to mount points."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/ApplicationsRestoreTaskRequest"
        responses: 
          201: 
            $ref: "#/responses/CreateRecoverTaskResponse"
          default: 
            $ref: "#/responses/Error"
    /public/restore/clone: 
      post: 
        description: "Returns the created Restore Task that clones VMs or a View."
        tags: 
          - "RestoreTasks"
        summary: "Create a Restore Task for cloning VMs or a View."
        operationId: "CreateCloneTask"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a Restore Task for cloning VMs or a View."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/CloneTaskRequest"
        responses: 
          201: 
            $ref: "#/responses/CreateCloneTaskResponse"
          default: 
            $ref: "#/responses/Error"
    /public/restore/files: 
      get: 
        description: "Use the files and folders returned by this operation to populate the\nlist of files and folders to recover in the\nPOST /public/restore/files operation.\nIf no search pattern or filter parameters are specified, all files\nand folders currently found on the Cohesity Cluster are returned.\nSpecify a search pattern or parameters to filter the results that\nare returned.\n\nThe term \"items\" below refers to files and folders that are found\nin the source objects (such as VMs)."
        tags: 
          - "RestoreTasks"
        summary: "Search for files and folders to recover that match the specified search\nand filter criteria on the Cohesity Cluster."
        operationId: "SearchRestoredFiles"
        parameters: 
          - 
            type: "array"
            items: 
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetap"
                - "kGenericNas"
              type: "string"
            x-go-name: "Environments"
            description: "Filter by environment types such as 'kVMware', 'kView', 'kSQL',\n'kPuppeteer', 'kPhysical', 'kPure' 'kNetapp' or 'kGenericNas'.\nOnly items from the specified environment types are returned.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
            name: "environments"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartIndex"
            description: "Specifies an index number that can be used to return subsets of items\nin multiple requests.\nBreak up the items to return into multiple requests\nby setting pageCount and using startIndex to return a subsets of items.\nFor example, set startIndex to 0 to get the first set of items\nfor the first request. Increment startIndex by pageCount\nto get the next set of items for a next request.\nContinue until all items are returned and therefore the total number of\nreturned items is equal to totalCount."
            name: "startIndex"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "PageCount"
            description: "Limit the number of items to return in the response for pagination\npurposes."
            name: "pageCount"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "JobIds"
            description: "Filter by a list of Protection Job ids.\nOnly items backed up by the specified Jobs are listed."
            name: "jobIds"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "RegisteredSourceIds"
            description: "Filter by a list of Registered Sources ids. Only items\nfrom the listed Registered Sources are returned."
            name: "registeredSourceIds"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeUsecs"
            description: "Filter by backup completion time by specifying a backup\ncompletion start and end times. Specified as a Unix epoch\nTimestamp (in microseconds).\nOnly items created by backups that completed between the\nspecified start and end times are returned."
            name: "startTimeUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeUsecs"
            description: "Filter by backup completion time by specify a backup\ncompletion start and end times. Specified as a Unix epoch\nTimestamp (in microseconds).\nOnly items created by backups that completed between the\nspecified start and end times are returned."
            name: "endTimeUsecs"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "SourceIds"
            description: "Filter by source ids. Only files and folders found in the listed sources\n(such as VMs) are returned."
            name: "sourceIds"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "FolderOnly"
            description: "Filter by folders or files. If true, only folders are returned.\nIf false, only files are returned. If not specified, both\nfiles and folders are returned."
            name: "folderOnly"
            in: "query"
          - 
            type: "string"
            x-go-name: "Search"
            description: "Filter by searching for sub-strings in the item name. The specified\nstring can match any part of the item name.\nFor example: \"vm\" or \"123\" both match the item name of \"vm-123\"."
            name: "search"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "ViewBoxIds"
            description: "Filter by a list of Domains (View Boxes) ids.\nOnly items stored in the listed Domains (View Boxes) are returned."
            name: "viewBoxIds"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/SearchRestoredFilesResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns the created Restore Task that recovers files and folders."
        tags: 
          - "RestoreTasks"
        summary: "Create a Restore Task for recovering files and folders."
        operationId: "CreateRestoreFilesTask"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a Restore Task for recovering files or folders."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/RestoreFilesTaskRequest"
        responses: 
          201: 
            $ref: "#/responses/CreateRestoreFilesTaskResponse"
          default: 
            $ref: "#/responses/Error"
    /public/restore/files/snapshotsInformation: 
      get: 
        tags: 
          - "RestoreTasks"
        summary: "Get the information about snapshots that contain the specified file or folder. In addition, information about the file or folder is provided."
        operationId: "GetFileSnapshotsInformation"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "ClusterIncarnationId"
            description: "Specifies the incarnation id of the Cohesity Cluster where the Job\nwas created.\nAn incarnation id is generated when a Cohesity Cluster is initially\ncreated. This field is required."
            name: "clusterIncarnationId"
            in: "query"
            required: true
          - 
            type: "integer"
            format: "int64"
            x-go-name: "SourceId"
            description: "Specifies the id of the Protection Source object (such as a VM) to search.\nWhen a Job Run executes, snapshots of the specified Protection Source\nobject are captured. This operation searches the snapshots of the\nobject for the file or folder. This field is required."
            name: "sourceId"
            in: "query"
            required: true
          - 
            type: "string"
            x-go-name: "Filename"
            description: "Specifies the name of the file or folder to find in the snapshots.\nThis field is required."
            name: "filename"
            in: "query"
            required: true
          - 
            type: "integer"
            format: "int64"
            x-go-name: "JobId"
            description: "Specifies the id of the Job that captured the snapshots.\nThese snapshots are searched for the specified files or folders.\nThis field is required."
            name: "jobId"
            in: "query"
            required: true
          - 
            type: "integer"
            format: "int64"
            x-go-name: "ClusterId"
            description: "Specifies the Cohesity Cluster id where the Job was created.\nThis field is required."
            name: "clusterId"
            in: "query"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetFileSnapshotsInformationResponse"
          default: 
            $ref: "#/responses/Error"
    /public/restore/objects: 
      get: 
        description: "If no search pattern or filter parameters are specified, all backup objects\ncurrently found on the Cohesity Cluster are returned.\nOnly leaf objects that have been protected by a Job are returned such as VMs,\nViews and databases.\nSpecify a search pattern or parameters to filter the results that\nare returned.\n\nThe term \"items\" below refers to leaf backup objects such as VMs,\nViews and databases."
        tags: 
          - "RestoreTasks"
        summary: "Find backup objects that match the specified search and filter criteria\non the Cohesity Cluster."
        operationId: "SearchObjects"
        parameters: 
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "OperatingSystems"
            description: "Filter by the Operating Systems running on VMs and Physical Servers.\nThis filter is applicable only to VMs and physical servers."
            name: "operatingSystems"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "OwnerEntityId"
            description: "Filter objects by the Entity id of the owner VM. For example, if a\nownerEntityId is provided while searching for SQL databases,\nonly SQL databases belonging to the VM with the specified id\nare returned.\nownerEntityId is only significant if application is set to SQL."
            name: "ownerEntityId"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "JobIds"
            description: "Filter by a list of Protection Job ids.\nOnly items backed up by the specified Jobs are listed."
            name: "jobIds"
            in: "query"
          - 
            type: "array"
            items: 
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetap"
                - "kGenericNas"
                - "kHyperV"
                - "kAcropolis"
                - "kAzure"
              type: "string"
            x-go-name: "Environments"
            description: "Filter by environment types such as 'kVMware', 'kView', 'kSQL',\n'kPuppeteer', 'kPhysical', 'kPure' 'kNetapp' 'kGenericNas', 'kHyperV',\n'kAcropolis', or 'kAzure'.\nOnly items from the specified environment types are returned.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
            name: "environments"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeUsecs"
            description: "Filter by backup completion time by specify a backup\ncompletion start and end times. Specified as a Unix epoch\nTimestamp (in microseconds).\nOnly items created by backups that completed between the\nspecified start and end times are returned."
            name: "endTimeUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "PageCount"
            description: "Limit the number of items to return in the response for pagination\npurposes."
            name: "pageCount"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartIndex"
            description: "Specifies an index number that can be used to return subsets of items\nin multiple requests.\nBreak up the items to return into multiple requests\nby setting pageCount and using startIndex to return a subsets of items.\nFor example, set startIndex to 0 to get the first set of items\nfor the first request. Increment startIndex by pageCount\nto get the next set of items for a next request.\nContinue until all items are returned and therefore the total number of\nreturned items is equal to totalCount."
            name: "startIndex"
            in: "query"
          - 
            type: "string"
            x-go-name: "Application"
            description: "Filter by application when the environment type is kSQL.\nFor example, if SQL is specified the SQL databases are returned."
            name: "application"
            in: "query"
          - 
            type: "string"
            x-go-name: "Search"
            description: "Filter by searching for sub-strings in the item name. The specified\nstring can match any part of the item name.\nFor example: \"vm\" or \"123\" both match the item name of \"vm-123\"."
            name: "search"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "RegisteredSourceIds"
            description: "Filter by a list of Registered Sources ids. Only items\nfrom the listed Registered Sources are returned."
            name: "registeredSourceIds"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "ViewBoxIds"
            description: "Filter by a list of Domains (View Boxes) ids.\nOnly items stored in the listed Domains (View Boxes) are returned."
            name: "viewBoxIds"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeUsecs"
            description: "Filter by backup completion time by specifying a backup\ncompletion start and end times. Specified as a Unix epoch\nTimestamp (in microseconds).\nOnly items created by backups that completed between the\nspecified start and end times are returned."
            name: "startTimeUsecs"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/SearchObjectsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/restore/recover: 
      post: 
        description: "Returns the created Restore Task. This operation returns the following\ntypes of Restore Tasks: 1) A Restore Task that recovers VMs back to the\noriginal location or a new location. 2) A Restore Task that mounts the\nvolumes of a Server (such as a VM or Physical Server) onto the specified\ntarget system. The Snapshots of the Server that contains the volumes\nthat are mounted is determined by Array of Objects.\nThe content of the Server is available from the mount point\nfor the Granular Level Recovery (GLR) of application data. For example\nrecovering Microsoft Exchange data using Kroll Ontrack® PowerControls™.\n\nNOTE: Volumes are mounted \"instantly\" if the Snapshot is stored locally on the\nCohesity Cluster. If the Snapshot is archival target, it will take longer\nbecause it must be retrieved."
        tags: 
          - "RestoreTasks"
        summary: "Create a Restore Task for recovering VMs or instantly mounting volumes."
        operationId: "CreateRecoverTask"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a Restore Task for recovering VMs or mounting\nvolumes to mount points."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/RecoverTaskRequest"
        responses: 
          201: 
            $ref: "#/responses/CreateRecoverTaskResponse"
          default: 
            $ref: "#/responses/Error"
    /public/restore/tasks: 
      get: 
        description: "If no parameters are specified, all Restore Tasks found\non the Cohesity Cluster are returned. Both running and completed\nRestore Tasks are reported.\nSpecifying parameters filters the results that are returned."
        tags: 
          - "RestoreTasks"
        summary: "List the Restore Tasks filtered by the specified parameters."
        operationId: "GetRestoreTasks"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeUsecs"
            description: "Filter by an end time specified as a Unix epoch Timestamp\n(in microseconds). All Restore Tasks (both completed and running)\non the Cohesity Cluster that started after the specified start time\nbut before the specified end time are returned.\nIf not set, the end time is the current time."
            name: "endTimeUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "PageCount"
            description: "Specifies the number of completed Restore Tasks to return in the response\nfor pagination purposes. Running Restore Tasks are always returned.\nThe newest completed Restore Tasks are returned."
            name: "pageCount"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "TaskTypes"
            description: "Filter by the types of Restore Tasks such as 'kRecoverVMs',\n'kCloneVMs', 'kCloneView' or 'kMountVolumes'."
            name: "taskTypes"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "TaskIds"
            description: "Filter by a list of Restore Task ids."
            name: "taskIds"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeUsecs"
            description: "Filter by a start time specified as a Unix epoch Timestamp\n(in microseconds). All Restore Tasks (both completed and running)\non the Cohesity Cluster that started after the specified start time\nbut before the specified end time are returned.\nIf not set, the start time is creation time of the Cohesity Cluster."
            name: "startTimeUsecs"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetRestoreTasksResponse"
          default: 
            $ref: "#/responses/Error"
    /public/restore/tasks/cancel/{id}: 
      put: 
        tags: 
          - "RestoreTasks"
        summary: "Cancel a recover or clone task with specified id."
        operationId: "CancelRestoreTask"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id for the Restore Task."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/SuccessResponse"
          default: 
            $ref: "#/responses/Error"
    /public/restore/tasks/{id}: 
      get: 
        description: "Returns the Restore Task corresponding to the specified Restore Task id."
        tags: 
          - "RestoreTasks"
        summary: "List details about a single Restore Task."
        operationId: "GetRestoreTaskById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id for the Restore Task."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetRestoreTaskByIdResponse"
          default: 
            $ref: "#/responses/Error"
    /public/restore/vms/volumesInformation: 
      get: 
        description: "All fields must be specified for this operation.\nTo get values for these fields, invoke the GET /public/restore/objects\noperation.\nA specific Job Run is defined by the jobRunId, startedTimeUsecs, and\nattemptNumber fields."
        tags: 
          - "RestoreTasks"
        summary: "Get information about the logical volumes found in a VM."
        operationId: "GetVmVolumesInformation"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "OriginalJobId"
            description: "Specifies the id for the Protection Job that originally captured\nthe snapshots of the original object. If the object was backed up\non a Primary Cluster replicated to this Cohesity Cluster,\nand a new Inactive Job is created,\nthis field still contains the id of the original Job and NOT the\nid of the new Inactive Job.\nThis field is used in combination with the clusterId and\nclusterIncarnationId to uniquely identify a Job."
            name: "originalJobId"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "SupportedVolumesOnly"
            description: "Specifies to return only supported volumes information. Unsupported\nvolumes are not returned if this flag is set to true.\nDefault is false."
            name: "supportedVolumesOnly"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "JobId"
            description: "Specifies the Job id for the Protection Job that is currently\nassociated with the object.\nIf the object was backed up on current Cohesity Cluster, this field\ncontains the id for the Job that captured this backup object.\nIf the object was backed up on a Primary Cluster and\nreplicated to this Cohesity Cluster, a new Inactive Job is created,\nthe object is now associated with new Inactive Job, and this field\ncontains the id of the new Inactive Job."
            name: "jobId"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "ClusterId"
            description: "Specifies the Cohesity Cluster id where the Job was created."
            name: "clusterId"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "ClusterIncarnationId"
            description: "Specifies the incarnation id of the Cohesity Cluster where the Job\nwas created.\nAn incarnation id is generated when a Cohesity Cluster is initially\ncreated."
            name: "clusterIncarnationId"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "JobRunId"
            description: "Specifies the id of the Job Run that captured the snapshot."
            name: "jobRunId"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartedTimeUsecs"
            description: "Specifies the time when the Job Run starts capturing a snapshot.\nSpecified as a Unix epoch Timestamp (in microseconds)."
            name: "startedTimeUsecs"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "AttemptNumber"
            description: "Specifies the number of the attempts made by the Job Run\nto capture a snapshot of the object. For example, if an snapshot\nis successfully captured after three attempts, this field equals 3."
            name: "attemptNumber"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "SourceId"
            description: "Specifies the id of the VM object to search for volumes."
            name: "sourceId"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetVmVolumesInformationResponse"
          default: 
            $ref: "#/responses/Error"
    /public/roles: 
      get: 
        description: "If the 'name' parameter is not specified, all roles defined on the\nCohesity Cluster are returned. In addition, information about each role\nis returned such as the name, description, assigned privileges, etc.\nIf an exact role name (such as COHESITY_VIEWER) is specified in the\n'name' parameter, only information about that single role is returned."
        tags: 
          - "Roles"
        summary: "List the roles defined on the Cohesity Cluster."
        operationId: "GetRoles"
        parameters: 
          - 
            type: "string"
            x-go-name: "Name"
            description: "Specifies the name of the role."
            name: "name"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetRolesResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns the new custom role that was created.\nA custom role is a user-defined role that is created using the REST API,\nthe Cohesity Cluster or the CLI."
        tags: 
          - "Roles"
        summary: "Create a new custom role."
        operationId: "CreateRole"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a new custom Role."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/RoleCreateParameters"
        responses: 
          201: 
            $ref: "#/responses/CreateRoleResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns Success if all the specified Roles are deleted."
        tags: 
          - "Roles"
        summary: "Delete one or more custom Roles."
        operationId: "DeleteRoles"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to delete one or more Roles."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/RoleDeleteParameters"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/roles/{name}: 
      put: 
        description: "For example, you could update the privileges assigned to a Role.\nReturns the updated role."
        tags: 
          - "Roles"
        summary: "Update a user-defined custom role."
        operationId: "UpdateRole"
        parameters: 
          - 
            type: "string"
            x-go-name: "Name"
            description: "Specifies the name of the role to update."
            name: "name"
            in: "path"
            required: true
          - 
            x-go-name: "Body"
            description: "Request to update a custom role."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/RoleUpdateParameters"
        responses: 
          200: 
            $ref: "#/responses/UpdateRoleResponse"
          default: 
            $ref: "#/responses/Error"
    /public/scheduler: 
      get: 
        description: "Returns all the email report scheduler jobs that are scheduled to run.\nAn email report scheduler job generates a report with the specified parameters\nand sends that report to the specified email accounts according to the defined\nschedule."
        tags: 
          - "Scheduler"
        summary: "List the email report schedule jobs that are scheduled to run."
        operationId: "GetSchedulerJobs"
        responses: 
          200: 
            $ref: "#/responses/GetSchedulerJobsResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the updated email report scheduler job."
        tags: 
          - "Scheduler"
        summary: "Update an existing email report schedule job."
        operationId: "UpdateSchedulerJob"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Update Job Parameter."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/SchedulerProto_SchedulerJob"
        responses: 
          200: 
            $ref: "#/responses/UpdateSchedulerJobResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns the created email report scheduler job.\nAn email report scheduler job generates a report with the specified parameters\nand sends that report to the specified email accounts according to the defined\nschedule.\nThis operation may also be used to send a report once (with no schedule),\nby setting the EnableRecurring field to false."
        tags: 
          - "Scheduler"
        summary: "Create an email report scheduler job."
        operationId: "CreateSchedulerJob"
        parameters: 
          - 
            x-go-name: "Body"
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/SchedulerProto_SchedulerJob"
        responses: 
          200: 
            $ref: "#/responses/EmailReportResponse"
          201: 
            $ref: "#/responses/CreateSchedulerJobResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Specify a list of email report schedule job ids to unschedule and delete."
        tags: 
          - "Scheduler"
        summary: "Delete one or more email report schedule jobs."
        operationId: "DeleteSchedulerJobs"
        parameters: 
          - 
            x-go-name: "Ids"
            description: "Array of ids"
            name: "ids"
            in: "body"
            schema: 
              type: "array"
              items: 
                type: "integer"
                format: "int64"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/sessionUser/notifications: 
      get: 
        tags: 
          - "Notifications"
        summary: "List the notification of the session user."
        operationId: "GetNotifications"
        responses: 
          200: 
            $ref: "#/responses/GetNotificationsResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns success or failure."
        tags: 
          - "Notifications"
        summary: "Perform operations on the notification of the session user."
        operationId: "UpdateNotifications"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/sessionUser/preferences: 
      get: 
        tags: 
          - "Preferences"
        summary: "List the preferences of the session user."
        operationId: "GetUserPreferences"
        responses: 
          200: 
            $ref: "#/responses/GetUserPreferencesResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the updated user preferences."
        tags: 
          - "Preferences"
        summary: "Update the preferences of the session user"
        operationId: "UpdateUserPreferences"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create or update User Preferences"
            name: "body"
            in: "body"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/UserPreferencesProto_UserPreferences_Preference"
        responses: 
          200: 
            $ref: "#/responses/UpdateUserPreferencesResponse"
          default: 
            $ref: "#/responses/Error"
    /public/shares: 
      get: 
        description: "If no parameters are specified, all shares on the Cohesity Cluster are\nreturned. Specifying share name/prefix filters the results that are returned.\nNOTE: If maxCount is set and the number of Views returned exceeds the maxCount,\nthere are more Views to return.\nTo get the next set of Views, send another request and specify the pagination\ncookie from the previous response."
        tags: 
          - "Views"
        summary: "List shares filtered by name."
        operationId: "GetViewsByShareName"
        parameters: 
          - 
            type: "string"
            x-go-name: "ShareName"
            description: "The share name(substring) that needs to be searched against existing views\nand aliases."
            name: "shareName"
            in: "query"
          - 
            type: "integer"
            format: "int32"
            x-go-name: "MaxCount"
            description: "Specifies a limit on the number of Views returned."
            name: "maxCount"
            in: "query"
          - 
            type: "string"
            x-go-name: "PaginationCookie"
            description: "Expected to be empty in the first call to GetViewsByShareName.\nTo get the next set of results, set this value to the pagination cookie\nvalue returned  in the response of the previous call."
            name: "paginationCookie"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetViewsByShareNameResponse"
          default: 
            $ref: "#/responses/Error"
    /public/smbFileOpens: 
      get: 
        description: "If no parameters are specified, all active SMB file opens currently on the\nCohesity Cluster are returned. Specifying parameters filters the results that\nare returned."
        tags: 
          - "SMBFileOpens"
        summary: "List the active SMB file opens that match the filter criteria specified using\nparameters."
        operationId: "GetSmbFileOpens"
        parameters: 
          - 
            type: "string"
            x-go-name: "FilePath"
            description: "Specifies the filepath in the view relative to the root filesystem.\nIf this field is specified, viewName field must also be specified."
            name: "filePath"
            in: "query"
          - 
            type: "string"
            x-go-name: "ViewName"
            description: "Specifies the name of the View in which to search. If a view name is not\nspecified, all the views in the Cluster is searched.\nThis field is mandatory if filePath field is specified."
            name: "viewName"
            in: "query"
          - 
            type: "integer"
            format: "int32"
            x-go-name: "PageCount"
            description: "Specifies the maximum number of active opens to return in the response.\nThis field cannot be set above 1000. If this is not set, maximum of 1000\nentries are returned."
            name: "pageCount"
            in: "query"
          - 
            type: "string"
            x-go-name: "Cookie"
            description: "Specifies the opaque string returned in the previous response.\nIf this is set, next set of active opens just after the previous\nresponse are returned. If this is not set, first set of active opens\nare returned."
            name: "cookie"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetSmbFileOpensResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns nothing upon success."
        tags: 
          - "SMBFileOpens"
        summary: "Closes an active SMB file open."
        operationId: "CloseSmbFileOpen"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to close an active SMB file open."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/CloseSmbFileOpenParameters"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/staticRoutes: 
      get: 
        description: "Returns the Static Routes for the Cohesity Cluster."
        tags: 
          - "StaticRoute"
        summary: "List the Static Routes for the Cohesity Cluster."
        operationId: "GetStaticRoutes"
        responses: 
          200: 
            $ref: "#/responses/GetStaticRoutesResponse"
          default: 
            $ref: "#/responses/Error"
    /public/staticRoutes/{ip}: 
      put: 
        description: "Returns the created or updated Static Route on the Cohesity Cluster."
        tags: 
          - "StaticRoute"
        summary: "Create or update a Static Route on the Cohesity Cluster."
        operationId: "UpdateStaticRoute"
        parameters: 
          - 
            type: "string"
            x-go-name: "Ip"
            description: "Specifies the subnet IP of the route destination network."
            name: "ip"
            in: "path"
            required: true
          - 
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/StaticRoute"
        responses: 
          200: 
            $ref: "#/responses/UpdateStaticRouteResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns the delete status upon completion."
        tags: 
          - "StaticRoute"
        summary: "Remove the specified Static Route from the Cohesity Cluster."
        operationId: "RemoveStaticRoute"
        parameters: 
          - 
            type: "string"
            x-go-name: "Ip"
            description: "Specifies the subnet IP of the route destination network."
            name: "ip"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/statistics/entities: 
      get: 
        description: "An entity is an object found on the Cohesity Cluster, such as a disk or a\nNode.\nIn the Cohesity Dashboard, similar functionality is provided in Advanced\nDiagnostics."
        tags: 
          - "Statistics"
        summary: "Lists the entities for the specified schema."
        operationId: "GetEntities"
        parameters: 
          - 
            type: "boolean"
            x-go-name: "IncludeAggrMetricSources"
            description: "Specifies whether to include the sources of aggregate metrics of an\nentity."
            name: "includeAggrMetricSources"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "MetricNames"
            description: "Specifies the list of metric names to return such as 'kRandomIos'\nwhich corresponds to 'Random IOs' in Advanced Diagnostics\nof the Cohesity Dashboard."
            name: "metricNames"
            in: "query"
          - 
            type: "string"
            x-go-name: "SchemaName"
            description: "Specifies the entity schema to search for entities."
            name: "schemaName"
            in: "query"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetEntitiesResponse"
          default: 
            $ref: "#/responses/Error"
    /public/statistics/entitiesSchema: 
      get: 
        description: "An entity schema specifies the meta-data associated with entity such as\nthe list of attributes and a time series of data.\nFor example for a Disk entity, the entity schema specifies the Node that is\nusing this Disk, the type of the Disk, and Metrics about the Disk such as Space\nUsage, Read IOs and Write IOs. Metrics define data points (time series data)\nto track over a period of time for a specific interval.\nIf no parameters are specified, all entity schemas found on the Cohesity\nCluster are returned.\nSpecifying parameters filters the results that are returned.\nIn the Cohesity Dashboard, similar functionality is provided in Advanced\nDiagnostics."
        tags: 
          - "Statistics"
        summary: "List the entity schemas filtered by the specified parameters."
        operationId: "GetEntitiesSchema"
        parameters: 
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "SchemaNames"
            description: "Specifies the list of schema names to filter by such as\n'kIceboxJobVaultStats' which corresponds to 'External Target Job Stats'\nin Advanced Diagnostics of the Cohesity Dashboard."
            name: "schemaNames"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "MetricNames"
            description: "Specifies the list of metric names to filter by such as 'kRandomIos'\nwhich corresponds to 'Random IOs' in Advanced Diagnostics\nof the Cohesity Dashboard."
            name: "metricNames"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetEntitiesSchemaResponse"
          default: 
            $ref: "#/responses/Error"
    /public/statistics/entitiesSchema/{schemaName}: 
      get: 
        description: "An entity schema specifies the meta-data associated with entity such as the\nlist of attributes and a time series of data.\nFor example for a Disk entity, the entity schema specifies the Node that is\nusing this Disk, the type of the Disk, and Metrics about the Disk such as\nSpace Usage, Read IOs and Write IOs. Metrics define data points (time series\ndata) to track over a period of time for a specific interval.\nIn the Cohesity Dashboard, similar functionality is provided in Advanced\nDiagnostics."
        tags: 
          - "Statistics"
        summary: "Get the entity schema for the specified schema."
        operationId: "GetEntitySchemaByName"
        parameters: 
          - 
            type: "string"
            x-go-name: "SchemaName"
            description: "Name of the Schema"
            name: "schemaName"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetEntitySchemaByNameResponse"
          default: 
            $ref: "#/responses/Error"
    /public/statistics/timeSeriesStats: 
      get: 
        description: "A Metric specifies a data point (such as CPU usage and IOPS) to track over a\nperiod of time.\nFor example for a disk in the Cluster, you can report on the 'Disk Health'\n(kDiskAwaitTimeMsecs) Metric of the 'Disk Health Metrics' (kSentryDiskStats)\nSchema for the last week.\nYou must specify the 'k' names as input and not the descriptive names.\nYou must also specify the id of the entity that you are reporting on such as\na Cluster, disk drive, job, etc.\nGet the entityId by running the GET /public/statistics/entities operation.\nIn the Cohesity Dashboard, similar functionality is provided in Advanced\nDiagnostics."
        tags: 
          - "Statistics"
        summary: "List a series of data points for an entity of a metric in a schema,\nduring the specified time period."
        operationId: "GetTimeSeriesStats"
        parameters: 
          - 
            type: "string"
            x-go-name: "RollupFunction"
            description: "Specifies the rollup function to apply to the data points for\nthe time interval specified by rollupInternalSecs.\nThe following rollup functions are available:\nsum, average, count, max, min, median, percentile95, latest,\nand rate. For more information about the functions, see the\nAdvanced Diagnostics in the Cohesity online help.\nIf not specified, raw data is returned."
            name: "rollupFunction"
            in: "query"
          - 
            type: "integer"
            format: "int32"
            x-go-name: "RollupIntervalSecs"
            description: "Specifies the time interval granularity (in seconds)\nfor the specified rollup function.\nOnly specify a value if Rollup function is also specified."
            name: "rollupIntervalSecs"
            in: "query"
          - 
            type: "string"
            x-go-name: "SchemaName"
            description: "Specifies the name of entity schema such as 'kIceboxJobVaultStats'."
            name: "schemaName"
            in: "query"
            required: true
          - 
            type: "string"
            x-go-name: "EntityId"
            description: "Specifies the id of the entity represented as a string.\nGet the entityId by running the GET\npublic/statistics/entities operation."
            name: "entityId"
            in: "query"
            required: true
          - 
            type: "string"
            x-go-name: "MetricName"
            description: "Specifies the name of the metric such as the 'kDiskAwaitTimeMsecs'\nwhich is displayed as 'Disk Health' in Advanced Diagnostics\nof the Cohesity Dashboard."
            name: "metricName"
            in: "query"
            required: true
          - 
            type: "integer"
            format: "int64"
            x-go-name: "StartTimeMsecs"
            description: "Specifies the start time for the series of metric data.\nSpecify the start time as a Unix epoch Timestamp (in milliseconds)."
            name: "startTimeMsecs"
            in: "query"
            required: true
          - 
            type: "integer"
            format: "int64"
            x-go-name: "EndTimeMsecs"
            description: "Specifies the end time for the series of metric data.\nSpecify the end time as a Unix epoch Timestamp (in milliseconds).\nIf not specified, the data points up to the current time are returned."
            name: "endTimeMsecs"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetTimeSeriesStatsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/users: 
      get: 
        description: "If no parameters are specified, all users currently on the Cohesity Cluster\nare returned. Specifying parameters filters the results that are returned."
        tags: 
          - "Principals"
        summary: "List the users on the Cohesity Cluster that match the filter criteria\nspecified using parameters."
        operationId: "GetUsers"
        parameters: 
          - 
            type: "string"
            x-go-name: "Domain"
            description: "Optionally specify a domain to filter by.\nIf no domain is specified, all users on the Cohesity Cluster are searched.\nIf a domain is specified, only users on the Cohesity Cluster\nassociated with that domain are searched."
            name: "domain"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "Usernames"
            description: "Optionally specify a list of usernames to filter by."
            name: "usernames"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "EmailAddresses"
            description: "Optionally specify a list of email addresses to filter by."
            name: "emailAddresses"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetUsersResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the user that was updated on the Cohesity Cluster."
        tags: 
          - "Principals"
        summary: "Update an existing user on the Cohesity Cluster. Only user settings\non the Cohesity Cluster are updated. No changes are made to the\nreferenced user principal on the Active Directory."
        operationId: "UpdateUser"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to update an existing user."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/UserParameters"
        responses: 
          200: 
            $ref: "#/responses/UpdateUserResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "If an Active Directory domain is specified, a new user is added to the\nCohesity Cluster for the specified Active Directory user principal.\nIf the LOCAL domain is specified, a new user is created directly in\nthe default LOCAL domain on the Cohesity Cluster.\n\nReturns the created or added user."
        tags: 
          - "Principals"
        summary: "Create or add a new user to the Cohesity Cluster."
        operationId: "CreateUser"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to add or create a new user."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/UserParameters"
        responses: 
          201: 
            $ref: "#/responses/CreateUserResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Only users from the same domain can be deleted by a single request.\nIf the Cohesity user was created for an Active Directory user, the referenced\nprincipal user on the Active Directory domain is NOT deleted.\nOnly the user on the Cohesity Cluster is deleted.\nReturns Success if the specified users are deleted."
        tags: 
          - "Principals"
        summary: "Delete one or more users on the Cohesity Cluster."
        operationId: "DeleteUsers"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to delete one or more users on the Cohesity Cluster."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/UserDeleteParameters"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/users/privileges: 
      get: 
        tags: 
          - "Principals"
        summary: "List the privileges of the session user."
        operationId: "GetUserPrivileges"
        responses: 
          200: 
            $ref: "#/responses/GetUserPrivilegesResponse"
          default: 
            $ref: "#/responses/Error"
    /public/users/s3SecretKey: 
      post: 
        description: "Returns the new key that was generated."
        tags: 
          - "Principals"
        summary: "Reset the S3 secret access key for the specified user on the Cohesity Cluster."
        operationId: "ResetS3SecretKey"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to reset the S3 secret access key for the specified Cohesity user."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/ResetS3SecretKeyParameters"
        responses: 
          200: 
            $ref: "#/responses/ResetS3SecretKeyResponse"
          default: 
            $ref: "#/responses/Error"
    /public/vaults: 
      get: 
        description: "If no parameters are specified, all Vaults (External Targets) currently\nregistered on the Cohesity Cluster are returned.\nSpecifying parameters filters the results that are returned.\nA Vault is equivalent to an External Target in the Cohesity Dashboard."
        tags: 
          - "Vaults"
        summary: "List the Vaults (External Targets) registered on the Cohesity Cluster\nfiltered by the specified parameters."
        operationId: "GetVaults"
        parameters: 
          - 
            type: "boolean"
            x-go-name: "IncludeMarkedForRemoval"
            description: "Specifies if Vaults that are marked for removal should be returned."
            name: "includeMarkedForRemoval"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies the id of Vault to return. If empty, all Vaults are returned."
            name: "id"
            in: "query"
          - 
            type: "string"
            x-go-name: "Name"
            description: "Specifies the name of the Vault to return. If empty, all Vaults are\nreturned."
            name: "name"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetVaultsResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns the created Vault.\nA Vault is equivalent to an External Target in the Cohesity Dashboard."
        tags: 
          - "Vaults"
        summary: "Create a new Vault (External Target)."
        operationId: "CreateVault"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a new Vault."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/Vault"
        responses: 
          201: 
            $ref: "#/responses/CreateVaultResponse"
          default: 
            $ref: "#/responses/Error"
    /public/vaults/archiveMediaInfo: 
      get: 
        description: "Returns the media information about the specified archive service uid\n(such as a QStar tape archive service).\n\nAn archive service uid is uniquely identified using a combination of the\nfollowing fields: clusterIncarnationId, entityIds and clusterId.\nThese are all required fields."
        tags: 
          - "Vaults"
        summary: "List the media information for the specified archive service."
        operationId: "GetArchiveMediaInfo"
        parameters: 
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "EntityIds"
            description: "Specifies an array of entityIds to optionally filter by.\nAn entityId is a unique id for a VM assigned by the Cohesity Cluster."
            name: "entityIds"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "ClusterId"
            description: "Specifies the id of the Cohesity Cluster that archived to a\nQStar media Vault."
            name: "clusterId"
            in: "query"
            required: true
          - 
            type: "integer"
            format: "int64"
            x-go-name: "ClusterIncarnationId"
            description: "Specifies the incarnation id of the Cohesity Cluster that archived\nto a QStar media Vault."
            name: "clusterIncarnationId"
            in: "query"
            required: true
          - 
            type: "integer"
            format: "int64"
            x-go-name: "QStarArchiveJobId"
            description: "Specifies the id of the Job that archived to a QStar media Vault."
            name: "qstarArchiveJobId"
            in: "query"
            required: true
          - 
            type: "integer"
            format: "int64"
            x-go-name: "QStarRestoreTaskId"
            description: "Specifies the id of the restore task to optionally filter by.\nThe restore task that is restoring data from the specified media Vault."
            name: "qstarRestoreTaskId"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetArchiveMediaInfoResponse"
          default: 
            $ref: "#/responses/Error"
    /public/vaults/encryptionKey/{id}: 
      get: 
        description: "Get encryption information (such as the encryption key)\nfor the specified Vault (External Target).\nTo restore data to a remote Cluster (for example to support a disaster\nrecovery scenario), you must get the encryption key of the Vault\nand store it outside the local source Cluster, before disaster strikes.\nIf you have the encryption key and the local source Cluster goes down,\nyou can restore the data to a remote Cluster from the Vault.\nThe local source Cluster is the Cluster that archived the data on the Vault."
        tags: 
          - "Vaults"
        summary: "Get encryption information for a Vault (External Target).\nA Vault is equivalent to an External Target in the Cohesity Dashboard."
        operationId: "GetVaultEncryptionKeyInfo"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Vault."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetVaultEncryptionKeyResponse"
          default: 
            $ref: "#/responses/Error"
    /public/vaults/{id}: 
      get: 
        description: "Returns the Vault corresponding to the specified Vault Id.\nA Vault is equivalent to an External Target in the Cohesity Dashboard."
        tags: 
          - "Vaults"
        summary: "List details about a single Vault (External Target)."
        operationId: "GetVaultById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Vault."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetVaultByIdResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Update the settings of a Vault.\nA Vault is equivalent to an External Target in the Cohesity Dashboard.\nReturns the updated Vault."
        tags: 
          - "Vaults"
        summary: "Update a Vault (External Target)."
        operationId: "UpdateVault"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Vault."
            name: "id"
            in: "path"
            required: true
          - 
            x-go-name: "Body"
            description: "Request to update a Vault's settings."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/Vault"
        responses: 
          200: 
            $ref: "#/responses/UpdateVaultResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns delete status upon completion.\nA Vault is equivalent to an External Target in the Cohesity Dashboard."
        tags: 
          - "Vaults"
        summary: "Delete a Vault (External Target)."
        operationId: "DeleteVault"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Specifies a unique id of the Vault."
            name: "id"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/viewAliases: 
      post: 
        description: "Returns the created View Alias."
        tags: 
          - "Views"
        summary: "Create a View Alias. A View Alias allows a directory inside the view to be\nmounted without specifying the entire path."
        operationId: "CreateViewAlias"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a View."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/ViewAlias"
        responses: 
          201: 
            $ref: "#/responses/CreateViewAliasResponse"
          default: 
            $ref: "#/responses/Error"
    /public/viewAliases/{name}: 
      delete: 
        description: "Returns delete status upon completion."
        tags: 
          - "Views"
        summary: "Delete a View Alias."
        operationId: "DeleteViewAlias"
        parameters: 
          - 
            type: "string"
            x-go-name: "Name"
            description: "Specifies the View Alias name."
            name: "name"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/viewBoxes: 
      get: 
        description: "If no parameters are specified, all Domains (View Boxes) currently on\nthe Cohesity Cluster are returned.\nSpecifying parameters filters the results that are returned."
        tags: 
          - "ViewBoxes"
        summary: "List Domains (View Boxes) filtered by the specified parameters."
        operationId: "GetViewBoxes"
        parameters: 
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "IdList"
            description: "Filter by a list of Storage Domain (View Box) ids.\nIf empty, View Boxes are not filtered by id."
            name: "ids"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "NameList"
            description: "Filter by a list of Storage Domain (View Box) Names.\nIf empty, Storage Domains (View Boxes) are not filtered by Name."
            name: "names"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "ClusterPartitionIdList"
            description: "Filter by a list of Cluster Partition Ids."
            name: "clusterPartitionIds"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "FetchStats"
            description: "Specifies whether to include usage and performance statistics."
            name: "fetchStats"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetViewBoxesResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns the created Domain (View Box)."
        tags: 
          - "ViewBoxes"
        summary: "Create a Domain (View Box)."
        operationId: "CreateViewBox"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a Storage Domain (View Box) configuration."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/CreateViewBoxParams"
        responses: 
          201: 
            $ref: "#/responses/CreateViewBoxResponse"
          default: 
            $ref: "#/responses/Error"
    /public/viewBoxes/{id}: 
      get: 
        description: "Returns the Domain (View Box) corresponding to the specified Domain (View Box)\nId."
        tags: 
          - "ViewBoxes"
        summary: "List details about a single Domain (View Box)."
        operationId: "GetViewBoxById"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Id of the Storage Domain (View Box)"
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetViewBoxByIdResponse"
          404: 
            $ref: "#/responses/NotFoundResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the updated Domain (View Box)."
        tags: 
          - "ViewBoxes"
        summary: "Update a Domain (View Box)."
        operationId: "UpdateViewBox"
        parameters: 
          - 
            type: "integer"
            format: "int64"
            x-go-name: "Id"
            description: "Id of the Storage Domain (View Box)"
            name: "id"
            in: "path"
            required: true
          - 
            x-go-name: "Body"
            description: "Request to update a Storage Domain (View Box) configuration."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/CreateViewBoxParams"
        responses: 
          200: 
            $ref: "#/responses/UpdateViewBoxResponse"
          default: 
            $ref: "#/responses/Error"
    /public/viewUserQuotas: 
      get: 
        description: "Returns error if op fails."
        tags: 
          - "Views"
        summary: "Get the quota policies, usage and summary for a view for all its users. It\ncan also fetch the quota policies, usage and summary for a user in all his\nviews."
        operationId: "GetViewUserQuotas"
        parameters: 
          - 
            type: "boolean"
            x-go-name: "IncludeUsage"
            description: "If set to true, the logical usage info is included only for users with\nquota overrides. By default, it is set to false."
            name: "includeUsage"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "ExcludeUsersWithinAlertThreshold"
            description: "This field can be set only when includeUsage is set to true.\nBy default, all the users with logical usage > 0 will be returned in the\nresult. If this field is set to true, only the list of users who has\nexceeded the alert threshold will be returned."
            name: "excludeUsersWithinAlertThreshold"
            in: "query"
          - 
            type: "integer"
            format: "uint32"
            x-go-name: "UnixUid"
            description: "If interested in a user via unix-identifier, include UnixUid.\nOtherwise, If valid unix-id to SID mappings are available (i.e., when\nmixed mode is enabled) the server will perform the necessary id mapping\nand return the correct usage irrespective of whether the unix id / SID is\nprovided."
            name: "unixUid"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "SummaryOnly"
            description: "Specifies a flag to just return a summary. If set to true, and if ViewName\nis not nil, it returns the summary of users for a view. Otherwise if\nUserId not nil, and ViewName is nil then it fetches the summary for a\nuser in his views.  By default, it is set to false."
            name: "summaryOnly"
            in: "query"
          - 
            type: "string"
            x-go-name: "Cookie"
            description: "Cookie should be used from previous call to list user quota overrides. It\nresumes (or gives the next set of values) from the result of the previous\ncall."
            name: "cookie"
            in: "query"
          - 
            type: "string"
            x-go-name: "ViewName"
            description: "Specifies the name of the input view. If given, there could be three\nscenarios with the viewName input parameter:\nIt gives the user quota overrides for this view, and the user quota\nsettings. Returns 'usersQuotaAndUsage'.\nIf given along with the user id, it returns the quota policy for this\nuser on this view. Returns 'usersQuotaAndUsage'.\nIf given along with SummaryOnly as true, a user quota summary for\nthis view would be returned. Returns 'summaryForView'.\nIf not given, then the user id is checked."
            name: "viewName"
            in: "query"
          - 
            type: "string"
            x-go-name: "Sid"
            description: "If interested in a user via smb_client, include SID.\nOtherwise, If valid unix-id to SID mappings are available (i.e., when\nmixed mode is enabled) the server will perform the necessary id mapping\nand return the correct usage irrespective of whether the unix id / SID is\nprovided.\nThe string is of following format -\nS-1-IdentifierAuthority-SubAuthority1-SubAuthority2-...-SubAuthorityn."
            name: "sid"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "PageCount"
            description: "Specifies the max entries that should be returned in the result."
            name: "pageCount"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "MaxViewId"
            description: "Related to fetching a particular user's quota and usage in all his views.\nIt only pertains to the scenario where either UnixUid or Sid is specified,\nand ViewName is nil. Specify the maxViewId for All the views returned\nwould have view_id's less than or equal to the given MaxViewId if it is\n>= 0."
            name: "maxViewId"
            in: "query"
          - 
            type: "string"
            x-go-name: "OutputFormat"
            description: "OutputFormat is the Output format for the output. If it is not specified,\ndefault is json."
            name: "outputFormat"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetViewUserQuotasResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns error if op fails."
        tags: 
          - "Views"
        summary: "Update a new quota policy for a user in a view."
        operationId: "UpdateViewUserQuota"
        parameters: 
          - 
            x-go-name: "Body"
            description: "update user quota params."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/ViewUserQuotaParameters"
        responses: 
          201: 
            $ref: "#/responses/UpdateViewUserQuotaResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns error if op fails."
        tags: 
          - "Views"
        summary: "Create a new quota policy for a user in a view."
        operationId: "CreateViewUserQuota"
        parameters: 
          - 
            x-go-name: "Body"
            description: "update user quota params."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/ViewUserQuotaParameters"
        responses: 
          200: 
            $ref: "#/responses/CreateViewUserQuotaResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns error if op fails."
        tags: 
          - "Views"
        summary: "Delete the quota policy overrides for users in a view."
        operationId: "DeleteViewUsersQuota"
        parameters: 
          - 
            x-go-name: "Body"
            description: "update user quota params."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/DeleteViewUsersQuotaParameters"
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/viewUserQuotasSettings: 
      put: 
        description: "Returns error if op fails."
        tags: 
          - "Views"
        summary: "Update the user quota settings in a view."
        operationId: "UpdateUserQuotaSettings"
        parameters: 
          - 
            x-go-name: "Body"
            description: "update user quota metadata params."
            name: "body"
            in: "body"
            schema: 
              $ref: "#/definitions/UpdateUserQuotaSettingsForView"
        responses: 
          200: 
            $ref: "#/responses/UserQuotaSettingsResponse"
          default: 
            $ref: "#/responses/Error"
    /public/views: 
      get: 
        description: "If no parameters are specified, all Views on the Cohesity Cluster are returned.\nSpecifying parameters filters the results that are returned.\nNOTE: If maxCount is set and the number of Views returned exceeds the maxCount,\nthere are more Views to return.\nTo get the next set of Views, send another request and specify the id of the\nlast View returned in viewList from the previous response."
        tags: 
          - "Views"
        summary: "List Views filtered by some parameters."
        operationId: "GetViews"
        parameters: 
          - 
            type: "boolean"
            x-go-name: "IncludeInactive"
            description: "Specifies if inactive Views on this Remote Cluster (which have\nSnapshots copied by replication) should also be returned.\nInactive Views are not counted towards the maxCount.\nBy default, this field is set to false."
            name: "includeInactive"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "JobIds"
            description: "Filter by Protection Job ids. Return Views that are being protected by\nlisted Jobs, which are specified by ids."
            name: "jobIds"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "ViewBoxNameList"
            description: "Filter by a list of View Box names."
            name: "viewBoxNames"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "MatchPartialNames"
            description: "If true, the names in viewNames are matched by prefix rather than\nexactly matched."
            name: "matchPartialNames"
            in: "query"
          - 
            type: "integer"
            format: "int64"
            x-go-name: "MaxViewId"
            description: "If the number of Views to return exceeds the maxCount specified in the\noriginal request, specify the id of the last View\nfrom the viewList in the previous response\nto get the next set of Views."
            name: "maxViewId"
            in: "query"
          - 
            type: "boolean"
            description: "If set to true, the list is sorted descending by logical usage."
            name: "SortByLogicalUsage"
            in: "query"
          - 
            type: "boolean"
            x-go-name: "MatchAliasNames"
            description: "If true, view aliases are also matched with the names in viewNames."
            name: "matchAliasNames"
            in: "query"
          - 
            type: "array"
            items: 
              type: "string"
            x-go-name: "ViewNameList"
            description: "Filter by a list of View names."
            name: "viewNames"
            in: "query"
          - 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
            x-go-name: "ViewBoxIdList"
            description: "Filter by a list of Storage Domains (View Boxes) specified by id."
            name: "viewBoxIds"
            in: "query"
          - 
            type: "integer"
            format: "int32"
            x-go-name: "MaxCount"
            description: "Specifies a limit on the number of Views returned."
            name: "maxCount"
            in: "query"
        responses: 
          200: 
            $ref: "#/responses/GetViewsResponse"
          default: 
            $ref: "#/responses/Error"
      post: 
        description: "Returns the created View."
        tags: 
          - "Views"
        summary: "Create a View."
        operationId: "CreateView"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to create a View."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/CreateViewRequest"
        responses: 
          201: 
            $ref: "#/responses/CreateViewResponse"
          default: 
            $ref: "#/responses/Error"
    /public/views/clone: 
      post: 
        description: "Returns the cloned View."
        tags: 
          - "Views"
        summary: "Clone a View."
        operationId: "CloneView"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to clone a View."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/CloneViewRequest"
        responses: 
          201: 
            $ref: "#/responses/CloneViewResponse"
          default: 
            $ref: "#/responses/Error"
    /public/views/cloneDirectory: 
      post: 
        description: "Returns error if op fails."
        tags: 
          - "Views"
        summary: "Clone a directory of a view."
        operationId: "CloneDirectory"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to clone a directory."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/CloneDirectoryParams"
        responses: 
          201: 
            $ref: "#/responses/CloneDirectoryResponse"
          default: 
            $ref: "#/responses/Error"
    /public/views/overwrite: 
      post: 
        description: "Specifies source and target view names as params.\nReturns the modified Target View."
        tags: 
          - "Views"
        summary: "Overwrites a Target view with contents of a Source view."
        operationId: "OverwriteView"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to overwrite a Target view with contents of a Source view."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/OverwriteViewParam"
        responses: 
          200: 
            $ref: "#/responses/OverwriteViewResponse"
          default: 
            $ref: "#/responses/Error"
    /public/views/rename/{name}: 
      post: 
        description: "Specify original name of the View in the 'name' parameter.\nReturns the renamed View."
        tags: 
          - "Views"
        summary: "Rename a View."
        operationId: "RenameView"
        parameters: 
          - 
            x-go-name: "Body"
            description: "Request to rename a View."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/RenameViewParam"
          - 
            type: "string"
            x-go-name: "Name"
            description: "Specifies the View name."
            name: "name"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/RenameViewResponse"
          default: 
            $ref: "#/responses/Error"
    /public/views/{name}: 
      get: 
        description: "Returns the View corresponding to the specified View name."
        tags: 
          - "Views"
        summary: "List details about a single View."
        operationId: "GetViewByName"
        parameters: 
          - 
            type: "string"
            x-go-name: "Name"
            description: "Specifies the View name."
            name: "name"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetViewByNameResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the updated View."
        tags: 
          - "Views"
        summary: "Update a View."
        operationId: "UpdateView"
        parameters: 
          - 
            type: "string"
            x-go-name: "Name"
            description: "Specifies the View name."
            name: "name"
            in: "path"
            required: true
          - 
            x-go-name: "Body"
            description: "Request to update a view."
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/UpdateViewParam"
        responses: 
          200: 
            $ref: "#/responses/UpdateViewResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns delete status upon completion."
        tags: 
          - "Views"
        summary: "Delete a View."
        operationId: "DeleteView"
        parameters: 
          - 
            type: "string"
            x-go-name: "Name"
            description: "Specifies the View name."
            name: "name"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
    /public/vlans: 
      get: 
        description: "Returns the VLANs for the Cohesity Cluster."
        tags: 
          - "Vlan"
        summary: "List the VLANs for the Cohesity Cluster."
        operationId: "GetVlans"
        responses: 
          200: 
            $ref: "#/responses/GetVlansResponse"
          default: 
            $ref: "#/responses/Error"
    /public/vlans/{id}: 
      get: 
        description: "Returns the VLAN corresponding to the specified VLAN ID."
        tags: 
          - "Vlan"
        summary: "List the details about a single VLAN."
        operationId: "GetVlanById"
        parameters: 
          - 
            type: "integer"
            format: "int32"
            x-go-name: "Id"
            description: "Specifies the id of the VLAN."
            name: "id"
            in: "path"
            required: true
        responses: 
          200: 
            $ref: "#/responses/GetVlanByIdResponse"
          404: 
            $ref: "#/responses/NotFoundResponse"
          default: 
            $ref: "#/responses/Error"
      put: 
        description: "Returns the created or updated VLAN on the Cohesity Cluster."
        tags: 
          - "Vlan"
        summary: "Creates or updates a VLAN of the Cohesity Cluster."
        operationId: "UpdateVlan"
        parameters: 
          - 
            type: "integer"
            format: "int32"
            x-go-name: "Id"
            description: "Specifies the id of the VLAN."
            name: "id"
            in: "path"
            required: true
          - 
            name: "Body"
            in: "body"
            schema: 
              $ref: "#/definitions/Vlan"
        responses: 
          200: 
            $ref: "#/responses/UpdateVlanResponse"
          default: 
            $ref: "#/responses/Error"
      delete: 
        description: "Returns the delete status upon completion."
        tags: 
          - "Vlan"
        summary: "Remove the specified VLAN from the Cohesity Cluster."
        operationId: "RemoveVlan"
        parameters: 
          - 
            type: "integer"
            format: "int32"
            x-go-name: "Id"
            description: "Specifies the id of the VLAN."
            name: "id"
            in: "path"
            required: true
        responses: 
          204: 
            $ref: "#/responses/NoContentResponse"
          default: 
            $ref: "#/responses/Error"
  definitions: 
    AagAndDatabases: 
      type: "object"
      title: "Specifies an AAG and the database members of the AAG."
      properties: 
        aag: 
          description: "Specifies an AAG Protection Source object on a VM or a Physical host."
          $ref: "#/definitions/ProtectionSource"
        databases: 
          type: "array"
          title: "Specifies databases found that are members of the AAG."
          items: 
            $ref: "#/definitions/ProtectionSource"
          x-go-name: "Databases"
      x-go-package: "cohesity/iris/server/data/public"
    AccessToken: 
      description: "Specifies an Access Token that provides permissions for a client to access\nthe Cohesity REST API available from a Cohesity Cluster."
      type: "object"
      title: "Access Token."
      properties: 
        accessToken: 
          description: "Generated access token."
          type: "string"
          x-go-name: "AccessToken"
        privileges: 
          type: "array"
          title: "Privileges for the user."
          items: 
            type: "string"
          x-go-name: "Privileges"
        tokenType: 
          description: "Access token type."
          type: "string"
          x-go-name: "TokenType"
      x-go-package: "cohesity/iris/server/data/public"
    AccessTokenCredential: 
      description: "Specifies the Cohesity credentials required for generating an access token."
      type: "object"
      title: "Create Access Token Credential Request."
      required: 
        - "username"
        - "password"
      properties: 
        domain: 
          description: "Specifies the domain the user is logging in to. For a Local user model,\nthe domain is always LOCAL. For LDAP/AD user models, the domain will map to\nan LDAP connection string. A user is uniquely identified by a\ncombination of username and domain. If this is not set, LOCAL is assumed."
          type: "string"
          x-go-name: "Domain"
        password: 
          description: "Specifies the password of the Cohesity user account."
          type: "string"
          x-go-name: "Password"
        username: 
          description: "Specifies the login name of the Cohesity user."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    AcropolisProtectionSource: 
      description: "Specifies a Protection Source in Acropolis environment."
      type: "object"
      title: "Acropolis Protection Source."
      properties: 
        clusterUuid: 
          description: "Specifies the UUID of the Acropolis cluster instance to which this\nentity belongs to."
          type: "string"
          x-go-name: "ClusterUuid"
        description: 
          description: "Specifies a description about the Protection Source."
          type: "string"
          x-go-name: "Description"
        mountPath: 
          description: "Specifies whether the the VM is an agent VM. This is applicable to\nacropolis entity of type kVirtualMachine."
          type: "boolean"
          x-go-name: "IsAgentVm"
        name: 
          description: "Specifies the name of the Acropolis Object."
          type: "string"
          x-go-name: "Name"
        type: 
          description: "Specifies the type of an Acropolis Protection Source Object such as\n'kPrismCentral', 'kHost', 'kNetwork', etc.\nSpecifies the type of an Acropolis source entity.\n'kPrismCentral' indicates a collection of multiple Nutanix clusters.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an Acropolis host.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kStorageContainer' represents a storage container object."
          type: "string"
          enum: 
            - "kPrismCentral"
            - "kStandaloneCluster"
            - "kCluster"
            - "kHost"
            - "kVirtualMachine"
            - "kNetwork"
            - "kStorageContainer"
          x-go-name: "Type"
        uuid: 
          description: "Specifies the UUID of the Acropolis Object. This is unique within the\ncluster instance. Together with clusterUuid, this entity is unique\nwithin the Acropolis environment."
          type: "string"
          x-go-name: "Uuid"
      x-go-package: "cohesity/iris/server/data/public"
    AcropolisRestoreParameters: 
      description: "This field defines the Acropolis specific params for restore tasks of type\nkRecoverVMs."
      type: "object"
      title: "Specifies information needed when restoring VMs in Acropolis enviroment."
      properties: 
        disableNetwork: 
          description: "Specifies whether the network should be left in disabled state.\nAttached network is enabled by default. Set this flag to true to\ndisable it."
          type: "boolean"
          x-go-name: "DisableNetwork"
        networkId: 
          description: "Specifies a network configuration to be attached to the cloned or\nrecovered object.\nFor kCloneVMs and kRecoverVMs tasks, original network configuration\nis detached if the cloned or recovered object is kept under a different\nparent Protection Source or a different Resource Pool.\nBy default, for kRecoverVMs task, original network configuration is\npreserved if the recovered object is kept under the same parent\nProtection Source and the same Resource Pool.\nSpecify this field to override the preserved network configuration or\nto attach a new network configuration to the cloned or recovered objects.\nYou can get the networkId of the kNetwork object by setting\nincludeNetworks to 'true' in the GET /public/protectionSources operation.\nIn the response, get the id of the desired kNetwork object, the resource\npool, and the registered parent Protection Source."
          type: "integer"
          format: "int64"
          x-go-name: "NetworkId"
        poweredOn: 
          description: "Specifies the power state of the cloned or recovered objects.\nBy default, the cloned or recovered objects are powered off."
          type: "boolean"
          x-go-name: "KeepPoweredOn"
        prefix: 
          description: "Specifies a prefix to prepended to the source object name to derive a\nnew name for the recovered or cloned object.\nBy default, cloned or recovered objects retain their original name.\nLength of this field is limited to 8 characters."
          type: "string"
          x-go-name: "Prefix"
        storageContainerId: 
          description: "A storage container where the VM's files should be restored to. This\nfield is optional if the VM is being restored to its original parent\nsource. If not specified, the VM's files will be restored to their\noriginal storage container(s). This field is mandatory if the VMs are\nbeing restored to a different parent source."
          type: "integer"
          format: "int64"
          x-go-name: "StorageContainerId"
        suffix: 
          description: "Specifies a suffix to appended to the original source object name\nto derive a new name for the recovered or cloned object.\nBy default, cloned or recovered objects retain their original name.\nLength of this field is limited to 8 characters."
          type: "string"
          x-go-name: "Suffix"
      x-go-package: "cohesity/iris/server/data/public"
    ActiveDirectoryEntry: 
      description: "Specifies the join settings for a Microsoft Active Directory domain."
      type: "object"
      title: "Active Directory."
      properties: 
        domainName: 
          description: "Specifies the fully qualified domain name (FQDN) of an Active Directory."
          type: "string"
          x-go-name: "DomainName"
        fallbackUserIdMappingInfo: 
          description: "Specifies the fallback id mapping info which is used when an ID mapping\nfor a user is not found via the above IdMappingInfo. Only supported for\ntwo types of fallback mapping types - 'kRid' and 'kFixed'."
          $ref: "#/definitions/UserIdMapping"
        machineAccounts: 
          description: "Specifies an array of computer names used to identify the Cohesity\nCluster on the domain."
          type: "array"
          title: "Array of Machine Accounts."
          items: 
            type: "string"
          x-go-name: "MachineAccounts"
        ouName: 
          description: "Specifies an optional Organizational Unit name."
          type: "string"
          x-go-name: "OuName"
        password: 
          description: "Specifies the password for the specified userName."
          type: "string"
          x-go-name: "Password"
        trustedDomains: 
          type: "array"
          title: "Specifies the trusted domains of the Active Directory domain."
          items: 
            type: "string"
          x-go-name: "TrustedDomains"
          readOnly: true
        unixRootSid: 
          description: "Specifies the SID of the Active Directory domain user to be mapped to\nUnix root user."
          type: "string"
          x-go-name: "UnixRootSid"
        userIdMappingInfo: 
          description: "Specifies the information about how the Unix and Windows users are mapped\nfor this domain."
          $ref: "#/definitions/UserIdMapping"
        userName: 
          description: "Specifies a userName that has administrative privileges in the domain."
          type: "string"
          x-go-name: "UserName"
        workgroup: 
          description: "Specifies an optional Workgroup name."
          type: "string"
          x-go-name: "Workgroup"
      x-go-package: "cohesity/iris/server/data/public"
    ActiveDirectoryPrincipal: 
      description: "Specifies information about a single principal in an Active Directory."
      type: "object"
      title: "Active Directory Principal."
      properties: 
        domain: 
          description: "Specifies the domain name of the where the principal' account is\nmaintained."
          type: "string"
          x-go-name: "Domain"
        fullName: 
          description: "Specifies the full name (first and last names) of the principal."
          type: "string"
          x-go-name: "FullName"
        objectClass: 
          description: "Specifies the object class of the principal (either 'kGroup' or 'kUser').\n'kUser' specifies a user object class.\n'kGroup' specifies a group object class."
          type: "string"
          enum: 
            - "kUser"
            - "kGroup"
          x-go-name: "ObjectClass"
        principalName: 
          description: "Specifies the name of the principal."
          type: "string"
          x-go-name: "PrincipalName"
        sid: 
          description: "Specifies the unique Security id (SID) of the principal."
          type: "string"
          x-go-name: "Sid"
      x-go-package: "cohesity/iris/server/data/public"
    ActiveDirectoryPrincipalsAddParameters: 
      description: "Specifies the settings for adding new users and groups\nfor Active Directory principals.\nThese users and groups are added to the Cohesity Cluster.\nYou cannot create users and groups in the default Cohesity domain\ncalled 'LOCAL' using this operation."
      type: "object"
      title: "Add Groups or Users Request."
      properties: 
        description: 
          description: "Specifies a description about the user or group."
          type: "string"
          x-go-name: "Description"
        domain: 
          description: "Specifies the domain of the Active Directory where the\nreferenced principal is stored."
          type: "string"
          x-go-name: "Domain"
        objectClass: 
          description: "Specifies the type of the referenced Active Directory principal.\nIf 'kGroup', the referenced Active Directory principal is a group.\nIf 'kUser', the referenced Active Directory principal is a user.\n'kUser' specifies a user object class.\n'kGroup' specifies a group object class."
          type: "string"
          enum: 
            - "kUser"
            - "kGroup"
          x-go-name: "ObjectClass"
        principalName: 
          description: "Specifies the name of the Active Directory principal,\nthat will be referenced by the group or user.\nThe name of the Active Directory principal is used for naming\nthe new group or user on the Cohesity Cluster."
          type: "string"
          x-go-name: "PrincipalName"
        restricted: 
          description: "Whether the principal is a restricted principal. A restricted principal\ncan only view the objects he has permissions to."
          type: "boolean"
          x-go-name: "Restricted"
        roles: 
          description: "Specifies the Cohesity roles to associate with this user or group\nsuch as 'Admin', 'Ops' or 'View'.\nThe Cohesity roles determine privileges on the Cohesity Cluster\nfor this group or user.\nFor example if the 'joe' user is added for the Active Directory\n'joe' user principal and is associated with the Cohesity\n'View' role, 'joe' can log in to the Cohesity Dashboard\nand has a read-only view of the data on the Cohesity Cluster."
          type: "array"
          title: "Array of Roles."
          items: 
            type: "string"
          x-go-name: "Roles"
      x-go-package: "cohesity/iris/server/data/public"
    AddedActiveDirectoryPrincipal: 
      description: "Specifies a group or user added to the Cohesity Cluster for an Active\nDirectory principal."
      type: "object"
      title: "Non-LOCAL Group or User."
      properties: 
        createdTimeMsecs: 
          description: "Specifies the epoch time in milliseconds when the group or user\nwas added to the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "CreatedTimeMsecs"
        description: 
          description: "Specifies a description about the user or group."
          type: "string"
          x-go-name: "Description"
        domain: 
          description: "Specifies the domain of the Active Directory where the\nreferenced principal is stored."
          type: "string"
          x-go-name: "Domain"
        lastUpdatedTimeMsecs: 
          description: "Specifies the epoch time in milliseconds when the group or user\nwas last modified on the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "LastUpdatedTimeMsecs"
        objectClass: 
          description: "Specifies the type of the referenced Active Directory principal.\nIf 'kGroup', the referenced Active Directory principal is a group.\nIf 'kUser', the referenced Active Directory principal is a user.\n'kUser' specifies a user object class.\n'kGroup' specifies a group object class."
          type: "string"
          enum: 
            - "kUser"
            - "kGroup"
          x-go-name: "ObjectClass"
        principalName: 
          description: "Specifies the name of the Active Directory principal,\nthat will be referenced by the group or user.\nThe name of the Active Directory principal is used for naming\nthe new group or user on the Cohesity Cluster."
          type: "string"
          x-go-name: "PrincipalName"
        restricted: 
          description: "Whether the principal is a restricted principal. A restricted principal\ncan only view the objects he has permissions to."
          type: "boolean"
          x-go-name: "Restricted"
        roles: 
          description: "Specifies the Cohesity roles to associate with this user or group\nsuch as 'Admin', 'Ops' or 'View'.\nThe Cohesity roles determine privileges on the Cohesity Cluster\nfor this group or user.\nFor example if the 'joe' user is added for the Active Directory\n'joe' user principal and is associated with the Cohesity\n'View' role, 'joe' can log in to the Cohesity Dashboard\nand has a read-only view of the data on the Cohesity Cluster."
          type: "array"
          title: "Array of Roles."
          items: 
            type: "string"
          x-go-name: "Roles"
        sid: 
          description: "Specifies the unique Security ID (SID) of the Active Directory principal\nassociated with this group or user."
          type: "string"
          x-go-name: "Sid"
      x-go-package: "cohesity/iris/server/data/public"
    AgentInformation: 
      description: "Specifies information about the Agent software running on the server or\nthe Virtual Machine."
      type: "object"
      title: "Agent Information."
      properties: 
        cbmrVersion: 
          description: "Specifies the version if Cristie BMR product is installed on the host."
          type: "string"
          x-go-name: "CbmrVersion"
        id: 
          description: "Specifies the agent's id."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        name: 
          description: "Specifies the agent's name."
          type: "string"
          x-go-name: "Name"
        registrationInfo: 
          description: "Specifies registration information for an Agent."
          $ref: "#/definitions/RegisteredSourceInfo"
        sourceSideDedupEnabled: 
          description: "Specifies whether source side dedup is enabled or not."
          type: "boolean"
          x-go-name: "SourceSideDedupEnabled"
        status: 
          description: "Specifies the agent status.\nSpecifies the status of the agent running on a physical source.\n'kUnknown' indicates the Agent is not known. No attempt to connect\nto the Agent has occurred.\n'kUnreachable' indicates the Agent is not reachable.\n'kHealthy' indicates the Agent is healthy.\n'kDegraded' indicates the Agent is running but in a degraded state."
          type: "string"
          enum: 
            - "kUnknown"
            - "kUnreachable"
            - "kHealthy"
            - "kDegraded"
          x-go-name: "Status"
        statusMessage: 
          description: "Specifies additional details about the agent status."
          type: "string"
          x-go-name: "StatusMessage"
        upgradability: 
          description: "Specifies the upgradability of the agent running on the physical server.\nSpecifies the upgradability of the agent running on the physical server.\n'kUpgradable' indicates the Agent can be upgraded to the agent software\nversion on the cluster.\n'kCurrent' indicates the Agent is running the latest version.\n'kUnknown' indicates the Agent's version is not known.\n'kNonUpgradableInvalidVersion' indicates the Agent's version is invalid.\n'kNonUpgradableAgentIsNewer' indicates the Agent's version is newer than\nthe agent software version the cluster.\n'kNonUpgradableAgentIsOld' indicates the Agent's version is too old that\ndoes not support upgrades."
          type: "string"
          enum: 
            - "kUpgradable"
            - "kCurrent"
            - "kUnknown"
            - "kNonUpgradableInvalidVersion"
            - "kNonUpgradableAgentIsNewer"
            - "kNonUpgradableAgentIsOld"
          x-go-name: "Upgradability"
        upgradeStatus: 
          description: "Specifies the status of the upgrade of the agent on a physical server.\nSpecifies the status of the upgrade of the agent on a physical server.\n'kIdle' indicates there is no agent upgrade in progress.\n'kAccepted' indicates the Agent upgrade is accepted.\n'kStarted' indicates the Agent upgrade is in progress.\n'kFinished' indicates the Agent upgrade is completed."
          type: "string"
          enum: 
            - "kIdle"
            - "kAccepted"
            - "kStarted"
            - "kFinished"
          x-go-name: "UpgradeStatus"
        upgradeStatusMessage: 
          description: "Specifies detailed message about the agent upgrade failure. This field\nis not set for successful upgrade."
          type: "string"
          x-go-name: "UpgradeStatusMessage"
        version: 
          description: "Specifies the version of the Agent software."
          type: "string"
          x-go-name: "Version"
      x-go-package: "cohesity/iris/server/data/public"
    AggregatedSubtreeInfo: 
      description: "Aggregated information about a node subtree."
      type: "object"
      title: "Aggregated Subtree Info."
      properties: 
        environment: 
          description: "Specifies the environment such as 'kSQL' or 'kVMware', where the\nProtection Source exists.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "string"
          enum: 
            - "kVMware"
            - "kSQL"
            - "kView"
            - "kPuppeteer"
            - "kPhysical"
            - "kPure"
            - "kNetapp"
            - "kGenericNas"
            - "kHyperV"
            - "kAcropolis"
            - "kAzure"
          x-go-name: "Environment"
        leavesCount: 
          description: "Specifies the number of leaf nodes under the subtree of this node."
          type: "integer"
          format: "int64"
          x-go-name: "LeavesCount"
        totalLogicalSize: 
          description: "Specifies the total logical size of the data under the subtree\nof this node."
          type: "integer"
          format: "int64"
          x-go-name: "TotalLogicalSize"
      x-go-package: "cohesity/iris/server/data/public"
    Alert: 
      description: "Specifies information about an Alert such as the type, id assigned by\nthe Cohesity Cluster, number of duplicates, severity, etc."
      type: "object"
      title: "Alert."
      properties: 
        alertCategory: 
          description: "Specifies the category for the Alert such as 'kDisk', 'kNode', 'kCluster\",\netc."
          type: "string"
          enum: 
            - "kDisk"
            - "kNode"
            - "kCluster"
            - "kNodeHealth"
            - "kClusterHealth"
            - "kBackupRestore"
            - "kEncryption"
            - "kArchivalRestore"
          x-go-name: "AlertCategory"
        alertCode: 
          description: "Specifies a unique code that categorizes the Alert,\nfor example: CE00200014, where CE stands for Cohesity Error, the\nnext 3 digits is the id of the Alert Category\n(e.g. 002 for 'kNode') and the last 5 digits is the id of\nthe Alert Type (e.g. 00014 for 'kNodeHighCpuUsage')."
          type: "string"
          x-go-name: "AlertCode"
        alertDocument: 
          description: "Specifies documentation about the Alert such as name, description, cause\nand how to resolve the Alert."
          $ref: "#/definitions/AlertDocument"
        alertState: 
          description: "Specifies the current state of the Alert: 'kOpen' or 'kResolved'."
          type: "string"
          enum: 
            - "kOpen"
            - "kResolved"
          x-go-name: "AlertState"
        alertType: 
          description: "Specifies a 5 digit unique digital id for the Alert Type, such as 00014\nfor 'kNodeHighCpuUsage'. This id is used in alertCode."
          type: "integer"
          format: "int32"
          x-go-name: "AlertType"
        dedupCount: 
          description: "Provides the total count of duplicated Alerts\neven if there are more than 25 occurrences."
          type: "integer"
          format: "int32"
          x-go-name: "DedupCount"
        dedupTimestamps: 
          description: "Unix epoch Timestamps (in microseconds) for the last 25 occurrences of\nduplicated Alerts that are stored with the original/primary Alert.\nAlerts are grouped into one Alert if the Alerts\nare the same type, are reporting on the same Object\nand occur within one hour.\n'dedupCount' always reports the total count of duplicated Alerts\neven if there are more than 25 occurrences.\nFor example, if there are 100 occurrences of this Alert,\ndedupTimestamps stores the timestamps of the\nlast 25 occurrences and dedupCount equals 100."
          type: "array"
          title: "Array of Timestamps of Duplicate Alerts."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "DedupTimestamps"
        firstTimestampUsecs: 
          description: "Creation Unix epoch Timestamp (in microseconds) of the first occurrence\nof the Alert."
          type: "integer"
          format: "int64"
          x-go-name: "FirstTimestampUsecs"
        id: 
          description: "Unique id of this Alert."
          type: "string"
          x-go-name: "Id"
        latestTimestampUsecs: 
          description: "Creation Unix epoch Timestamp (in microseconds) of the most recent\noccurrence of the Alert."
          type: "integer"
          format: "int64"
          x-go-name: "LatestTimestampUsecs"
        propertyList: 
          description: "Array of key-value pairs associated with the Alert.\nThe Cohesity Cluster may autogenerate properties depending on\nthe Alert type. This list includes both autogenerated and specified\nproperties."
          type: "array"
          title: "Array of Key-Value Pairs."
          items: 
            $ref: "#/definitions/AlertProperty"
          x-go-name: "PropertyList"
        resolutionDetails: 
          description: "Specifies information about the Alert Resolution such as a summary,\nid assigned by the Cohesity Cluster, user who resolved the Alerts, etc."
          $ref: "#/definitions/AlertResolutionDetails"
        severity: 
          description: "Specifies the severity level of an Alert.\n'kCritical' means immediate action is required because the system detects a\nserious problem.\n'kWarning' means action is required but the affected functionality is still\nworking.\n'kInfo' means no action is required and the Alert provides an\ninformational message."
          type: "string"
          enum: 
            - "kCritical"
            - "kWarning"
            - "kInfo"
          x-go-name: "Severity"
        suppressionId: 
          description: "Unique id generated when the Alert is suppressed by the admin."
          type: "integer"
          format: "int64"
          x-go-name: "SuppressionId"
      x-go-package: "cohesity/iris/server/data/public"
    AlertDocument: 
      description: "Specifies documentation about the Alert such as name, description, cause\nand how to resolve the Alert."
      type: "object"
      title: "Alert Document."
      properties: 
        alertCause: 
          description: "Cause of the Alert that is included in the body of the email\nor any other type of notification."
          type: "string"
          x-go-name: "AlertCause"
        alertDescription: 
          description: "Brief description about the Alert that is used in the subject line when\nsending a notification email for an Alert."
          type: "string"
          x-go-name: "AlertDescription"
        alertHelpText: 
          description: "Instructions describing how to resolve the Alert that is included in the\nbody of the email or any other type of notification."
          type: "string"
          x-go-name: "AlertHelpText"
        alertName: 
          description: "Short name that describes the Alert type such as DiskBad, HighCpuUsage,\nFrequentProcessRestarts, etc."
          type: "string"
          x-go-name: "AlertName"
      x-go-package: "cohesity/iris/server/data/public"
    AlertProperty: 
      description: "Specifies a key-value pair associated with an Alert."
      type: "object"
      title: "Alert Key-Value Pair"
      properties: 
        key: 
          description: "Name of the property."
          type: "string"
          x-go-name: "Key"
        value: 
          description: "Value of the property."
          type: "string"
          x-go-name: "Value"
      x-go-package: "cohesity/iris/server/data/public"
    AlertResolution: 
      description: "Provides Resolution details and the list of Alerts resolved by a Resolution,\nwhich are specified by Alert Ids."
      type: "object"
      title: "Alert Resolution."
      properties: 
        alertIdList: 
          description: "List of Alerts resolved by a Resolution, which are specified by Alert Ids."
          type: "array"
          title: "Array of Resolved Alerts."
          items: 
            type: "string"
          x-go-name: "AlertIdList"
        resolutionDetails: 
          description: "Specifies information about the Alert Resolution such as a summary,\nid assigned by the Cohesity Cluster, user who resolved the Alerts, etc."
          $ref: "#/definitions/AlertResolutionDetails"
      x-go-package: "cohesity/iris/server/data/public"
    AlertResolutionDetails: 
      description: "Specifies information about the Alert Resolution such as a summary,\nid assigned by the Cohesity Cluster, user who resolved the Alerts, etc."
      type: "object"
      title: "Alert Resolution."
      properties: 
        resolutionDetails: 
          description: "Detailed notes about the Resolution."
          type: "string"
          x-go-name: "ResolutionDetails"
        resolutionId: 
          description: "Unique id assigned by the Cohesity Cluster for this Resolution."
          type: "integer"
          format: "int64"
          x-go-name: "ResolutionId"
        resolutionSummary: 
          description: "Short description about the Resolution."
          type: "string"
          x-go-name: "ResolutionSummary"
        timestampUsecs: 
          description: "Unix epoch timestamp (in microseconds) when the Alerts were resolved."
          type: "integer"
          format: "int64"
          x-go-name: "TimestampUsecs"
        userName: 
          description: "Name of the Cohesity Cluster user who resolved the Alerts."
          type: "string"
          x-go-name: "UserName"
      x-go-package: "cohesity/iris/server/data/public"
    AlertResolutionInfo: 
      description: "Short description and detailed notes about the Resolution."
      type: "object"
      title: "Alert Resolution Info."
      properties: 
        resolutionDetails: 
          description: "Detailed notes about the Resolution."
          type: "string"
          x-go-name: "ResolutionDetails"
        resolutionSummary: 
          description: "Short description about the Resolution."
          type: "string"
          x-go-name: "ResolutionSummary"
      x-go-package: "cohesity/iris/server/data/public"
    AlertResolutionRequest: 
      description: "Request that provides the details of a resolution and the list of\nAlert Ids to be marked resolved."
      type: "object"
      title: "Create Alert Resolution Request."
      properties: 
        alertIdList: 
          description: "List of Alerts resolved by a Resolution, which are specified by Alert Ids."
          type: "array"
          title: "Array of Alerts to Resolve."
          items: 
            type: "string"
          x-go-name: "AlertIdList"
        resolutionDetails: 
          description: "Short description and detailed notes about the Resolution."
          $ref: "#/definitions/AlertResolutionInfo"
      x-go-package: "cohesity/iris/server/data/public"
    AmazonCloudCredentials: 
      description: "Specifies the cloud credentials to connect to a Amazon\nservice account. Glacier, S3, and S3-compatible clouds all use these\ncredentials."
      type: "object"
      title: "Amazon Cloud Credentials."
      properties: 
        accessKeyId: 
          description: "Specifies the access key for Amazon service account.\nSee the Cohesity online help for the value to specify for this field\nbased on the current S3 Compatible Vault (External Target) type.\nFor example for Iron Mountain, specify the user name from Iron Mountain\nfor this field."
          type: "string"
          x-go-name: "AccessKeyId"
        region: 
          description: "Specifies the region to use for the Amazon service account."
          type: "string"
          x-go-name: "Region"
        secretAccessKey: 
          description: "Specifies the secret access key for Amazon service account.\nSee the Cohesity online help for the value to specify for this field\nbased on the current S3-compatible Vault (External Target) type."
          type: "string"
          x-go-name: "SecretAccessKey"
        serviceUrl: 
          description: "Specifies the URL (Endpoint) for the service such as s3like.notamazon.com.\nThis field is only significant for S3-compatible cloud services."
          type: "string"
          x-go-name: "ServiceUrl"
        signatureVersion: 
          description: "Specifies the version of the S3 Compliance.\nThis field must be set to 2 or 4 and the default version is 2.\nThis field is only significant for S3-compatible cloud services.\nSee the Cohesity online help for the supported S3-compatible Vault\n(External Target) types and the value to specify for this field\nbased on the current S3-compatible Vault (External Target) type."
          type: "integer"
          format: "int32"
          x-go-name: "SignatureVersion"
        useHttps: 
          description: "Specifies whether to use http or https to connect to the service.\nIf true, a secure connection (https) is used.\nThis field is only significant for S3-compatible cloud services."
          type: "boolean"
          x-go-name: "UseHttps"
      x-go-package: "cohesity/iris/server/data/public"
    AnalyseJarArg: 
      description: "Jar will be analysed and list of all mappers/reducers found in the jar will\nbe returned."
      type: "object"
      title: "API to analyse a JAR file. This JAR may contain multiple mappers/reducers."
      properties: 
        jarName: 
          description: "Name of the JAR to be analysed."
          type: "string"
          x-go-name: "JarName"
        jarPath: 
          description: "Path of the jar file."
          type: "string"
          x-go-name: "JarPath"
        saveEntities: 
          description: "If this flag is true, then also save mapper and reducers in scribe."
          type: "boolean"
          x-go-name: "SaveEntities"
      x-go-package: "yoda/base/analytics.pb"
    AnalyseJarResult: 
      type: "object"
      properties: 
        error: 
          description: "Status code of http rpc."
          $ref: "#/definitions/ErrorProto"
        mappers: 
          type: "array"
          title: "Name of all mapper classes found in jar file."
          items: 
            type: "string"
          x-go-name: "Mappers"
        reducers: 
          type: "array"
          title: "Name of all reducers classes found in jar file."
          items: 
            type: "string"
          x-go-name: "Reducers"
      x-go-package: "yoda/base/analytics.pb"
    AppRunHistory: 
      description: "AppRunHistory is the struct containing the run information of the\napplication instances. An application instance can be run only once. Each\nrun of the application creates a new application instance."
      type: "object"
      properties: 
        appInfo: 
          description: "AppInfo is the information about the map reduce application."
          $ref: "#/definitions/MapReduceInfo"
        mrInstances: 
          description: "InstancesWrapper is the slice containing the information about the map\nreduce application instances."
          type: "array"
          items: 
            $ref: "#/definitions/MapReduceInstanceWrapper"
          x-go-name: "InstancesWrapper"
      x-go-package: "cohesity/iris/server/data/public"
    ApplicationParameters: 
      type: "object"
      title: "Application specific parameters."
      properties: 
        truncateExchangeLog: 
          description: "If true, after the Cohesity Cluster successfully captures a Snapshot\nduring a Job Run, the Cluster truncates the Exchange transaction logs on\na Microsoft Exchange Server. The default value is false."
          type: "boolean"
          x-go-name: "TruncateExchangeLog"
      x-go-package: "cohesity/iris/server/data/public"
    ApplicationRestoreObject: 
      description: "Specifies the Application Server to restore and parameters specific to\nthat application."
      type: "object"
      title: "Application Server object to restore."
      properties: 
        applicationServerId: 
          description: "Specifies the Application Server to restore (for example, kSQL)."
          type: "integer"
          format: "int64"
          x-go-name: "ApplicationServerId"
        sqlRestoreParameters: 
          description: "Specifies parameters specific to this Application Server."
          $ref: "#/definitions/SqlRestoreParameters"
        targetHostId: 
          description: "Specifies the target host if the application is to be restored to a\ndifferent host. If this is empty, then the application is restored to\nthe original host, which is the hosting Protection Source."
          type: "integer"
          format: "int64"
          x-go-name: "TargetHostId"
        targetRootNodeId: 
          description: "Specifies the registered root node, like vCenter, of targetHost.\nIf this is empty, then it is assumed the root node of the target\nhost is the same as the host Protection Source of the application."
          type: "integer"
          format: "int64"
          x-go-name: "TargetRootNodeId"
      x-go-package: "cohesity/iris/server/data/public"
    ApplicationsRestoreTaskRequest: 
      description: "Specifies the request to create a restore task for restoring Application\nServers like SQL or Exchange servers hosted by a Protection Source."
      type: "object"
      title: "Create Applications Restore Task Request."
      required: 
        - "name"
        - "applicationEnvironment"
        - "hostingProtectionSource"
      properties: 
        applicationEnvironment: 
          description: "Specifies the Environment of the Application to restore like 'kSQL', or\n'kExchange'.\noverrideDescription: true"
          type: "string"
          enum: 
            - "kSQL"
            - "kExchange"
          x-go-name: "ApplicationEnvironment"
        applicationRestoreObjects: 
          description: "Specifies the Application Server objects whose data should be restored\nand the restore parameters for each of them."
          type: "array"
          items: 
            $ref: "#/definitions/ApplicationRestoreObject"
          x-go-name: "ApplicationRestoreObjects"
        hostingProtectionSource: 
          description: "Specifies the restore information for the Protection Source object that\nregistered and hosts the Application Servers. This provides the\nsnapshot details from which the applications should be restored."
          $ref: "#/definitions/RestoreObject"
        name: 
          description: "Specifies a name for the new task to be created. This field has to be\nset, and it needs to be unique across all restore tasks."
          type: "string"
          x-go-name: "Name"
        password: 
          description: "Specifies password of the username to access the target source."
          type: "string"
          x-go-name: "Password"
        username: 
          description: "Specifies username to access the target source."
          type: "string"
          x-go-name: "Username"
        vlanParameters: 
          description: "Specifies VLAN parameters for the restore operation."
          $ref: "#/definitions/VlanParameters"
      x-go-package: "cohesity/iris/server/data/public"
    ApplicationsWrapper: 
      description: "ApplicationsWrapper is the struct to define the list of map-reduce\napplications."
      type: "object"
      properties: 
        applications: 
          description: "Applications specifies the list of available map-reduce applications\nin analytics workbench."
          type: "array"
          items: 
            $ref: "#/definitions/MapReduceInfo"
          x-go-name: "Applications"
      x-go-package: "cohesity/iris/server/data/public"
    ArchivalTarget: 
      description: "Specifies settings about the Archival External Target (such as Tape or AWS)."
      type: "object"
      title: "Archival Target."
      properties: 
        vaultId: 
          description: "Specifies the id of Archival Vault assigned by the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "VaultId"
        vaultName: 
          description: "Name of the Archival Vault."
          type: "string"
          x-go-name: "VaultName"
        vaultType: 
          description: "Specifies the type of the Archival External Target such as 'kCloud' or\n'kTape'."
          type: "string"
          enum: 
            - "kCloud"
            - "kTape"
          x-go-name: "VaultType"
      x-go-package: "cohesity/iris/server/data/public"
    AuditLogsTile: 
      type: "object"
      title: "Audit logs for Dashboard."
      properties: 
        clusterAuditLogs: 
          description: "Specifies a list of Cluster audit logs that match the specified\nfilter criteria up to the limit specified in pageCount."
          type: "array"
          title: "Array of Cluster Audit Logs."
          items: 
            $ref: "#/definitions/ClusterAuditLog"
          x-go-name: "ClusterAuditLogs"
        totalCount: 
          description: "Specifies the total number of logs that match the specified\nfilter criteria. (This number might be larger than the size of the\nCluster Audit Logs array.)\nThis count is provided to indicate if additional requests must be\nmade to get the full result."
          type: "integer"
          format: "int64"
          x-go-name: "TotalCount"
      x-go-package: "cohesity/iris/server/data/public"
    AwsParams: 
      type: "object"
      title: "Specifies various resources when converting and deploying a VM to AWS."
      properties: 
        region: 
          description: "Specifies id of the AWS region in which to deploy the VM."
          type: "integer"
          format: "int64"
          x-go-name: "Region"
      x-go-package: "cohesity/iris/server/data/public"
    AwsProtectionSource: 
      description: "Specifies a Protection Source in AWS environment."
      type: "object"
      title: "AWS Protection Source."
      properties: 
        hostType: 
          description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
          type: "string"
          enum: 
            - "kLinux"
            - "kWindows"
          x-go-name: "HostType"
        ipAddresses: 
          description: "Specifies the IP address of the entity of type 'kVirtualMachine'."
          type: "string"
          x-go-name: "IpAddress"
        name: 
          description: "Specifies the name of the AWS Object set by the Cloud Provider."
          type: "string"
          x-go-name: "Name"
        ownerId: 
          description: "Specifies the owner id of the resource in AWS environment. With type,\nname and ownerId gives a globally unique identity to the AWS entity."
          type: "string"
          x-go-name: "OwnerId"
        regionId: 
          description: "Specifies the region Id of the entity if the entity is an EC2 instance."
          type: "string"
          x-go-name: "RegionId"
        resourceId: 
          description: "Specifies the unique Id of the resource given by the cloud provider."
          type: "string"
          x-go-name: "ResourceId"
        type: 
          description: "Specifies the type of an AWS Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an AWS source entity.\n'kIAMUser' indicates a unique user within an AWS account.\n'kRegion' indicates a geographical region in the global infrastructure.\n'kAvailabilityZone' indicates an availability zone within a region.\n'kEC2Instance' indicates a Virtual Machine running in AWS environment.\n'kVPC' indicates a virtual private cloud (VPC) network within AWS.\n'kSubnet' indicates a subnet inside the VPC.\n'kNetworkSecurityGroup' represents a network security group.\n'kInstanceType' represents various machine types.\n'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine."
          type: "string"
          enum: 
            - "kIAMUser"
            - "kRegion"
            - "kAvailabilityZone"
            - "kEC2Instance"
            - "kVPC"
            - "kSubnet"
            - "kNetworkSecurityGroup"
            - "kInstanceType"
            - "kKeyPair"
          x-go-name: "Type"
        userAccountId: 
          description: "Specifies the account id derived from the ARN of the user."
          type: "string"
          x-go-name: "UserAccountId"
        userResourceName: 
          description: "Specifies the Amazon Resource Name (ARN) of the user."
          type: "string"
          x-go-name: "UserResourceName"
      x-go-package: "cohesity/iris/server/data/public"
    AzureCloudCredentials: 
      description: "Specifies the cloud credentials to connect to a Microsoft\nAzure service account."
      type: "object"
      title: "Azure Cloud Credentials."
      properties: 
        storageAccessKey: 
          description: "Specifies the access key to use when accessing a storage tier\nin a Azure cloud service."
          type: "string"
          x-go-name: "StorageAccessKey"
        storageAccountName: 
          description: "Specifies the account name to use when accessing a storage tier\nin a Azure cloud service."
          type: "string"
          x-go-name: "StorageAccountName"
      x-go-package: "cohesity/iris/server/data/public"
    AzureParams: 
      type: "object"
      title: "Specifies various resources when converting and deploying a VM to Azure."
      properties: 
        resourceGroup: 
          description: "Specifies id of the Azure resource group. Its value is globally unique\nwithin Azure."
          type: "integer"
          format: "int64"
          x-go-name: "ResourceGroup"
        storageAccount: 
          description: "Specifies id of the storage account that will contain the storage\ncontainer within which we will create the blob that will become the VHD\ndisk for the cloned VM."
          type: "integer"
          format: "int64"
          x-go-name: "StorageAccount"
        storageContainer: 
          description: "Specifies id of the storage container within the above storage account."
          type: "integer"
          format: "int64"
          x-go-name: "StorageContainer"
      x-go-package: "cohesity/iris/server/data/public"
    AzureProtectionSource: 
      description: "Specifies a Protection Source in Azure environment."
      type: "object"
      title: "Azure Protection Source."
      properties: 
        hostType: 
          description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
          type: "string"
          enum: 
            - "kLinux"
            - "kWindows"
          x-go-name: "HostType"
        ipAddresses: 
          type: "array"
          title: "Specifies a list of IP addresses for entities of type 'kVirtualMachine'."
          items: 
            type: "string"
          x-go-name: "IpAddresses"
        location: 
          description: "Specifies the physical location of the resource group."
          type: "string"
          x-go-name: "Location"
        memoryMbytes: 
          description: "Specifies the amount of memory in MegaBytes of the Azure resource of\ntype 'kComputeOptions'."
          type: "integer"
          format: "int64"
          x-go-name: "MemoryMbytes"
        name: 
          description: "Specifies the name of the Azure Object set by the Cloud Provider.\nIf the provider did not set a name for the object, this field is not set."
          type: "string"
          x-go-name: "Name"
        numCores: 
          description: "Specifies the number of CPU cores of the Azure resource of\ntype 'kComputeOptions'."
          type: "integer"
          format: "int32"
          x-go-name: "NumCores"
        resourceId: 
          description: "Specifies the unique Id of the resource in Azure environment."
          type: "string"
          x-go-name: "ResourceId"
        type: 
          description: "Specifies the type of an Azure Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an Azure source entity.\n'kSubscription' indicates a billing unit within Azure account.\n'kResourceGroup' indicates a container that holds related resources.\n'kVirtualMachine' indicates a Virtual Machine in Azure environment.\n'kStorageAccount' represents a collection of storage containers.\n'kStorageKey' indicates a key required to access the storage account.\n'kStorageContainer' represents a storage container within a storage account.\n'kStorageBlob' represents a storage blog within a storage container.\n'kNetworkSecurityGroup' represents a network security group.\n'kVirtualNetwork' represents a virtual network.\n'kSubnet' represents a subnet within the virtual network.\n'kComputeOptions' indicates the number of CPU cores and memory size available for a type of a Virtual Machine."
          type: "string"
          enum: 
            - "kSubscription"
            - "kResourceGroup"
            - "kVirtualMachine"
            - "kStorageAccount"
            - "kStorageKey"
            - "kStorageContainer"
            - "kStorageBlob"
            - "kNetworkSecurityGroup"
            - "kVirtualNetwork"
            - "kSubnet"
            - "kComputeOptions"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    BackupRun: 
      description: "Specifies details about the Backup task for a Job Run.\nA Backup task captures the original backup snapshots for each Protection\nSource in the Job."
      type: "object"
      title: "Backup Run Task."
      properties: 
        environment: 
          description: "Specifies the environment type that the task is protecting.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "string"
          enum: 
            - "kVMware"
            - "kSQL"
            - "kView"
            - "kPuppeteer"
            - "kPhysical"
            - "kPure"
            - "kNetapp"
            - "kGenericNas"
            - "kHyperV"
            - "kAcropolis"
            - "kAzure"
          x-go-name: "Environment"
        error: 
          description: "Specifies if an error occurred (if any) while running this task.\nThis field is populated when the status is equal to 'kFailure'."
          type: "string"
          x-go-name: "Error"
        jobRunId: 
          description: "Specifies the id of the Job Run that ran the backup task and\nthe copy tasks."
          type: "integer"
          format: "int64"
          x-go-name: "JobRunId"
        message: 
          description: "Specifies a message after finishing the task successfully. This field\nis optionally populated when the status is equal to 'kSuccess'."
          type: "string"
          x-go-name: "Message"
        metadataDeleted: 
          description: "Specifies if the metadata and snapshots associated with this Job Run\nhave been deleted.\nThis field is set to true when the snapshots, which are marked\nfor deletion, are removed by garbage collection.\nThe associated metadata is also deleted."
          type: "boolean"
          x-go-name: "MetadataDeleted"
        quiesced: 
          description: "Specifies if app-consistent snapshot was captured. This field is set to\ntrue, if an app-consistent snapshot was taken by\nquiescing applications and the file system before taking a backup."
          type: "boolean"
          x-go-name: "Quiesced"
        runType: 
          description: "Specifies the type of backup such as 'kRegular', 'kFull', 'kLog' or\n'kSystem'.\n'kRegular' indicates a incremental (CBT) backup. Incremental backups\nutilizing CBT (if supported) are captured of the target protection objects.\nThe first run of a kRegular schedule captures all the blocks.\n'kFull' indicates a full (no CBT) backup. A complete backup\n(all blocks) of the target protection objects are always captured and\nChange Block Tracking (CBT) is not utilized.\n'kLog' indicates a Database Log backup. Capture the database\ntransaction logs to allow rolling back to a specific point in time.\n'kSystem' indicates a system backup. System backups are used to do\nbare metal recovery of the system to a specific point in time."
          type: "string"
          enum: 
            - "kRegular"
            - "kFull"
            - "kLog"
            - "kSystem"
          x-go-name: "RunType"
        slaViolated: 
          description: "Specifies if the SLA was violated for the Job Run. This field is set\nto true, if time to complete the Job Run is longer than the SLA\nspecified. This field is populated when the status is\nset to 'kSuccess' or 'kFailure'."
          type: "boolean"
          x-go-name: "SlaViolated"
        snapshotsDeleted: 
          description: "Specifies if backup snapshots associated\nwith this Job Run have been marked for deletion because of the\nretention settings in the Policy or\nif they were manually deleted from the Cohesity Dashboard."
          type: "boolean"
          x-go-name: "SnapshotsDeleted"
        snapshotsDeletedTimeUsecs: 
          description: "Specifies if backup snapshots associated\nwith this Job Run have been marked for deletion because of the\nretention settings in the Policy or\nif they were manually deleted from the Cohesity Dashboard."
          type: "integer"
          format: "int64"
          x-go-name: "SnapshotsDeletedTimeUsecs"
        sourceBackupStatus: 
          description: "Specifies the status of backing up each source objects (such as VMs)\nassociated with the job."
          type: "array"
          title: "Array of Source Object Backup Status."
          items: 
            $ref: "#/definitions/SourceBackupStatus"
          x-go-name: "SourceBackupStatus"
        stats: 
          description: "Specifies the aggregated stats of all Backup Run tasks in a\nProtection Run."
          $ref: "#/definitions/ProtectionJobRunStats"
        status: 
          description: "Specifies the status of Backup task such as 'kRunning', 'kSuccess',\n'kFailure' etc.\n'kAccepted' indicates the task is queued to run but not yet running.\n'kRunning' indicates the task is running.\n'kCanceling' indicates a request to cancel the task has occurred but\nthe task is not yet canceled.\n'kCanceled' indicates the task has been canceled.\n'kSuccess' indicates the task was successful.\n'kFailure' indicates the task failed."
          type: "string"
          enum: 
            - "kAccepted"
            - "kRunning"
            - "kCanceling"
            - "kCanceled"
            - "kSuccess"
            - "kFailure"
          x-go-name: "Status"
        warnings: 
          description: "Specifies the warnings that occurred (if any) while running this task."
          type: "array"
          title: "Array of Warnings."
          items: 
            type: "string"
          x-go-name: "Warnings"
      x-go-package: "cohesity/iris/server/data/public"
    BackupSourceStats: 
      description: "Specifies statistics about a Backup task in a Protection Job Run.\nSpecifies statistics for one backup task. One backup task is used to\nbackup on Protection Source. This structure is also used to aggregate\nstats of a Backup tasks in a Protection Job Run."
      type: "object"
      title: "Backup Run Statistics."
      properties: 
        admittedTimeUsecs: 
          description: "Specifies the time the task was unqueued from the queue to start running.\nThis field can be used to determine the following times:\ninitial-wait-time = admittedTimeUsecs - startTimeUsecs\nrun-time = endTimeUsecs - admittedTimeUsecs\nIf the task ends up waiting in other queues, then actual run-time will\nbe smaller than the run-time computed this way.\nThis field is only populated for Backup tasks currently."
          type: "integer"
          format: "int64"
          x-go-name: "AdmittedTimeUsecs"
        endTimeUsecs: 
          description: "Specifies the end time of the Protection Run. The end time\nis specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "EndTimeUsecs"
        startTimeUsecs: 
          description: "Specifies the start time of the Protection Run. The start time\nis specified as a Unix epoch Timestamp (in microseconds).\nThis time is when the task is queued to an internal queue where tasks\nare waiting to run."
          type: "integer"
          format: "int64"
          x-go-name: "StartTimeUsecs"
        timeTakenUsecs: 
          description: "Specifies the actual execution time for the protection run to complete\nthe backup task and the copy tasks. This time will not include the\ntime waited in various internal queues.\nThis field is only populated for Backup tasks currently."
          type: "integer"
          format: "int64"
          x-go-name: "TimeTakenUsecs"
        totalBytesReadFromSource: 
          description: "Specifies the total amount of data read from the source (so far)."
          type: "integer"
          format: "int64"
          x-go-name: "TotalBytesReadFromSource"
        totalBytesToReadFromSource: 
          description: "Specifies the total amount of data expected to be read from the\nsource."
          type: "integer"
          format: "int64"
          x-go-name: "TotalBytesToReadFromSource"
        totalLogicalBackupSizeBytes: 
          description: "Specifies the size of the source object (such as a VM) protected by\nthis task on the primary storage after the snapshot is taken.\nThe logical size of the data on the source if the\ndata is fully hydrated or expanded and not reduced\nby change-block tracking, compression and deduplication."
          type: "integer"
          format: "int64"
          x-go-name: "TotalLogicalBackupSizeBytes"
        totalPhysicalBackupSizeBytes: 
          description: "Specifies the total amount of physical space used on the Cohesity\nCluster to store the protected object after being reduced by change-block\ntracking, compression and deduplication. For example, if the logical\nbackup size is 1GB, but only 1MB was used on the Cohesity Cluster\nto store it, this field be equal to 1MB."
          type: "integer"
          format: "int64"
          x-go-name: "TotalPhysicalBackupSizeBytes"
        totalSourceSizeBytes: 
          description: "Specifies the size of the source object (such as a VM) protected by\nthis task on the primary storage before the snapshot is taken.\nThe logical size of the data on the source if the\ndata is fully hydrated or expanded and not reduced\nby change-block tracking, compression and deduplication."
          type: "integer"
          format: "int64"
          x-go-name: "TotalSourceSizeBytes"
      x-go-package: "cohesity/iris/server/data/public"
    BandwidthLimit: 
      description: "Specifies settings for limiting the data transfer rate between\nthe local and remote Clusters."
      type: "object"
      title: "Bandwidth Limit."
      properties: 
        bandwidthLimitOverrides: 
          description: "Specifies a list of override bandwidth limits and time periods\nwhen those limits override the rateLimitBytesPerSec limit.\nIf overlapping time periods are specified, the last one in the\narray takes precedence."
          type: "array"
          title: "Array of Override Bandwidth Limits."
          items: 
            $ref: "#/definitions/BandwidthLimitOverride"
          x-go-name: "BandwidthLimitOverrides"
        rateLimitBytesPerSec: 
          description: "Specifies the maximum allowed data transfer rate between the local Cluster\nand remote Clusters. The value is specified in bytes per second.\nIf not set, the data transfer rate is not limited."
          type: "integer"
          format: "int64"
          x-go-name: "RateLimitBytesPerSec"
        timezone: 
          description: "Specifies a time zone for the specified time period.\nThe time zone is defined in the following format: \"Area/Location\",\nfor example: \"America/New_York\"."
          type: "string"
          x-go-name: "Timezone"
      x-go-package: "cohesity/iris/server/data/public"
    BandwidthLimitOverride: 
      description: "Specifies bandwidth limit override value to be enforced during\nthe specified daily time period for the specified days of the week."
      type: "object"
      title: "Bandwidth Limit Override"
      properties: 
        bytesPerSecond: 
          description: "Specifies the value to override the regular maximum bandwidth rate\n(rateLimitBytesPerSec) for the specified time period.\nThe value is specified in bytes per second."
          type: "integer"
          format: "int64"
          x-go-name: "BytesPerSecond"
        timePeriods: 
          description: "Specifies a daily time period and days of the week when the\nregular maximum bandwidth rate should be overridden."
          $ref: "#/definitions/TimeOfAWeek"
      x-go-package: "cohesity/iris/server/data/public"
    BasicClusterInfo: 
      description: "Specifies basic information about the Cohesity Cluster."
      type: "object"
      title: "Basic Cohesity Cluster Information."
      properties: 
        clusterSoftwareVersion: 
          description: "Specifies the current release of the Cohesity software running on\nthis Cohesity Cluster."
          type: "string"
          x-go-name: "ClusterSoftwareVersion"
        clusterType: 
          description: "Specifies the type of Cohesity Cluster.\n'kPhysical' indicates the Cohesity Cluster is hosted directly on hardware.\n'kVirtualRobo' indicates the Cohesity Cluster is hosted in a VM on\na ESXi Host of a VMware vCenter Server using Cohesity's Virtual Edition.\n'kMicrosoftCloud' indicates the Cohesity Cluster is hosed in a VM\non Microsoft Azure using Cohesity's Cloud Edition.\n'kAmazonCloud' indicates the Cohesity Cluster is hosed in a VM\non Amazon S3 using Cohesity's Cloud Edition.\n'kGoogleCloud' indicates the Cohesity Cluster is hosed in a VM\non Google Cloud Platform using Cohesity's Cloud Edition."
          type: "string"
          enum: 
            - "kPhysical"
            - "kVirtualRobo"
            - "kMicrosoftCloud"
            - "kAmazonCloud"
            - "kGoogleCloud"
          x-go-name: "ClusterType"
        domains: 
          description: "Specifies a list of domains joined to the Cohesity Cluster,\nincluding the default LOCAL Cohesity domain used to store the\nlocal Cohesity users."
          type: "array"
          title: "Array of Domains."
          items: 
            type: "string"
          x-go-name: "Domains"
        languageLocale: 
          description: "Specifies the language and locale for the Cohesity Cluster."
          type: "string"
          x-go-name: "LanguageLocale"
        name: 
          description: "Specifies the name of the Cohesity Cluster."
          type: "string"
          x-go-name: "Name"
      x-go-package: "cohesity/iris/server/data/public"
    BlackoutPeriod: 
      description: "Specifies a time range in a single day when new Job Runs of\nProtection Jobs cannot be started. For example, a Protection Job\nwith a daily schedule could define a blackout period for Sunday."
      type: "object"
      title: "Blackout Period."
      properties: 
        day: 
          description: "Blackout Day.\n\nSpecifies a day in the week when no new Job Runs should be started\nsuch as 'kSunday'.\nIf not set, the time range applies to all days.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
          type: "string"
          enum: 
            - "kSunday"
            - "kMonday"
            - "kTuesday"
            - "kWednesday"
            - "kThursday"
            - "kFriday"
            - "kSaturday"
          x-go-name: "Day"
        endTime: 
          description: "Specifies the end time of the blackout time range."
          type: "object"
          title: "Blackout End Time."
          properties: 
            hour: 
              description: "Specifies an (0-23) hour in a day."
              type: "integer"
              format: "int32"
              x-go-name: "Hour"
            minute: 
              description: "Specifies a (0-59) minute in an hour."
              type: "integer"
              format: "int32"
              x-go-name: "Minute"
        startTime: 
          description: "Specifies the start time of the blackout time range."
          type: "object"
          title: "Blackout Start Time."
          properties: 
            hour: 
              description: "Specifies an (0-23) hour in a day."
              type: "integer"
              format: "int32"
              x-go-name: "Hour"
            minute: 
              description: "Specifies a (0-59) minute in an hour."
              type: "integer"
              format: "int32"
              x-go-name: "Minute"
      x-go-package: "cohesity/iris/server/data/public"
    CancelProtectionJobRunParam: 
      type: "object"
      title: "Cancel a Protection Job Run."
      properties: 
        copyTaskUid: 
          description: "CopyTaskUid is the Uid of a copy task. If a particular copy task is to be\ncancelled, this field should be set to the id of that particular copy task.\nFor example, if replication task is to be canceled, CopyTaskUid of the\nreplication task has to be specified."
          $ref: "#/definitions/UniversalId"
        jobRunId: 
          description: "Run Id of a Protection Job Run that needs to be cancelled. If this Run\nid does not match the id of an active Run in the Protection job, the job\nRun is not cancelled and an error will be\nreturned."
          type: "integer"
          format: "int64"
          x-go-name: "JobRunId"
      x-go-package: "cohesity/iris/server/data/public"
    CapacityByTier: 
      description: "CapacityByTier provides the physical capacity in bytes of each storage\ntier."
      type: "object"
      properties: 
        storageTier: 
          description: "StorageTier is the type of StorageTier."
          type: "integer"
          format: "int64"
          x-go-name: "StorageTier"
        tierMaxPhysicalCapacityBytes: 
          description: "TierMaxPhysicalCapacityBytes is the maximum physical capacity in bytes of\nthe storage tier."
          type: "integer"
          format: "int64"
          x-go-name: "TierMaxPhysicalCapacityBytes"
      x-go-package: "cohesity/iris/server/data/public"
    CentrifyZone: 
      description: "Specifies the properties associated to a Centrify zone of an Active\nDirectory domain."
      type: "object"
      properties: 
        centrifySchema: 
          description: "Specifies the schema of this Centrify zone.\nThe below list of schemas and their values are taken from the document\nCentrify Server Suite 2016 Windows API Programmer's Guide\nhttps://docs.centrify.com/en/css/suite2016/centrify-win-progguide.pdf\n'kCentrifyDynamicSchema_1_0' specifies dynamic schema, version 1.0.\n'kCentrifyDynamicSchema_2_0' specifies dynamic schema, version 2.0.\n'kCentrifyDynamicSchema_3_0' specifies dynamic schema, version 3.0.\n'kCentrifyDynamicSchema_5_0' specifies dynamic schema, version 5.0.\n'kCentrifySfu_3_0' specifies sfu schema, version 3.0.\n'kCentrifySfu_3_0_V5' specifies sfu schema, 3.0.5.\n'kCentrifySfu_4_0' specifies sfu schema, version 4.0.\n'kCentrifyCdcRfc2307' specifies cdcrfc2307 schema.\n'kCentrifyCdcRfc2307_2' specifies cdcrfc2307, version 2.\n'kCentrifyCdcRfc2307_3' specifies cdcrfc2307, version 3."
          type: "string"
          enum: 
            - "kCentrifyDynamicSchema_1_0"
            - "kCentrifyDynamicSchema_2_0"
            - "kCentrifySfu_3_0"
            - "kCentrifySfu_4_0"
            - "kCentrifyCdcRfc2307"
            - "kCentrifyDynamicSchema_3_0"
            - "kCentrifyCdcRfc2307_2"
            - "kCentrifyDynamicSchema_5_0"
            - "kCentrifyCdcRfc2307_3"
            - "kCentrifySfu_3_0_V5"
          x-go-name: "CentrifySchema"
        description: 
          description: "Specifies a description of the Centrify zone."
          type: "string"
          x-go-name: "Description"
        distinguishedName: 
          description: "Specifies the distinguished name of the Centrify zone."
          type: "string"
          x-go-name: "DistinguishedName"
      x-go-package: "cohesity/iris/server/data/public"
    ChangeProtectionJobStateParam: 
      description: "Specifies if the Run state of a Protection Job should change."
      type: "object"
      title: "Change Job Run Pause/Resume State."
      properties: 
        pause: 
          description: "If true, the specified Protection Job is paused and no new Runs\nof the Job are started. Any Runs that were executing continue to run.\nIf false and the Protection Job was in a paused state, the\nProtection Job resumes and new Runs are started according to the\nschedule defined in the associated Policy."
          type: "boolean"
          x-go-name: "Pause"
      x-go-package: "cohesity/iris/server/data/public"
    ChassisInfo: 
      type: "object"
      title: "ChassisInfo is the struct for the Chassis."
      properties: 
        chassisId: 
          description: "ChassisId is a unique id assigned to the chassis."
          type: "integer"
          format: "int64"
          x-go-name: "ChassisId"
        chassisName: 
          description: "ChassisName is the name of the chassis. This could be the chassis serial\nnumber."
          type: "string"
          x-go-name: "ChassisName"
        location: 
          description: "Location is the location of the chassis within the rack."
          type: "string"
          x-go-name: "Location"
        rackId: 
          description: "Rack is the rack within which this chassis lives."
          type: "integer"
          format: "int64"
          x-go-name: "RackId"
      x-go-package: "cohesity/iris/server/data/public"
    CifsShareInfo: 
      description: "Specifies information about a CIFS share of a NetApp volume."
      type: "object"
      title: "CIFS Share Information."
      properties: 
        acls: 
          description: "Specifies the ACLs for this share."
          type: "array"
          title: "Array of Access Control Lists."
          items: 
            type: "string"
          x-go-name: "Acls"
        name: 
          description: "Specifies the name of the CIFS share.\nThis can be different from the volume name that this share belongs to.\nA single volume can export multiple CIFS shares,\neach with unique settings such as permissions."
          type: "string"
          x-go-name: "Name"
        path: 
          description: "Specifies the path of this share under the Vserver's root."
          type: "string"
          x-go-name: "Path"
        serverName: 
          description: "Specifies the CIFS server name (such as 'NETAPP-01') specified by the\nsystem administrator.\nThis name is searchable within the active directory domain."
          type: "string"
          x-go-name: "ServerName"
      x-go-package: "cohesity/iris/server/data/public"
    CloneDirectoryParams: 
      description: "Specifies the params that have to be provided to clone a directory."
      type: "object"
      title: "Clone Directory Request Params."
      properties: 
        destinationDirectoryName: 
          description: "Name of the new directory which will contain the clone contents."
          type: "string"
          x-go-name: "DestinationDirectoryName"
        destinationParentDirectoryPath: 
          description: "Specifies the path of the destination parent directory. The source dir\nwould be cloned as a child of dest parent dir."
          type: "string"
          x-go-name: "DestinationParentDirectoryPath"
        sourceDirectoryPath: 
          description: "Specifies the path of the source directory"
          type: "string"
          x-go-name: "SourceDirectoryPath"
      x-go-package: "cohesity/iris/server/data/public"
    CloneTaskRequest: 
      description: "Specifies the settings for a Restore Task that clones VMs or Views."
      type: "object"
      title: "Clone Restore Task Request."
      required: 
        - "name"
        - "type"
      properties: 
        cloneViewParameters: 
          description: "Specifies settings for cloning an existing View.\nThis field is required for a 'kCloneView' Restore Task."
          type: "object"
          title: "Clone View."
          properties: 
            accessSids: 
              description: "Specifies the list of security identifiers (SIDs) for the restricted\nPrincipals who have access to this View."
              type: "array"
              title: "Array of Security Identifiers (SIDs)"
              items: 
                type: "string"
              x-go-name: "AccessSids"
            cloneViewName: 
              description: "Specifies the name of the new View that is cloned from the source View."
              type: "string"
              x-go-name: "CloneViewName"
            dataLockExpiryUsecs: 
              description: "DataLock (Write Once Read Many) lock expiry epoch time in microseconds. If\nspecified, a view will be marked as a DataLock view. If a view is marked\nas a DataLock view, only a Data Security Officer (a user having Data\nSecurity Privilege) can delete the view until the lock expiry time."
              type: "integer"
              format: "int64"
              x-go-name: "DataLockExpiryUsecs"
            description: 
              description: "Specifies an optional text description about the View."
              type: "string"
              x-go-name: "Description"
            enableFilerAuditLogging: 
              description: "Specifies if Filer Audit Logging is enabled for this view."
              type: "boolean"
              x-go-name: "EnableFilerAuditLogging"
            enableMixedModePermissions: 
              description: "If set, mixed mode (NFS and SMB) access is enabled for this view."
              type: "boolean"
              x-go-name: "EnableMixedModePermissions"
            enableSmbAccessBasedEnumeration: 
              description: "Specifies if access-based enumeration should be enabled.\nIf 'true', only files and folders that the user has permissions to\naccess are visible on the SMB share for that user."
              type: "boolean"
              x-go-name: "EnableSmbAccessBasedEnumeration"
            enableSmbViewDiscovery: 
              description: "If set, it enables discovery of view for SMB."
              type: "boolean"
              x-go-name: "EnableSmbViewDiscovery"
            fileExtensionFilter: 
              description: "Optional filtering criteria that should be satisfied by all the files\ncreated in this view. It does not affect existing files."
              $ref: "#/definitions/FileExtensionFilter"
            logicalQuota: 
              description: "Specifies an optional logical quota limit (in bytes) for the usage allowed\non this View.\n(Logical data is when the data is fully hydrated and expanded.)\nThis limit overrides the limit inherited from the Storage Domain\n(View Box) (if set).\nIf logicalQuota is nil, the limit is inherited from the\nStorage Domain (View Box) (if set).\nA new write is not allowed if the Storage Domain (View Box) will exceed the\nspecified quota.\nHowever, it takes time for the Cohesity Cluster to calculate\nthe usage across Nodes, so the limit may be exceeded by a small amount.\nIn addition, if the limit is increased or data is removed,\nthere may be a delay before the Cohesity Cluster allows more data\nto be written to the View, as the Cluster is calculating the usage\nacross Nodes."
              type: "object"
              title: "Quota Policy"
              properties: 
                AlertLimit: 
                  description: "AlertLimitBytes converted to GiB format for report purposes."
                  type: "string"
                HardLimit: 
                  description: "HardLimitBytes converted to GiB format for report purposes."
                  type: "string"
                alertLimitBytes: 
                  description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AlertLimitBytes"
                alertThresholdPercentage: 
                  description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AlertThresholdPercentage"
                hardLimitBytes: 
                  description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
                  type: "integer"
                  format: "int64"
                  x-go-name: "HardLimitBytes"
            protocolAccess: 
              description: "Specifies the supported Protocols for the View."
              type: "string"
              enum: 
                - "kAll"
                - "kNFSOnly"
                - "kSMBOnly"
                - "kS3Only"
              x-go-name: "ProtocolAccess"
            qos: 
              description: "Specifies the Quality of Service (QoS) Policy for the View."
              $ref: "#/definitions/QoS"
            smbPermissionsInfo: 
              description: "Specifies the SMB permissions for the View."
              $ref: "#/definitions/SmbPermissionsInfo"
            sourceViewName: 
              description: "Specifies the name of the source View that will be cloned."
              type: "string"
              x-go-name: "SourceViewName"
            storagePolicyOverride: 
              description: "Specifies if inline deduplication and compression settings inherited from\nthe Storage Domain (View Box) should be disabled for this View."
              $ref: "#/definitions/StoragePolicyOverride"
            subnetWhitelist: 
              description: "Specifies a list of Subnets with IP addresses that have permissions to\naccess the View. (Overrides the Subnets specified at the global\nCohesity Cluster level.)"
              type: "array"
              title: "Array of Subnets."
              items: 
                $ref: "#/definitions/Subnet"
              x-go-name: "SubnetWhitelist"
        continueOnError: 
          description: "Specifies if the Restore Task should continue when some operations on some\nobjects fail. If true, the Cohesity Cluster ignores intermittent\nerrors and restores as many objects as possible."
          type: "boolean"
          x-go-name: "ContinueOnError"
        hypervParameters: 
          description: "Specifies additional parameters for 'kHyperV' restore objects."
          $ref: "#/definitions/HypervCloneParameters"
        name: 
          description: "Specifies the name of the Restore Task. This field must be set and\nmust be a unique name."
          type: "string"
          x-go-name: "Name"
        newParentId: 
          description: "Specify a new registered parent Protection Source. If specified\nthe selected objects are cloned or recovered to this new Protection\nSource. If not specified, objects are cloned or recovered\nto the original Protection Source that was managing them."
          type: "integer"
          format: "int64"
          x-go-name: "NewParentId"
        objects: 
          description: "Specifies a list of Protection Source objects or Protection Job objects\n(with specified Protection Source objects)."
          type: "array"
          title: "Array of Objects."
          items: 
            $ref: "#/definitions/RestoreObject"
          x-go-name: "Objects"
        targetViewName: 
          description: "Specifies the name of the View where the cloned VMs are stored.\nThis field is required for a 'kCloneVMs' Restore Task."
          type: "string"
          x-go-name: "TargetViewName"
        type: 
          description: "Specifies the type of Restore Task such as 'kCloneVMs' or 'kCloneView'.\n'kCloneVMs' specifies a Restore Task that clones VMs.\n'kCloneView' specifies a Restore Task that clones a View."
          type: "string"
          enum: 
            - "kCloneVMs"
            - "kCloneView"
          x-go-name: "Type"
        vlanParameters: 
          description: "Specifies VLAN parameters for the restore operation."
          $ref: "#/definitions/VlanParameters"
        vmwareParameters: 
          description: "Specifies additional parameters for 'kVmware' restore objects."
          $ref: "#/definitions/VmwareCloneParameters"
      x-go-package: "cohesity/iris/server/data/public"
    CloneViewRequest: 
      description: "Specifies the settings for cloning an existing View."
      type: "object"
      title: "Clone View Request."
      properties: 
        accessSids: 
          description: "Specifies the list of security identifiers (SIDs) for the restricted\nPrincipals who have access to this View."
          type: "array"
          title: "Array of Security Identifiers (SIDs)"
          items: 
            type: "string"
          x-go-name: "AccessSids"
        cloneViewName: 
          description: "Specifies the name of the new View that is cloned from the source View."
          type: "string"
          x-go-name: "CloneViewName"
        dataLockExpiryUsecs: 
          description: "DataLock (Write Once Read Many) lock expiry epoch time in microseconds. If\nspecified, a view will be marked as a DataLock view. If a view is marked\nas a DataLock view, only a Data Security Officer (a user having Data\nSecurity Privilege) can delete the view until the lock expiry time."
          type: "integer"
          format: "int64"
          x-go-name: "DataLockExpiryUsecs"
        description: 
          description: "Specifies an optional text description about the View."
          type: "string"
          x-go-name: "Description"
        enableFilerAuditLogging: 
          description: "Specifies if Filer Audit Logging is enabled for this view."
          type: "boolean"
          x-go-name: "EnableFilerAuditLogging"
        enableMixedModePermissions: 
          description: "If set, mixed mode (NFS and SMB) access is enabled for this view."
          type: "boolean"
          x-go-name: "EnableMixedModePermissions"
        enableSmbAccessBasedEnumeration: 
          description: "Specifies if access-based enumeration should be enabled.\nIf 'true', only files and folders that the user has permissions to\naccess are visible on the SMB share for that user."
          type: "boolean"
          x-go-name: "EnableSmbAccessBasedEnumeration"
        enableSmbViewDiscovery: 
          description: "If set, it enables discovery of view for SMB."
          type: "boolean"
          x-go-name: "EnableSmbViewDiscovery"
        fileExtensionFilter: 
          description: "Optional filtering criteria that should be satisfied by all the files\ncreated in this view. It does not affect existing files."
          $ref: "#/definitions/FileExtensionFilter"
        logicalQuota: 
          description: "Specifies an optional logical quota limit (in bytes) for the usage allowed\non this View.\n(Logical data is when the data is fully hydrated and expanded.)\nThis limit overrides the limit inherited from the Storage Domain\n(View Box) (if set).\nIf logicalQuota is nil, the limit is inherited from the\nStorage Domain (View Box) (if set).\nA new write is not allowed if the Storage Domain (View Box) will exceed the\nspecified quota.\nHowever, it takes time for the Cohesity Cluster to calculate\nthe usage across Nodes, so the limit may be exceeded by a small amount.\nIn addition, if the limit is increased or data is removed,\nthere may be a delay before the Cohesity Cluster allows more data\nto be written to the View, as the Cluster is calculating the usage\nacross Nodes."
          type: "object"
          title: "Quota Policy"
          properties: 
            AlertLimit: 
              description: "AlertLimitBytes converted to GiB format for report purposes."
              type: "string"
            HardLimit: 
              description: "HardLimitBytes converted to GiB format for report purposes."
              type: "string"
            alertLimitBytes: 
              description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "AlertLimitBytes"
            alertThresholdPercentage: 
              description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
              type: "integer"
              format: "int64"
              x-go-name: "AlertThresholdPercentage"
            hardLimitBytes: 
              description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "HardLimitBytes"
        protocolAccess: 
          description: "Specifies the supported Protocols for the View."
          type: "string"
          enum: 
            - "kAll"
            - "kNFSOnly"
            - "kSMBOnly"
            - "kS3Only"
          x-go-name: "ProtocolAccess"
        qos: 
          description: "Specifies the Quality of Service (QoS) Policy for the View."
          $ref: "#/definitions/QoS"
        smbPermissionsInfo: 
          description: "Specifies the SMB permissions for the View."
          $ref: "#/definitions/SmbPermissionsInfo"
        sourceViewName: 
          description: "Specifies the name of the source View that will be cloned."
          type: "string"
          x-go-name: "SourceViewName"
        storagePolicyOverride: 
          description: "Specifies if inline deduplication and compression settings inherited from\nthe Storage Domain (View Box) should be disabled for this View."
          $ref: "#/definitions/StoragePolicyOverride"
        subnetWhitelist: 
          description: "Specifies a list of Subnets with IP addresses that have permissions to\naccess the View. (Overrides the Subnets specified at the global\nCohesity Cluster level.)"
          type: "array"
          title: "Array of Subnets."
          items: 
            $ref: "#/definitions/Subnet"
          x-go-name: "SubnetWhitelist"
      x-go-package: "cohesity/iris/server/data/public"
    CloseSmbFileOpenParameters: 
      type: "object"
      title: "Specifies parameters required to force close an active SMB file open."
      properties: 
        filePath: 
          description: "Specifies the filepath in the view relative to the root filesystem.\nIf this field is specified, viewName field must also be specified."
          type: "string"
          x-go-name: "FilePath"
        openId: 
          description: "Specifies the id of the active open."
          type: "integer"
          format: "int64"
          x-go-name: "OpenId"
        viewName: 
          description: "Specifies the name of the View in which to search. If a view name is not\nspecified, all the views in the Cluster is searched.\nThis field is mandatory if filePath field is specified."
          type: "string"
          x-go-name: "ViewName"
      x-go-package: "cohesity/iris/server/data/public"
    CloudDeployTarget: 
      description: "Message that specifies the details about CloudDeploy target where backup\nsnapshots may be converted and stored."
      type: "object"
      properties: 
        awsParams: 
          description: "Specifies various resources when converting and deploying a VM to AWS."
          title: "Contains information needed to identify various resources when deploying\nVMs to Cloud."
          $ref: "#/definitions/AwsParams"
        azureParams: 
          description: "Specifies various resources when converting and deploying a VM to Azure."
          $ref: "#/definitions/AzureParams"
        id: 
          description: "Entity corresponding to the cloud deploy target.\n\nSpecifies the id field inside the EntityProto."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        name: 
          description: "Specifies the inner object's name or a human-readable string made off the\nsalient attributes. This is only plumbed when Entity objects are exposed\nto Iris BE or to Yoda."
          type: "string"
          x-go-name: "DisplayName"
        type: 
          description: "Specifies the type of the CloudDeploy target."
          type: "string"
          enum: 
            - "kAzure"
            - "kAws"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    CloudParameters: 
      description: "Specifies Cloud parameters that are applicable to all Protection\nSources in a Protection Job in certain scenarios."
      type: "object"
      title: "Protection Job Parameters specific to Cloud related."
      properties: 
        failoverToCloud: 
          description: "Specifies whether the Protection Sources in this Protection Job\nwill be failed over to Cloud. This flag is applicable to backup\non-prem Sources."
          type: "boolean"
          x-go-name: "FailoverToCloud"
      x-go-package: "cohesity/iris/server/data/public"
    Cluster: 
      description: "Specifies information about the Cohesity Cluster."
      type: "object"
      title: "Cohesity Cluster."
      properties: 
        bondingMode: 
          description: "Specifies the bonding mode to use when bonding NICs to this Cluster.\n'KActiveBackup' indicates an Active-backup policy bonding mode.\n'K802_3ad' indicates an EEE 802.3ad Dynamic link aggregation bonding mode.\n'KBalanceAlb' indicates a Adaptive load balancing bonding mode."
          type: "string"
          enum: 
            - "ActiveBackup"
            - "802_3ad"
            - "BalanceAlb"
          x-go-name: "BondingMode"
        clusterAuditLogConfig: 
          description: "Cluster Audit Log Configuration."
          $ref: "#/definitions/ClusterAuditLogConfiguration"
        clusterSoftwareVersion: 
          description: "Specifies the current release of the Cohesity software running on\nthis Cohesity Cluster."
          type: "string"
          x-go-name: "ClusterSoftwareVersion"
        clusterType: 
          description: "Specifies the type of Cluster such as kPhysical.\n'kPhysical' indicates the Cohesity Cluster is hosted directly on hardware.\n'kVirtualRobo' indicates the Cohesity Cluster is hosted in a VM on\na ESXi Host of a VMware vCenter Server using Cohesity's Virtual Edition.\n'kMicrosoftCloud' indicates the Cohesity Cluster is hosed in a VM\non Microsoft Azure using Cohesity's Cloud Edition.\n'kAmazonCloud' indicates the Cohesity Cluster is hosed in a VM\non Amazon S3 using Cohesity's Cloud Edition.\n'kGoogleCloud' indicates the Cohesity Cluster is hosed in a VM\non Google Cloud Platform using Cohesity's Cloud Edition."
          type: "string"
          enum: 
            - "kPhysical"
            - "kVirtualRobo"
            - "kMicrosoftCloud"
            - "kAmazonCloud"
            - "kGoogleCloud"
          x-go-name: "ClusterType"
        createdTimeMsecs: 
          description: "Specifies the time when the Cohesity Cluster was created.\nThis value is specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "CreatedTimeMsecs"
        currentOpScheduledTimeSecs: 
          description: "Specifies the time scheduled by the Cohesity Cluster to\nstart the current running operation."
          type: "integer"
          format: "int64"
          x-go-name: "CurrentOpScheduledTimeSecs"
        currentOperation: 
          description: "Specifies the current Cluster-level operation in progress.\n'kUpgrade' indicates the Cohesity Cluster is upgrading to a new release.\n'kRemoveNode' indicates the Cohesity Cluster is removing a Node\nfrom the Cluster.\n'kNone' indicates no action is occurring on the Cohesity Cluster."
          type: "string"
          enum: 
            - "kRemoveNode"
            - "kUpgrade"
            - "kNone"
          x-go-name: "CurrentOperation"
        currentTimeMsecs: 
          description: "Specifies the current system time on the Cohesity Cluster.\nThis value is specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "CurrentTimeMsecs"
        dnsServerIps: 
          description: "Specifies the IP addresses of the DNS Servers used by the Cohesity\nCluster."
          type: "array"
          title: "Array of IP Addresses of DNS Servers."
          items: 
            type: "string"
          x-go-name: "DnsServerIps"
        domainNames: 
          description: "The first domain name specified in the array is the fully qualified\ndomain name assigned to the Cohesity Cluster. Any additional\ndomain names specified are used for the domain search list for\nhostname look-up."
          type: "array"
          title: "Array of Domain Names."
          items: 
            type: "string"
          x-go-name: "DomainNames"
        enableActiveMonitoring: 
          description: "Specifies if Cohesity can receive monitoring information from the\nCohesity Cluster.\nIf 'true', remote monitoring of the Cohesity Cluster is allowed."
          type: "boolean"
          x-go-name: "EagleConfigEnableAgent"
        enableUpgradePkgPolling: 
          description: "If 'true', Cohesity's upgrade server is polled for new releases."
          type: "boolean"
          x-go-name: "HaloServerEnabled"
        encryptionEnabled: 
          description: "If 'true', the entire Cohesity Cluster is encrypted including all View\nBoxes."
          type: "boolean"
          x-go-name: "EncryptionEnabled"
        encryptionKeyRotationPeriodSecs: 
          description: "Specifies the period of time (in seconds) when encryption keys are rotated.\nBy default, the encryption keys are rotated every 77760000 seconds\n(30 days)."
          type: "integer"
          format: "int64"
          x-go-name: "EncryptionKeyRotationPeriodSecs"
        eulaConfig: 
          description: "Specifies the End User License Agreement (EULA) acceptance information."
          type: "object"
          title: "EULA Acceptance Information."
          properties: 
            licenseKey: 
              description: "Specifies the license key."
              type: "string"
              x-go-name: "LicenseKey"
            signedByUser: 
              description: "Specifies the login account name for the Cohesity user who accepted\nthe End User License Agreement."
              type: "string"
              x-go-name: "SignedByUser"
              readOnly: true
            signedTime: 
              description: "Specifies the time that the End User License Agreement was accepted."
              type: "integer"
              format: "int64"
              x-go-name: "SignedTime"
              readOnly: true
            signedVersion: 
              description: "Specifies the version of the End User License Agreement that was accepted."
              type: "integer"
              format: "int64"
              x-go-name: "SignedVersion"
        filerAuditLogConfig: 
          description: "Filer Audit Log Configuration."
          $ref: "#/definitions/FilerAuditLogConfiguration"
        fipsModeEnabled: 
          description: "Specifies if the Cohesity Cluster should operate in the FIPS mode,\nwhich is compliant with the Federal Information Processing Standard\n140-2 certification."
          type: "boolean"
          x-go-name: "FipsModeEnabled"
        gateway: 
          description: "Specifies the gateway IP address."
          type: "string"
          x-go-name: "Gateway"
        hardwareInfo: 
          description: "Specifies a hardware type for motherboard of the nodes\nthat make up this Cohesity Cluster such as S2600WB for Ivy Bridge\nor S2600TP for Haswell."
          $ref: "#/definitions/ClusterHardwareInfo"
        id: 
          description: "Specifies the unique id of Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterId"
        incarnationId: 
          description: "Specifies the unique incarnation id of the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "IncarnationId"
        isDocumentationLocal: 
          description: "Specifies what version of the documentation is used.\nIf 'true', the version of documentation stored locally on the Cohesity\nCluster is used.\nIf 'false', the documentation stored on a Cohesity Web Server\nis used. The default is 'false'.\nCohesity recommends accessing the Help from the Cohesity Web site which\nprovides the newest and most complete version of Help."
          type: "boolean"
          x-go-name: "IsDocumentationLocal"
        languageLocale: 
          description: "Specifies the language and locale for this Cohesity Cluster."
          type: "string"
          x-go-name: "LanguageLocale"
        mtu: 
          description: "Specifies the Maxium Transmission Unit (MTU) in bytes of\nthe network."
          type: "integer"
          format: "int32"
          x-go-name: "Mtu"
        name: 
          description: "Specifies the name of the Cohesity Cluster."
          type: "string"
          x-go-name: "Name"
        nodeCount: 
          description: "Specifies the number of Nodes in the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "NodeCount"
        ntpSettings: 
          description: "Specifies if the ntp/master slave scheme should be disabled for this\ncluster."
          $ref: "#/definitions/NtpSettingsConfig"
        reverseTunnelEnabled: 
          description: "If 'true', Cohesity's Remote Tunnel is enabled.\nCohesity can access the Cluster and provide remote assistance\nvia a Remote Tunnel."
          type: "boolean"
          x-go-name: "ReverseTunnelEnabled"
        smbAdDisabled: 
          description: "Specifies if Active Directory should be disabled for authentication of SMB\nshares. If 'true', Active Directory is disabled."
          type: "boolean"
          x-go-name: "SmbAdDisabled"
        stats: 
          description: "Specifies statistics about this Cohesity Cluster."
          $ref: "#/definitions/ClusterStats"
        supportedConfig: 
          description: "Information about supported configuration. For example, it contains\nminimum number of nodes supported for the cluster."
          $ref: "#/definitions/SupportedConfig"
        syslogServers: 
          description: "Specifies a list of Syslog servers to send audit logs to."
          type: "array"
          title: "Array of Syslog Servers."
          items: 
            $ref: "#/definitions/SyslogServer"
          x-go-name: "SyslogServers"
        targetSoftwareVersion: 
          description: "Specifies the Cohesity release that this Cluster is being upgraded to\nif an upgrade operation is in progress."
          type: "string"
          x-go-name: "TargetSoftwareVersion"
        timezone: 
          description: "Specifies the timezone to use for showing time in emails, reports,\nfiler audit logs, etc."
          type: "string"
          x-go-name: "Timezone"
        turboMode: 
          description: "Specifies if the cluster is in Turbo mode."
          type: "boolean"
          x-go-name: "TurboMode"
      x-go-package: "cohesity/iris/server/data/public"
    ClusterAuditLog: 
      description: "Specifies information about a single Cluster audit log.\nWhen an action (such as pausing a Protection Job) occurs, an audit log is\ngenerated that provides details about the action."
      type: "object"
      title: "Cluster Audit Log."
      properties: 
        action: 
          description: "Specifies the action that caused the log to be generated."
          type: "string"
          x-go-name: "Action"
        details: 
          description: "Specifies more information about the action."
          type: "string"
          x-go-name: "Details"
        domain: 
          description: "Specifies the domain of the user who caused the action\nthat generated the log."
          type: "string"
          x-go-name: "Domain"
        entityId: 
          description: "Specifies the id of the entity (object) that the action is invoked on."
          type: "string"
          x-go-name: "EntityId"
        entityName: 
          description: "Specifies the entity (object) name that the action is invoked on.\nFor example, if a Job called BackupEng is paused, this field\nreturns BackupEng."
          type: "string"
          x-go-name: "EntityName"
        entityType: 
          description: "Specifies the type of the entity (object) that the action is invoked on.\nFor example, if a Job called BackupEng is paused, this field\nreturns 'Protection Job'."
          type: "string"
          x-go-name: "EntityType"
        humanTimestamp: 
          description: "Specifies the time when the log was generated.\nThe time is specified using a human readable timestamp."
          type: "string"
          x-go-name: "HumanTimestamp"
        newRecord: 
          description: "Specifies the record after the action is invoked."
          type: "string"
          x-go-name: "NewRecord"
        previousRecord: 
          description: "Specifies the record before the action is invoked."
          type: "string"
          x-go-name: "PreviousRecord"
        timestampUsecs: 
          description: "Specifies the time when the log was generated.\nThe time is specified using a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "TimestampUsecs"
        userName: 
          description: "Specifies the user who caused the action that generated the log."
          type: "string"
          x-go-name: "UserName"
      x-go-package: "cohesity/iris/server/data/public"
    ClusterAuditLogConfiguration: 
      description: "Specifies the settings of the Cluster audit log configuration."
      type: "object"
      title: "Cluster Audit Log Configuration."
      required: 
        - "enabled"
        - "retentionPeriodDays"
      properties: 
        enabled: 
          description: "Specifies if the Cluster audit logging is enabled on the\nCohesity Cluster.\nIf 'true', Cluster audit logging is enabled. Otherwise, it is disabled."
          type: "boolean"
          x-go-name: "Enabled"
        retentionPeriodDays: 
          description: "Specifies the number of days to keep (retain) the Cluster audit logs.\nAudit logs generated before the period of time specified by\nretentionPeriodDays are removed from the Cohesity Cluster."
          type: "integer"
          format: "int32"
          x-go-name: "RetentionPeriodDays"
      x-go-package: "cohesity/iris/server/data/public"
    ClusterAuditLogsSearchResult: 
      description: "Returns the Cluster audit logs that match the specified filter criteria\nup to the limit specified in pageCount."
      type: "object"
      title: "Cluster Audit Log Filter Result."
      properties: 
        clusterAuditLogs: 
          description: "Specifies a list of Cluster audit logs that match the specified\nfilter criteria up to the limit specified in pageCount."
          type: "array"
          title: "Array of Cluster Audit Logs."
          items: 
            $ref: "#/definitions/ClusterAuditLog"
          x-go-name: "ClusterAuditLogs"
        totalCount: 
          description: "Specifies the total number of logs that match the specified\nfilter criteria. (This number might be larger than the size of the\nCluster Audit Logs array.)\nThis count is provided to indicate if additional requests must be\nmade to get the full result."
          type: "integer"
          format: "int64"
          x-go-name: "TotalCount"
      x-go-package: "cohesity/iris/server/data/public"
    ClusterHardwareInfo: 
      description: "Specifies a hardware type for motherboard of the Nodes\nthat make up this Cohesity Cluster such as S2600WB for Ivy Bridge\nor S2600TP for Haswell."
      type: "object"
      title: "Cohesity Cluster Hardware."
      properties: 
        hardwareModels: 
          type: "array"
          items: 
            type: "string"
          x-go-name: "HardwareModels"
      x-go-package: "cohesity/iris/server/data/public"
    ClusterPartition: 
      description: "Provides details about a Cluster Partition."
      type: "object"
      title: "Cluster Partition."
      properties: 
        hostName: 
          description: "Specifies that hostname that resolves to one or more Virtual IP\nAddresses (VIPs)."
          type: "string"
          x-go-name: "HostName"
        id: 
          description: "Specifies a unique identifier for the Cluster Partition."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        name: 
          description: "Specifies the name of the Cluster Partition."
          type: "string"
          x-go-name: "Name"
        nodeIds: 
          description: "Specifies a list of Node Ids that assigned to the Cluster Partition."
          type: "array"
          title: "Array of Node Ids."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "NodeIdList"
        vips: 
          description: "Specifies a list of Virtual IP Addresses (VIPs) that route\nnetwork traffic to the Cluster Partition."
          type: "array"
          title: "Array of VIPs."
          items: 
            type: "string"
          x-go-name: "Vips"
        vlanIps: 
          description: "Specifies a list of VLAN IP Addresses that route network traffic\nwithin certain VLANs to the Cluster Partition."
          type: "array"
          title: "Array of VLAN IPs."
          items: 
            type: "string"
          x-go-name: "VlanIps"
        vlans: 
          description: "Specifies a list of VLANs for the Cluster Partition."
          type: "array"
          title: "Array of VLANs."
          items: 
            $ref: "#/definitions/Vlan"
          x-go-name: "Vlans"
      x-go-package: "cohesity/iris/server/data/public"
    ClusterStats: 
      description: "Specifies statistics about this Cohesity Cluster."
      type: "object"
      title: "Cohesity Cluster Statistics."
      properties: 
        cloudUsagePerfStats: 
          description: "Provides usage and performance statistics for the remote data stored on\na Cloud Tier by the Cohesity Cluster."
          type: "object"
          title: "Cloud Tier Statistics."
          properties: 
            dataInBytes: 
              description: "Data brought into the cluster. This is the usage before data reduction if\nwe ignore the zeroes and effects of cloning."
              type: "integer"
              format: "int64"
              x-go-name: "DataInBytes"
            dataInBytesAfterReduction: 
              description: "Morphed Usage before data is replicated to other nodes as per RF or\nErasure Coding policy."
              type: "integer"
              format: "int64"
              x-go-name: "DataInBytesAfterReduction"
            minUsablePhysicalCapacityBytes: 
              description: "Specifies the minimum usable capacity available\nafter erasure coding or RF. This will only be populated for cluster.\nIf a cluster has multiple Domains (View Boxes) with different RF or\nerasure coding, this metric will be computed using the scheme that will\nprovide least saving."
              type: "integer"
              format: "int64"
              x-go-name: "MinUsablePhysicalCapacityBytes"
            numBytesRead: 
              description: "Provides the total number of bytes read in the last 30 seconds."
              type: "integer"
              format: "int64"
              x-go-name: "NumBytesRead"
            numBytesWritten: 
              description: "Provides the total number of bytes written in the last 30 second."
              type: "integer"
              format: "int64"
              x-go-name: "NumBytesWritten"
            physicalCapacityBytes: 
              description: "Provides the total physical capacity in bytes as computed\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "PhysicalCapacityBytes"
            readIos: 
              description: "Provides the number of Read IOs that occurred in the last 30 seconds."
              type: "integer"
              format: "int64"
              x-go-name: "ReadIos"
            readLatencyMsecs: 
              description: "Provides the Read latency in milliseconds for the Read IOs that occurred\nduring the last 30 seconds."
              type: "number"
              format: "double"
              x-go-name: "ReadLatencyMsecs"
            systemCapacityBytes: 
              description: "Provides the total available capacity as computed by\nthe Linux 'statfs' command."
              type: "integer"
              format: "int64"
              x-go-name: "SystemCapacityBytes"
            systemUsageBytes: 
              description: "Provides the usage of bytes, as computed by the Linux 'statfs' command,\nafter the size of the data is reduced by\nchange-block tracking, compression and deduplication."
              type: "integer"
              format: "int64"
              x-go-name: "SystemUsageBytes"
            totalPhysicalRawUsageBytes: 
              description: "Provides the usage of bytes, as computed by the Cohesity Cluster,\nbefore the size of the data is reduced by\nchange-block tracking, compression and deduplication."
              type: "integer"
              format: "int64"
              x-go-name: "TotalPhysicalRawUsageBytes"
            totalPhysicalUsageBytes: 
              description: "Provides the total capacity, as computed by the Cohesity Cluster,\nafter the size of the data has been reduced by change-block tracking,\ncompression and deduplication."
              type: "integer"
              format: "int64"
              x-go-name: "TotalPhysicalUsageBytes"
            writeIos: 
              description: "Provides the number of Write IOs that occurred in the last 30 seconds."
              type: "integer"
              format: "int64"
              x-go-name: "WriteIos"
            writeLatencyMsecs: 
              description: "Provides the Write latency in milliseconds for the Write IOs that occurred\nduring the last 30 seconds."
              type: "number"
              format: "double"
              x-go-name: "WriteLatencyMsecs"
        dataReductionRatio: 
          description: "Specifies the ratio of logical bytes (not reduced by\nchange-block tracking, compression and deduplication) to\nphysical bytes (reduced by change-block tracking, compression\nand deduplication)."
          type: "number"
          format: "double"
          x-go-name: "DataReductionRatio"
        id: 
          description: "Specifies the id of the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        localUsagePerfStats: 
          description: "Provides usage and performance statistics for local data stored directly\non the Cohesity Cluster."
          type: "object"
          title: "Local Statistics."
          properties: 
            dataInBytes: 
              description: "Data brought into the cluster. This is the usage before data reduction if\nwe ignore the zeroes and effects of cloning."
              type: "integer"
              format: "int64"
              x-go-name: "DataInBytes"
            dataInBytesAfterReduction: 
              description: "Morphed Usage before data is replicated to other nodes as per RF or\nErasure Coding policy."
              type: "integer"
              format: "int64"
              x-go-name: "DataInBytesAfterReduction"
            minUsablePhysicalCapacityBytes: 
              description: "Specifies the minimum usable capacity available\nafter erasure coding or RF. This will only be populated for cluster.\nIf a cluster has multiple Domains (View Boxes) with different RF or\nerasure coding, this metric will be computed using the scheme that will\nprovide least saving."
              type: "integer"
              format: "int64"
              x-go-name: "MinUsablePhysicalCapacityBytes"
            numBytesRead: 
              description: "Provides the total number of bytes read in the last 30 seconds."
              type: "integer"
              format: "int64"
              x-go-name: "NumBytesRead"
            numBytesWritten: 
              description: "Provides the total number of bytes written in the last 30 second."
              type: "integer"
              format: "int64"
              x-go-name: "NumBytesWritten"
            physicalCapacityBytes: 
              description: "Provides the total physical capacity in bytes as computed\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "PhysicalCapacityBytes"
            readIos: 
              description: "Provides the number of Read IOs that occurred in the last 30 seconds."
              type: "integer"
              format: "int64"
              x-go-name: "ReadIos"
            readLatencyMsecs: 
              description: "Provides the Read latency in milliseconds for the Read IOs that occurred\nduring the last 30 seconds."
              type: "number"
              format: "double"
              x-go-name: "ReadLatencyMsecs"
            systemCapacityBytes: 
              description: "Provides the total available capacity as computed by\nthe Linux 'statfs' command."
              type: "integer"
              format: "int64"
              x-go-name: "SystemCapacityBytes"
            systemUsageBytes: 
              description: "Provides the usage of bytes, as computed by the Linux 'statfs' command,\nafter the size of the data is reduced by\nchange-block tracking, compression and deduplication."
              type: "integer"
              format: "int64"
              x-go-name: "SystemUsageBytes"
            totalPhysicalRawUsageBytes: 
              description: "Provides the usage of bytes, as computed by the Cohesity Cluster,\nbefore the size of the data is reduced by\nchange-block tracking, compression and deduplication."
              type: "integer"
              format: "int64"
              x-go-name: "TotalPhysicalRawUsageBytes"
            totalPhysicalUsageBytes: 
              description: "Provides the total capacity, as computed by the Cohesity Cluster,\nafter the size of the data has been reduced by change-block tracking,\ncompression and deduplication."
              type: "integer"
              format: "int64"
              x-go-name: "TotalPhysicalUsageBytes"
            writeIos: 
              description: "Provides the number of Write IOs that occurred in the last 30 seconds."
              type: "integer"
              format: "int64"
              x-go-name: "WriteIos"
            writeLatencyMsecs: 
              description: "Provides the Write latency in milliseconds for the Write IOs that occurred\nduring the last 30 seconds."
              type: "number"
              format: "double"
              x-go-name: "WriteLatencyMsecs"
        logicalStats: 
          description: "Specifies the total logical data size of all the local and\nCloud Tier data stored by the Cohesity Cluster before the data is\nreduced by change-block tracking, compression and deduplication.\nThe size of the data if the data is fully hydrated or expanded."
          type: "object"
          title: "Logical Statistics."
          properties: 
            totalLogicalUsageBytes: 
              description: "Provides the logical usage as computed by the Cohesity Cluster.\nThe size of the data without reduction by change-block tracking,\ncompression and deduplication."
              type: "integer"
              format: "int64"
              x-go-name: "TotalLogicalUsageBytes"
        usagePerfStats: 
          description: "Provides usage and performance statistics about the local data\nstored directly on the Cohesity Cluster and the remote data\nstored on a Cloud Tier for the Cohesity Cluster."
          type: "object"
          title: "Local and Cloud Tier Statistics."
          properties: 
            dataInBytes: 
              description: "Data brought into the cluster. This is the usage before data reduction if\nwe ignore the zeroes and effects of cloning."
              type: "integer"
              format: "int64"
              x-go-name: "DataInBytes"
            dataInBytesAfterReduction: 
              description: "Morphed Usage before data is replicated to other nodes as per RF or\nErasure Coding policy."
              type: "integer"
              format: "int64"
              x-go-name: "DataInBytesAfterReduction"
            minUsablePhysicalCapacityBytes: 
              description: "Specifies the minimum usable capacity available\nafter erasure coding or RF. This will only be populated for cluster.\nIf a cluster has multiple Domains (View Boxes) with different RF or\nerasure coding, this metric will be computed using the scheme that will\nprovide least saving."
              type: "integer"
              format: "int64"
              x-go-name: "MinUsablePhysicalCapacityBytes"
            numBytesRead: 
              description: "Provides the total number of bytes read in the last 30 seconds."
              type: "integer"
              format: "int64"
              x-go-name: "NumBytesRead"
            numBytesWritten: 
              description: "Provides the total number of bytes written in the last 30 second."
              type: "integer"
              format: "int64"
              x-go-name: "NumBytesWritten"
            physicalCapacityBytes: 
              description: "Provides the total physical capacity in bytes as computed\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "PhysicalCapacityBytes"
            readIos: 
              description: "Provides the number of Read IOs that occurred in the last 30 seconds."
              type: "integer"
              format: "int64"
              x-go-name: "ReadIos"
            readLatencyMsecs: 
              description: "Provides the Read latency in milliseconds for the Read IOs that occurred\nduring the last 30 seconds."
              type: "number"
              format: "double"
              x-go-name: "ReadLatencyMsecs"
            systemCapacityBytes: 
              description: "Provides the total available capacity as computed by\nthe Linux 'statfs' command."
              type: "integer"
              format: "int64"
              x-go-name: "SystemCapacityBytes"
            systemUsageBytes: 
              description: "Provides the usage of bytes, as computed by the Linux 'statfs' command,\nafter the size of the data is reduced by\nchange-block tracking, compression and deduplication."
              type: "integer"
              format: "int64"
              x-go-name: "SystemUsageBytes"
            totalPhysicalRawUsageBytes: 
              description: "Provides the usage of bytes, as computed by the Cohesity Cluster,\nbefore the size of the data is reduced by\nchange-block tracking, compression and deduplication."
              type: "integer"
              format: "int64"
              x-go-name: "TotalPhysicalRawUsageBytes"
            totalPhysicalUsageBytes: 
              description: "Provides the total capacity, as computed by the Cohesity Cluster,\nafter the size of the data has been reduced by change-block tracking,\ncompression and deduplication."
              type: "integer"
              format: "int64"
              x-go-name: "TotalPhysicalUsageBytes"
            writeIos: 
              description: "Provides the number of Write IOs that occurred in the last 30 seconds."
              type: "integer"
              format: "int64"
              x-go-name: "WriteIos"
            writeLatencyMsecs: 
              description: "Provides the Write latency in milliseconds for the Write IOs that occurred\nduring the last 30 seconds."
              type: "number"
              format: "double"
              x-go-name: "WriteLatencyMsecs"
      x-go-package: "cohesity/iris/server/data/public"
    ConnectorParams: 
      description: "Specifies the parameters required to establish a connection with\na particular environment."
      type: "object"
      title: "Connector Parameters."
      properties: 
        endpoint: 
          description: "Specify an IP address or URL of the environment.\n(such as the IP address of the vCenter Server for a VMware environment)."
          type: "string"
          x-go-name: "Endpoint"
        environment: 
          description: "Specifies the environment like VMware, SQL, where the\nProtection Source exists.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "string"
          enum: 
            - "kVMware"
            - "kSQL"
            - "kView"
            - "kPuppeteer"
            - "kPhysical"
            - "kPure"
            - "kNetapp"
            - "kGenericNas"
            - "kHyperV"
            - "kAcropolis"
            - "kAzure"
          x-go-name: "Environment"
        id: 
          description: "Specifies a Unique id that is generated when the Source is registered.\nThis is a convenience field that is used to maintain an index to different\nconnection params."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        version: 
          description: "Version is updated each time the connector parameters are updated.\nThis is used to discard older connector parameters."
          type: "integer"
          format: "int64"
          x-go-name: "Version"
      x-go-package: "cohesity/iris/server/data/public"
    ContinuousSchedule: 
      description: "Specifies the time interval between two Job Runs of a continuous backup\nschedule and any blackout periods when new Job Runs should NOT be started."
      type: "object"
      title: "Continuous Schedule."
      properties: 
        backupIntervalMins: 
          description: "If specified, this field defines the time interval in minutes when\nnew Job Runs are started."
          type: "integer"
          format: "int64"
          x-go-name: "BackupIntervalMins"
      x-go-package: "cohesity/iris/server/data/public"
    CopyRun: 
      description: "Specifies details about the Copy Run for a backup run of a Job Run.\nA Copy task copies snapshots resulted from a backup run to a snapshot\ntarget which could be 'kLocal', 'kArchival', or 'kRemote'."
      type: "object"
      title: "Copy Run Task."
      properties: 
        copySnapshotTasks: 
          description: "Specifies the status information of each task that copies the snapshot\ntaken for a Protection Source."
          type: "array"
          items: 
            $ref: "#/definitions/CopySnapshotTaskStatus"
          x-go-name: "CopySnapshotTasks"
        error: 
          description: "Specifies if an error occurred (if any) while running this task.\nThis field is populated when the status is equal to 'kFailure'."
          type: "string"
          x-go-name: "Error"
        expiryTimeUsecs: 
          description: "Specifies expiry time of the copies of the snapshots in this Protection\nRun."
          type: "integer"
          format: "int64"
          x-go-name: "ExpiryTimeUsecs"
        runStartTimeUsecs: 
          description: "Specifies start time of the copy run."
          type: "integer"
          format: "int64"
          x-go-name: "RunStartTimeUsecs"
        stats: 
          description: "Specifies the aggregated information of all the copy tasks."
          $ref: "#/definitions/CopyRunStats"
        status: 
          description: "Specifies the aggregated status of copy tasks such as 'kRunning',\n'kSuccess', 'kFailure' etc.\n'kAccepted' indicates the task is queued to run but not yet running.\n'kRunning' indicates the task is running.\n'kCanceling' indicates a request to cancel the task has occurred but\nthe task is not yet canceled.\n'kCanceled' indicates the task has been canceled.\n'kSuccess' indicates the task was successful.\n'kFailure' indicates the task failed."
          type: "string"
          enum: 
            - "kAccepted"
            - "kRunning"
            - "kCanceling"
            - "kCanceled"
            - "kSuccess"
            - "kFailure"
          x-go-name: "Status"
        target: 
          description: "Specifies the target of the copy task such as an external target or a\nRemote Cohesity Cluster."
          $ref: "#/definitions/SnapshotTarget"
        taskUid: 
          description: "Specifies a globally unique id of the copy task."
          type: "object"
          title: "Unique Global Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        userActionMessage: 
          description: "Specifies a message to the user if any manual intervention is needed to\nmake forward progress for the archival task. This message is mainly\nrelevant for tape based archival tasks where a backup admin might be\nasked to load a new media when the tape library does not have any more\nmedia to use."
          type: "string"
          x-go-name: "UserActionMessage"
      x-go-package: "cohesity/iris/server/data/public"
    CopyRunStats: 
      description: "Stats for one copy task or aggregated stats of a Copy Run in a\nProtection Job Run."
      type: "object"
      properties: 
        endTimeUsecs: 
          description: "Specifies the time when this replication ended. If not set, then the\nreplication has not ended yet."
          type: "integer"
          format: "int64"
          x-go-name: "EndTimeUsecs"
        isIncremental: 
          description: "Specifies whether this archival is incremental for archival targets."
          type: "boolean"
          x-go-name: "IsIncremental"
        logicalBytesTransferred: 
          description: "Specifies the number of logical bytes transferred for this replication\nso far. This value can never exceed the total logical size of the\nreplicated view."
          type: "integer"
          format: "int64"
          x-go-name: "LogicalBytesTransferred"
        logicalSizeBytes: 
          description: "Specifies the total amount of logical data to be transferred for this\nreplication."
          type: "integer"
          format: "int64"
          x-go-name: "LogicalSizeBytes"
        logicalTransferRateBps: 
          description: "Specifies average logical bytes transfer rate in bytes per second for\narchchival targets."
          type: "integer"
          format: "int64"
          x-go-name: "LogicalTransferRateBps"
        physicalBytesTransferred: 
          description: "Specifies the number of physical bytes sent over the wire for\nreplication targets."
          type: "integer"
          format: "int64"
          x-go-name: "PhysicalBytesTransferred"
        startTimeUsecs: 
          description: "Specifies the time when this replication was started. If not set, then\nreplication has not been started yet."
          type: "integer"
          format: "int64"
          x-go-name: "StartTimeUsecs"
      x-go-package: "cohesity/iris/server/data/public"
    CopySnapshotTaskStatus: 
      description: "Specifies the status of the copy task that copies the snapshot of a\nProtection Source object to a target."
      type: "object"
      title: "Copy Status of Snapshot of a Protection Source Object."
      properties: 
        error: 
          description: "Specifies if an error occurred (if any) while running this task.\nThis field is populated when the status is equal to 'kFailure'."
          type: "string"
          x-go-name: "Error"
        source: 
          description: "Specifies the source object whose snapshot is replicated.\nThis is specified for replication targets."
          $ref: "#/definitions/ProtectionSource"
        stats: 
          description: "Specifies the stats of the replication or the archival task."
          $ref: "#/definitions/CopyRunStats"
        status: 
          description: "Specifies the status of the source object being protected.\n'kAccepted' indicates the task is queued to run but not yet running.\n'kRunning' indicates the task is running.\n'kCanceling' indicates a request to cancel the task has occurred but\nthe task is not yet canceled.\n'kCanceled' indicates the task has been canceled.\n'kSuccess' indicates the task was successful.\n'kFailure' indicates the task failed."
          type: "string"
          enum: 
            - "kAccepted"
            - "kRunning"
            - "kCanceling"
            - "kCanceled"
            - "kSuccess"
            - "kFailure"
          x-go-name: "Status"
        taskEndTimeUsecs: 
          description: "Specifies the end time of the copy task. The end time\nis specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "TaskEndTimeUsecs"
        taskStartTimeUsecs: 
          description: "Specifies the start time of the copy task. The start time\nis specified as a Unix epoch Timestamp (in microseconds).\nCopy run task is started after completing backup tasks.\nIt may spawn sub-tasks to copy or replicate individual snapshots."
          type: "integer"
          format: "int64"
          x-go-name: "TaskStartTimeUsecs"
      x-go-package: "cohesity/iris/server/data/public"
    CreateRemoteVaultRestoreTaskParameters: 
      description: "Specifies settings required to create a task that restores the\nindex and/or the Snapshots of a Protection Job from a remote Vault\nto the current Cluster."
      type: "object"
      title: "Create Remote Vault Restore Task Request."
      required: 
        - "taskName"
        - "searchJobUid"
        - "vaultId"
      properties: 
        restoreObjects: 
          description: "Specifies the list of Snapshots and the index to be restored from the\nremote Vault. The data on the remote Vault may have been\noriginally archived from multiple remote Clusters."
          type: "array"
          title: "Array of Restore Objects."
          items: 
            $ref: "#/definitions/IndexAndSnapshots"
          x-go-name: "RestoreObjects"
        searchJobUid: 
          description: "Specifies the unique id of the remote Vault search Job."
          type: "object"
          title: "Search Job Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        taskName: 
          description: "Specifies a name of the restore task."
          type: "string"
          x-go-name: "TaskName"
        vaultId: 
          description: "Specifies the id of the Vault that contains the index and\nSnapshots to restore to the current Cluster.\nThis is the id assigned by the Cohesity Cluster when Vault was\nregistered as an External Target."
          type: "integer"
          format: "int64"
          x-go-name: "VaultId"
      x-go-package: "cohesity/iris/server/data/public"
    CreateRemoteVaultSearchJobParameters: 
      description: "Specifies settings required to create a search of a\nremote Vault for data that has been archived from other Clusters."
      type: "object"
      title: "Create Remote Vault Search Request."
      required: 
        - "searchJobName"
        - "vaultId"
      properties: 
        clusterMatchString: 
          description: "Filter by specifying a Cluster name prefix string.\nOnly Clusters with names that start with this prefix string are returned\nin the search result.\nIf not set, all Clusters archiving data to the Vault\nare returned in the search results."
          type: "string"
          x-go-name: "ClusterMatchString"
        encryptionKeys: 
          description: "Specifies an optional list of encryption keys that may be needed to\nsearch and restore data that was archived to a remote Vault.\nArchived data cannot be searched or restored without the\ncorresponding encryption key used by the original Cluster\nto archive the data.\nEncryption keys can be uploaded using the REST API\npublic/remoteVaults/encryptionKeys operation.\nIf the key is already uploaded, this field does not need to be\nspecified."
          type: "array"
          title: "Array of Encryption Keys."
          items: 
            $ref: "#/definitions/VaultEncryptionKey"
          x-go-name: "EncryptionKeys"
        endTimeUsecs: 
          description: "Filter by a end time specified as a Unix epoch Timestamp\n(in microseconds). Only Job Runs that completed before the specified\nend time are included in the search results."
          type: "integer"
          format: "int64"
          x-go-name: "EndTimeUsecs"
        jobMatchString: 
          description: "Filter by specifying a Protection Job name prefix string.\nOnly Protection Jobs with names that start with this prefix string\nare returned in the search result.\nIf not set, all Protection Jobs archiving data to the Vault\nare returned in the search results."
          type: "string"
          x-go-name: "JobMatchString"
        searchJobName: 
          description: "Specifies the search Job name."
          type: "string"
          x-go-name: "SearchJobName"
        startTimeUsecs: 
          description: "Filter by a start time specified as a Unix epoch Timestamp\n(in microseconds). Only Job Runs that started after the specified\ntime are included in the search results."
          type: "integer"
          format: "int64"
          x-go-name: "StartTimeUsecs"
        vaultId: 
          description: "Specifies the id of the Vault to search. This id was assigned by the\nlocal Cohesity Cluster when Vault was registered as an External Target."
          type: "integer"
          format: "int64"
          x-go-name: "VaultId"
      x-go-package: "cohesity/iris/server/data/public"
    CreateViewBoxParams: 
      description: "Provides details about the Storage Domain (View Box)."
      type: "object"
      title: "Storage Domain (View Box) Request."
      required: 
        - "name"
        - "clusterPartitionId"
      properties: 
        adDomainName: 
          description: "Specifies an active directory domain that this view box is mapped to."
          type: "string"
          x-go-name: "AdDomainName"
        clusterPartitionId: 
          description: "Specifies the Cluster Partition id where the Storage Domain (View Box) is\nlocated."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterPartitionId"
        defaultUserQuotaPolicy: 
          description: "Specifies an optional quota policy/limits that are inherited by all users\nwithin the views in this viewbox."
          type: "object"
          title: "Quota Policy"
          properties: 
            AlertLimit: 
              description: "AlertLimitBytes converted to GiB format for report purposes."
              type: "string"
            HardLimit: 
              description: "HardLimitBytes converted to GiB format for report purposes."
              type: "string"
            alertLimitBytes: 
              description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "AlertLimitBytes"
            alertThresholdPercentage: 
              description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
              type: "integer"
              format: "int64"
              x-go-name: "AlertThresholdPercentage"
            hardLimitBytes: 
              description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "HardLimitBytes"
        defaultViewQuotaPolicy: 
          description: "Specifies an optional default logical quota limit (in bytes)\nfor the Views in this Storage Domain (View Box).\n(Logical data is when the data is fully hydrated and expanded.)\nHowever, this inherited quota can be overwritten at the View level.\nA new write is not allowed if the Storage Domain (View Box) will exceed\nthe specified quota.\nHowever, it takes time for the Cohesity Cluster to calculate\nthe usage across Nodes, so the limit may be exceeded by a small amount.\nIn addition, if the limit is increased or data is removed,\nthere may be delay before the Cohesity Cluster allows more data\nto be written to the Storage Domain (View Box), as the Cluster is\ncalculating the usage across Nodes."
          type: "object"
          title: "Quota Policy"
          properties: 
            AlertLimit: 
              description: "AlertLimitBytes converted to GiB format for report purposes."
              type: "string"
            HardLimit: 
              description: "HardLimitBytes converted to GiB format for report purposes."
              type: "string"
            alertLimitBytes: 
              description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "AlertLimitBytes"
            alertThresholdPercentage: 
              description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
              type: "integer"
              format: "int64"
              x-go-name: "AlertThresholdPercentage"
            hardLimitBytes: 
              description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "HardLimitBytes"
        name: 
          description: "Specifies the name of the Storage Domain (View Box)."
          type: "string"
          x-go-name: "Name"
        physicalQuota: 
          description: "Specifies an optional quota limit (in bytes) for the physical\nusage of this Storage Domain (View Box).\nThis quota limit defines a physical limit for size of the data that\ncan be physically stored on the Storage Domain (View Box), after the data\nhas been reduced by change block tracking, compression and deduplication.\nThe physical usage is the aggregate sum of the data stored for this\nStorage Domain (View Box) on all disks in the Cluster.\n(The usage includes Cloud Tier data and user data.)\nA new write is not allowed if the Storage Domain (View Box) will exceed\nthe specified quota. However, it takes time for the Cohesity Cluster to\ncalculate the usage across Nodes, so the limit may be exceeded by a small\namount. In addition, if the limit is increased or data is removed,\nthere may be a delay before the Cohesity Cluster allows more data\nto be written to the Storage Domain (View Box), as the Cluster is\ncalculating the usage across Nodes."
          type: "object"
          title: "Quota Policy"
          properties: 
            AlertLimit: 
              description: "AlertLimitBytes converted to GiB format for report purposes."
              type: "string"
            HardLimit: 
              description: "HardLimitBytes converted to GiB format for report purposes."
              type: "string"
            alertLimitBytes: 
              description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "AlertLimitBytes"
            alertThresholdPercentage: 
              description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
              type: "integer"
              format: "int64"
              x-go-name: "AlertThresholdPercentage"
            hardLimitBytes: 
              description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "HardLimitBytes"
        s3BucketsAllowed: 
          description: "Specifies whether creation of a S3 bucket is allowed in this\nStorage Domain (View Box).\nWhen a new S3 bucket creation request arrives, we'll look at all the View\nBoxes and the first Storage Domain (View Box) that allows creating S3\nbuckets in it will be the one where the bucket will be placed."
          type: "boolean"
          x-go-name: "S3BucketsAllowed"
        storagePolicy: 
          description: "Specifies the storage options applied to the Storage Domain (View Box)."
          $ref: "#/definitions/StoragePolicy"
      x-go-package: "cohesity/iris/server/data/public"
    CreateViewRequest: 
      description: "Specifies the information required for creating a new View."
      type: "object"
      title: "Create View Request."
      required: 
        - "name"
        - "viewBoxId"
      properties: 
        accessSids: 
          description: "Specifies the list of security identifiers (SIDs) for the restricted\nPrincipals who have access to this View."
          type: "array"
          title: "Array of Security Identifiers (SIDs)"
          items: 
            type: "string"
          x-go-name: "AccessSids"
        caseInsensitiveNamesEnabled: 
          description: "Specifies whether to support case insensitive file/folder names. This\nparameter can only be set during create and cannot be changed."
          type: "boolean"
          x-go-name: "CaseInsensitiveNamesEnabled"
        description: 
          description: "Specifies an optional text description about the View."
          type: "string"
          x-go-name: "Description"
        enableFilerAuditLogging: 
          description: "Specifies if Filer Audit Logging is enabled for this view."
          type: "boolean"
          x-go-name: "EnableFilerAuditLogging"
        enableMixedModePermissions: 
          description: "If set, mixed mode (NFS and SMB) access is enabled for this view."
          type: "boolean"
          x-go-name: "EnableMixedModePermissions"
        enableSmbAccessBasedEnumeration: 
          description: "Specifies if access-based enumeration should be enabled.\nIf 'true', only files and folders that the user has permissions to\naccess are visible on the SMB share for that user."
          type: "boolean"
          x-go-name: "EnableSmbAccessBasedEnumeration"
        enableSmbViewDiscovery: 
          description: "If set, it enables discovery of view for SMB."
          type: "boolean"
          x-go-name: "EnableSmbViewDiscovery"
        fileExtensionFilter: 
          description: "Optional filtering criteria that should be satisfied by all the files\ncreated in this view. It does not affect existing files."
          $ref: "#/definitions/FileExtensionFilter"
        logicalQuota: 
          description: "Specifies an optional logical quota limit (in bytes) for the usage allowed\non this View.\n(Logical data is when the data is fully hydrated and expanded.)\nThis limit overrides the limit inherited from the Storage Domain\n(View Box) (if set).\nIf logicalQuota is nil, the limit is inherited from the\nStorage Domain (View Box) (if set).\nA new write is not allowed if the Storage Domain (View Box) will exceed the\nspecified quota.\nHowever, it takes time for the Cohesity Cluster to calculate\nthe usage across Nodes, so the limit may be exceeded by a small amount.\nIn addition, if the limit is increased or data is removed,\nthere may be a delay before the Cohesity Cluster allows more data\nto be written to the View, as the Cluster is calculating the usage\nacross Nodes."
          type: "object"
          title: "Quota Policy"
          properties: 
            AlertLimit: 
              description: "AlertLimitBytes converted to GiB format for report purposes."
              type: "string"
            HardLimit: 
              description: "HardLimitBytes converted to GiB format for report purposes."
              type: "string"
            alertLimitBytes: 
              description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "AlertLimitBytes"
            alertThresholdPercentage: 
              description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
              type: "integer"
              format: "int64"
              x-go-name: "AlertThresholdPercentage"
            hardLimitBytes: 
              description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "HardLimitBytes"
        name: 
          description: "Specifies the name of the new View to create."
          type: "string"
          x-go-name: "Name"
        protocolAccess: 
          description: "Specifies the supported Protocols for the View."
          type: "string"
          enum: 
            - "kAll"
            - "kNFSOnly"
            - "kSMBOnly"
            - "kS3Only"
          x-go-name: "ProtocolAccess"
        qos: 
          description: "Specifies the Quality of Service (QoS) Policy for the View."
          $ref: "#/definitions/QoS"
        smbPermissionsInfo: 
          description: "Specifies the SMB permissions for the View."
          $ref: "#/definitions/SmbPermissionsInfo"
        storagePolicyOverride: 
          description: "Specifies if inline deduplication and compression settings inherited from\nthe Storage Domain (View Box) should be disabled for this View."
          $ref: "#/definitions/StoragePolicyOverride"
        subnetWhitelist: 
          description: "Specifies a list of Subnets with IP addresses that have permissions to\naccess the View. (Overrides the Subnets specified at the global\nCohesity Cluster level.)"
          type: "array"
          title: "Array of Subnets."
          items: 
            $ref: "#/definitions/Subnet"
          x-go-name: "SubnetWhitelist"
        viewBoxId: 
          description: "Specifies the id of the Storage Domain (View Box) where the View will be\ncreated."
          type: "integer"
          format: "int64"
          x-go-name: "ViewBoxId"
      x-go-package: "cohesity/iris/server/data/public"
    CreatedRemoteVaultSearchJobUid: 
      type: "object"
      title: "Created Search Job Response."
      properties: 
        searchJobUid: 
          description: "Specifies the unique id assigned for the search Job on the Cluster."
          type: "object"
          title: "Unique Global Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
      x-go-package: "cohesity/iris/server/data/public"
    Credentials: 
      description: "Specifies credentials to access a target source."
      type: "object"
      title: "Credentials."
      properties: 
        password: 
          description: "Specifies password of the username to access the target source."
          type: "string"
          x-go-name: "Password"
        username: 
          description: "Specifies username to access the target source."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    CustomUnixIdAttributes: 
      description: "Specifies the custom attributes when mapping type is set to\n'kCustomAttributes'. It defines the attribute names to derive the mapping\nfor a user of an Active Directory domain."
      type: "object"
      properties: 
        gidAttrName: 
          description: "Specifies the custom field name in Active Directory user properties to get\nthe GID."
          type: "string"
          x-go-name: "GidAttrName"
        uidAttrName: 
          description: "Specifies the custom field name in Active Directory user properties to get\nthe UID."
          type: "string"
          x-go-name: "UidAttrName"
      x-go-package: "cohesity/iris/server/data/public"
    DailySchedule: 
      description: "Specifies a daily or weekly backup schedule."
      type: "object"
      title: "Daily & Weekly Schedule."
      properties: 
        days: 
          description: "Specifies a list of days of the week when to start Job Runs.\nIf no days are specified, the Jobs Runs will run every day of the week.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
          type: "array"
          title: "Array of Days."
          items: 
            type: "string"
            enum: 
              - "kSunday"
              - "kMonday"
              - "kTuesday"
              - "kWednesday"
              - "kThursday"
              - "kFriday"
              - "kSaturday"
          x-go-name: "Days"
      x-go-package: "cohesity/iris/server/data/public"
    Dashboard: 
      type: "object"
      title: "Data shown on Dashboard."
      properties: 
        auditLogs: 
          description: "Audit Logs."
          $ref: "#/definitions/AuditLogsTile"
        clusterId: 
          description: "Id of the cluster for which dashboard is given."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterId"
        health: 
          description: "Cluster Health and alerts."
          $ref: "#/definitions/HealthTile"
        iops: 
          description: "IOPs."
          $ref: "#/definitions/IopsTile"
        jobRuns: 
          description: "Protection Job Runs."
          $ref: "#/definitions/JobRunsTile"
        protectedObjects: 
          description: "ProtectedObjects related stats."
          $ref: "#/definitions/ProtectedObjectsTile"
        protection: 
          description: "Protection related stats."
          $ref: "#/definitions/ProtectionTile"
        recoveries: 
          description: "Recoveries related stats."
          $ref: "#/definitions/RecoveriesTile"
        storageEfficiency: 
          description: "Storage efficiency stats."
          $ref: "#/definitions/StorageEfficiencyTile"
        throughput: 
          description: "Throughput."
          $ref: "#/definitions/ThroughputTile"
      x-go-package: "cohesity/iris/server/data/public"
    DashboardResponse: 
      type: "object"
      properties: 
        dashboard: 
          description: "Specifies the dashboard of the local cluster or a remote cluster whose\nid is set in clusterId query parameter when the query parameter\nallClusters is not given or set to false. Otherwise this field is\npopulated with aggregated dashboard values for all the dashboards in the\ndashboards field."
          $ref: "#/definitions/Dashboard"
        dashboards: 
          description: "Specifies a list of dashboards of all the clusters in the SPOG setup if\nthe query parameter allClusters is set to true. Otherwise this field is\nnot populated. When populated the dashboard field is also populated with\naggregated dashboard values."
          type: "array"
          items: 
            $ref: "#/definitions/Dashboard"
          x-go-name: "ClusterDashboards"
      x-go-package: "cohesity/iris/server/data/public"
    DataTransferFromVaultPerTask: 
      description: "Specifies statistics about the transfer of data from a Vault\n(External Target) to this Cohesity Cluster for a recover or\nclone task."
      type: "object"
      title: "Data Transfer From Vault Per Task."
      properties: 
        numLogicalBytesTransferred: 
          description: "Specifies the total number of logical bytes that are transferred from\nthis Vault to the Cohesity Cluster for this task.\nThe logical size is when the data is fully hydrated or expanded."
          type: "integer"
          format: "int64"
          x-go-name: "NumLogicalBytesTransferred"
        numPhysicalBytesTransferred: 
          description: "Specifies the total number of physical bytes that are transferred\nfrom this Vault to the Cohesity Cluster for this task."
          type: "integer"
          format: "int64"
          x-go-name: "NumPhysicalBytesTransferred"
        taskName: 
          description: "Specifies the task name."
          type: "string"
          x-go-name: "TaskName"
        taskType: 
          description: "Specifies the task type."
          type: "string"
          x-go-name: "TaskType"
      x-go-package: "cohesity/iris/server/data/public"
    DataTransferFromVaultSummary: 
      description: "Specifies summary statistics about the transfer of data from a Vault\nto this Cohesity Cluster."
      type: "object"
      title: "Data Transfer From Vault Summary."
      properties: 
        dataTransferPerTask: 
          description: "Specifies the transfer of data from this Vault to this Cohesity Cluster\nfor each clone or recover task."
          type: "array"
          title: "Array of Data Transferred Per Task."
          items: 
            $ref: "#/definitions/DataTransferFromVaultPerTask"
          x-go-name: "DataTransferPerTask"
        numLogicalBytesTransferred: 
          description: "Specifies the total number of logical bytes that have been transferred\nfrom this Vault (External Target) to this Cohesity Cluster.\nThe logical size is when the data is fully hydrated or expanded."
          type: "integer"
          format: "int64"
          x-go-name: "NumLogicalBytesTransferred"
        numPhysicalBytesTransferred: 
          description: "Specifies the total number of physical bytes that have been transferred\nfrom this Vault (External Target) to the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "NumPhysicalBytesTransferred"
        numTasks: 
          description: "Specifies the number of recover or clone tasks that have transferred data\nfrom this Vault (External Target) to this Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "NumTasks"
        physicalDataTransferredBytesDuringTimeRange: 
          description: "Specifies the physical data transferred from this Vault\nto the Cohesity Cluster during the time period specified using the\nstartTimeMsecs and endTimeMsecs parameters.\nFor each day in the time period, an array element is returned,\nfor example if 7 days are specified, 7 array elements are returned."
          type: "array"
          title: "Array of Physical Data Transferred Per Day."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "PhysicalDataTransferredBytesDuringTimeRange"
        vaultName: 
          description: "Specifies the name of the Vault (External Target)."
          type: "string"
          x-go-name: "VaultName"
      x-go-package: "cohesity/iris/server/data/public"
    DataTransferFromVaultsSummaryResponse: 
      description: "Provides summary statistics about the transfer of data from Vaults\n(External Targets) to this Cohesity Cluster."
      type: "object"
      title: "Data Transfer from Vaults Summary Response."
      properties: 
        dataTransferSummary: 
          description: "Specifies summary statistics about the transfer of data from\nVaults to the Cohesity Cluster."
          type: "array"
          title: "Array of Summary Data Transfer Statistics."
          items: 
            $ref: "#/definitions/DataTransferFromVaultSummary"
          x-go-name: "DataTransferSummary"
      x-go-package: "cohesity/iris/server/data/public"
    DataTransferToVaultPerProtectionJob: 
      description: "Specifies statistics about the transfer of data from this Cohesity\nCluster to this Vault for a Protection Job."
      type: "object"
      title: "Data Transfer to Vault Per Protection Job."
      properties: 
        numLogicalBytesTransferred: 
          description: "Specifies the total number of logical bytes that are transferred\nfrom this Cohesity Cluster to this Vault for this Protection Job.\nThe logical size is when the data is fully hydrated or expanded."
          type: "integer"
          format: "int64"
          x-go-name: "NumLogicalBytesTransferred"
        numPhysicalBytesTransferred: 
          description: "Specifies the total number of physical bytes that are transferred\nfrom this Cohesity Cluster to this Vault for this Protection Job."
          type: "integer"
          format: "int64"
          x-go-name: "NumPhysicalBytesTransferred"
        protectionJobName: 
          description: "Specifies the name of the Protection Job."
          type: "string"
          x-go-name: "ProtectionJobName"
      x-go-package: "cohesity/iris/server/data/public"
    DataTransferToVaultSummary: 
      description: "Specifies statistics about the transfer of data from this Cohesity\nCluster to a Vault."
      type: "object"
      title: "Data Transfer to Vault Summary."
      properties: 
        dataTransferPerProtectionJob: 
          description: "Specifies the data transfer summary statistics for each Protection Job\nthat is transferring data from this Cohesity Cluster to this\nVault (External Target)."
          type: "array"
          title: "Array of Data Transfer Statistics Per Protection Jobs."
          items: 
            $ref: "#/definitions/DataTransferToVaultPerProtectionJob"
          x-go-name: "DataTransferPerProtectionJob"
        logicalDataTransferredBytesDuringTimeRange: 
          description: "Specifies the logical data transferred from this Cohesity Cluster\nto this Vault during the time period specified using the\nstartTimeMsecs and endTimeMsecs parameters.\nFor each day in the time period, an array element is returned,\nfor example if 7 days are specified, 7 array elements are returned.\nThe logical size is when the data is fully hydrated or expanded."
          type: "array"
          title: "Array of Logical Data Transferred Per Day."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "LogicalDataTransferredBytesDuringTimeRange"
        numLogicalBytesTransferred: 
          description: "Specifies the total number of logical bytes that are transferred\nfrom this Cohesity Cluster to this Vault.\nThe logical size is when the data is fully hydrated or expanded."
          type: "integer"
          format: "int64"
          x-go-name: "NumLogicalBytesTransferred"
        numPhysicalBytesTransferred: 
          description: "Specifies the total number of physical bytes that are transferred\nfrom this Cohesity Cluster to this Vault."
          type: "integer"
          format: "int64"
          x-go-name: "NumPhysicalBytesTransferred"
        numProtectionJobs: 
          description: "Specifies the number of Protection Jobs that transfer data to\nthis Vault."
          type: "integer"
          format: "int64"
          x-go-name: "NumProtectionJobs"
        physicalDataTransferredBytesDuringTimeRange: 
          description: "Specifies the physical data transferred from this Cohesity Cluster\nto this Vault during the time period specified using the\nstartTimeMsecs and endTimeMsecs parameters.\nFor each day in the time period, an array element is returned,\nfor example if 7 days are specified, 7 array elements are returned."
          type: "array"
          title: "Array of Physical Data Transferred Per Day."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "PhysicalDataTransferredBytesDuringTimeRange"
        storageConsumedBytes: 
          description: "Specifies the storage consumed on the Vault as of last day in the\nspecified time range."
          type: "integer"
          format: "int64"
          x-go-name: "StorageConsumedBytes"
        vaultId: 
          description: "The vault Id associated with the vault."
          type: "integer"
          format: "int64"
          x-go-name: "VaultId"
        vaultName: 
          description: "Specifies the name of the Vault (External Target)."
          type: "string"
          x-go-name: "VaultName"
        vaultType: 
          description: "Specifies the type of Vault.\n'kNearline' indicates a Google Nearline Vault.\n'kColdline' indicates a Google Coldline Vault.\n'kGlacier' indicates a AWS Glacier Vault.\n'kS3' indicates a AWS S3 Vault.\n'kAzureStandard' indicates a Microsoft Azure Standard Vault.\n'kS3Compatible' indicates a AWS S3 Compatible Vault.\n(See the online help for supported types.)\n'kQStarTape' indicates a QStar Tape Vault.\n'kGoogleStandard' indicates a Google Standard Vault.\n'kGoogleDRA' indicates a Google DRA Vault.\n'kAWSGovCloud' indicates a AWS Gov Cloud Vault.\n'kNAS' indicates a NAS Vault.\n'kAzureGovCloud' indicates an Microsoft Azure Gov Cloud Vault."
          type: "string"
          enum: 
            - "kNearline"
            - "kColdline"
            - "kGlacier"
            - "kS3"
            - "kAzureStandard"
            - "kS3Compatible"
            - "kQStarTape"
            - "kGoogleStandard"
            - "kGoogleDRA"
            - "kAWSGovCloud"
            - "kNAS"
            - "kAzureGovCloud"
          x-go-name: "VaultType"
      x-go-package: "cohesity/iris/server/data/public"
    DataTransferToVaultsSummaryResponse: 
      description: "Provides summary statistics about the transfer of data from this\nCohesity Cluster to Vaults (External Targets)."
      type: "object"
      title: "Data Transfer to Vaults Summary Response."
      properties: 
        dataTransferSummary: 
          description: "Specifies summary statistics about the transfer of data from\nthe Cohesity Cluster to Vaults."
          type: "array"
          title: "Array of Summary Data Transfer Statistics."
          items: 
            $ref: "#/definitions/DataTransferToVaultSummary"
          x-go-name: "DataTransferSummary"
      x-go-package: "cohesity/iris/server/data/public"
    DatastoreInfo: 
      type: "object"
      title: "Datastore Information."
      properties: 
        capacity: 
          description: "Specifies the capacity of the datastore in bytes."
          type: "integer"
          format: "uint64"
          x-go-name: "Capacity"
        freeSpace: 
          description: "Specifies the available space on the datastore in bytes."
          type: "integer"
          format: "uint64"
          x-go-name: "FreeSpace"
      x-go-package: "cohesity/iris/server/data/public"
    DbFileInfo: 
      type: "object"
      title: "Specifies information about a database file."
      properties: 
        fullPath: 
          description: "Specifies the full path of the database file on the SQL host machine."
          type: "string"
          x-go-name: "FullPath"
        sizeBytes: 
          description: "Specifies the last known size of the database file."
          type: "integer"
          format: "int64"
          x-go-name: "SizeBytes"
      x-go-package: "cohesity/iris/server/data/public"
    DeleteViewUsersQuotaParameters: 
      description: "Specifies the user ids to remove the corresponding quota overrides in view."
      type: "object"
      title: "Delete User Quota Overrides for view Params."
      properties: 
        deleteAll: 
          description: "Delete all existing user quota override policies."
          type: "boolean"
          x-go-name: "DeleteAll"
        userIds: 
          type: "array"
          title: "The user ids whose policy needs to be deleted."
          items: 
            $ref: "#/definitions/UserId"
          x-go-name: "UserIds"
        viewName: 
          description: "View name of input view."
          type: "string"
          x-go-name: "ViewName"
      x-go-package: "cohesity/iris/server/data/public"
    DeviceNode: 
      description: "Specifies the list of devices that need to be combined to form the\nstorage space.\nOnly one of the fields is populated with a device node.\nIf the device node is a leaf node, leafNode is populated with details\nabout the partition blocks in the file.\nIf the device node is an intermediate node, intermediateNode is\npopulated with a device sub-tree."
      type: "object"
      title: "Device Node."
      properties: 
        intermediateNode: 
          description: "Specifies an intermediate node of the logical device tree."
          $ref: "#/definitions/DeviceTree"
        leafNode: 
          description: "Specifies the leaf node of the device tree."
          $ref: "#/definitions/FilePartitionBlock"
      x-go-package: "cohesity/iris/server/data/public"
    DeviceTree: 
      description: "Specifies a logical volume stored as a tree where the leaves are\nthe blocks of partitions and intermediate nodes are assembled by combining\nnodes using one of the following modes: linear layout, striped,\nmirrored, RAID etc.\nA deviceTree is a block device formed by combining one or more Devices\nusing a combining strategy."
      type: "object"
      title: "Device Tree."
      properties: 
        combineMethod: 
          description: "Specifies how to combine the children of this node.\nThe combining strategy for child devices. Some of these strategies imply\nconstraint on the number of child devices. e.g. RAID5 will have 5\nchildren.\n'LINEAR' indicates children are juxtaposed to form this device.\n'STRIPE' indicates children are striped.\n'MIRROR' indicates children are mirrored.\n'RAID5'\n'RAID6'\n'ZERO'\n'THIN'\n'THINPOOL'\n'SNAPSHOT'\n'CACHE'\n'CACHEPOOL'"
          type: "string"
          enum: 
            - "LINEAR"
            - "STRIPE"
            - "MIRROR"
            - "RAID5"
            - "RAID6"
            - "ZERO"
            - "THIN"
            - "THINPOOL"
            - "SNAPSHOT"
            - "CACHE"
            - "CACHEPOOL"
          x-go-name: "CombineMethod"
        deviceLength: 
          description: "Specifies the length of this device. This number should match the\nlength that is calculated from the children and combining method."
          type: "integer"
          format: "int64"
          x-go-name: "DeviceLength"
        deviceNodes: 
          type: "array"
          title: "Specifies the children of this node in the device tree."
          items: 
            $ref: "#/definitions/DeviceNode"
          x-go-name: "DeviceNodes"
        stripeSize: 
          description: "Specifies the size of the striped data if the data is striped."
          type: "integer"
          format: "int32"
          x-go-name: "StripeSize"
      x-go-package: "cohesity/iris/server/data/public"
    Disk: 
      description: "Specifies information about a disk and partitions in a volume."
      type: "object"
      title: "Disk in a Volume."
      properties: 
        diskBlocks: 
          description: "Specifies a set of disk blocks by defining the location and offset of\ndisk blocks in a disk."
          type: "array"
          title: "Array of Disk Blocks."
          items: 
            $ref: "#/definitions/DiskBlock"
          x-go-name: "DiskBlocks"
        diskFormat: 
          description: "Specifies the format of the virtual disk.\n'kVMDK' indicates VMware's Virtual Disk format.\n'kVHD' indicates Microsoft's Virtual Hard Drive format.\n'kVHDx' indicates Microsoft's Hyper-V Virtual Hard Drive format."
          type: "string"
          enum: 
            - "kVMDK"
            - "kVHD"
            - "kVHDx"
          x-go-name: "DiskFormat"
        diskPartitions: 
          description: "Specifies information about all the partitions in this disk."
          type: "array"
          title: "Array of Partitions."
          items: 
            $ref: "#/definitions/DiskPartition"
          x-go-name: "DiskPartitions"
        partitionTableFormat: 
          description: "Specifies partition table format on a disk.\n'kNoPartition' indicates missing partition table.\n'kMBRPartition' indicates partition table is in Master Boot Record format.\n'kGPTPartition' indicates partition table is in Guid Partition Table format.\n'kSGIPartition' indicates partition table uses SGI scheme.\n'kSUNPartition' indicates partition table uses SUN scheme."
          type: "string"
          enum: 
            - "kNoPartition"
            - "kMBRPartition"
            - "kGPTPartition"
            - "kSGIPartition"
            - "kSUNPartition"
          x-go-name: "PartitionTableFormat"
        sectorSizeBytes: 
          description: "Specifies the sector size of hard disk. It is used for mapping the disk\nblocks of the disk file into a linear list of sectors."
          type: "integer"
          format: "int64"
          x-go-name: "SectorSizeBytes"
        uuid: 
          description: "Specifies the disk uuid."
          type: "string"
          x-go-name: "Uuid"
        vmdkFileName: 
          description: "Specifies the disk file name. This is the VMDK name and not the\nflat file name."
          type: "string"
          x-go-name: "VmdkFileName"
        vmdkSizeBytes: 
          description: "Specifies the disk size in bytes."
          type: "integer"
          format: "int64"
          x-go-name: "VmdkSizeBytes"
      x-go-package: "cohesity/iris/server/data/public"
    DiskBlock: 
      description: "Specifies a contiguous block by defining an offset and\nlength of the block."
      type: "object"
      title: "Disk Block."
      properties: 
        lengthBytes: 
          description: "Specifies the length of the block in bytes."
          type: "integer"
          format: "int64"
          x-go-name: "LengthBytes"
        offsetBytes: 
          description: "Specifies the offset of the block (in bytes) from the beginning\nof the containing object such as a physical disk or a\nvirtual disk file."
          type: "integer"
          format: "int64"
          x-go-name: "OffsetBytes"
      x-go-package: "cohesity/iris/server/data/public"
    DiskPartition: 
      description: "Specifies information about each partition in a physical disk."
      type: "object"
      title: "Disk Partition."
      properties: 
        lengthBytes: 
          description: "Specifies the length of the block in bytes."
          type: "integer"
          format: "int64"
          x-go-name: "LengthBytes"
        number: 
          description: "Specifies a unique number of the partition within the linear disk file."
          type: "integer"
          format: "int64"
          x-go-name: "Number"
        offsetBytes: 
          description: "Specifies the offset of the block (in bytes) from the beginning\nof the containing object such as a physical disk or a\nvirtual disk file."
          type: "integer"
          format: "int64"
          x-go-name: "OffsetBytes"
        typeUuid: 
          description: "Specifies the partition type uuid.\nIf disk is unpartitioned, this field is not set.\nIf disk is MBR partitioned, this field is set to a partition type.\nIf disk is GPT partitioned, this field is set to a partition type\nGUID."
          type: "string"
          x-go-name: "TypeUuid"
        uuid: 
          description: "Specifies the partition uuid.\nIf disk is unpartitioned, this field is not set.\nIf disk is MBR partitioned, this field is not set.\nIf disk is GPT partitioned, this field is set to a partition GUID."
          type: "string"
          x-go-name: "Uuid"
      x-go-package: "cohesity/iris/server/data/public"
    DiskUnit: 
      description: "Specifies information about a disk unit in a controller."
      type: "object"
      title: "Disk Unit in a disk controller."
      properties: 
        busNumber: 
          description: "Specifies the Id of the controller bus that controls the disk."
          type: "integer"
          format: "int64"
          x-go-name: "BusNumber"
        controllerType: 
          description: "Specifies the controller type like SCSI, or IDE etc."
          type: "string"
          x-go-name: "ControllerType"
        unitNumber: 
          description: "Specifies the disk file name. This is the VMDK name and not the\nflat file name."
          type: "integer"
          format: "int64"
          x-go-name: "UnitNumber"
      x-go-package: "cohesity/iris/server/data/public"
    EntityIdentifier: 
      description: "Specifies a unique identifier for the entity."
      type: "object"
      title: "Entity Identifier."
      properties: 
        entityId: 
          description: "Specifies the unique identifier for the entity in the source Cluster."
          $ref: "#/definitions/Value"
      x-go-package: "stats/base/stats.pb"
    EntityProto: 
      description: "Specifies the attributes and the latest statistics about an entity."
      type: "object"
      title: "Entity."
      properties: 
        attributeVec: 
          description: "List of attributes of an entity."
          type: "array"
          title: "Array of Attributes."
          items: 
            $ref: "#/definitions/KeyValuePair"
          x-go-name: "AttributeVec"
        entityId: 
          description: "Specifies a globally unique identifier of an entity."
          $ref: "#/definitions/EntityIdentifier"
        latestMetricVec: 
          description: "List of the latest statistics for all metrics defined in the schema\nthat this entity belongs to.\nIf statistics for a metric is not available, then that data point is not\nreturned."
          type: "array"
          title: "Array of Metric Statistics."
          items: 
            $ref: "#/definitions/MetricValue"
          x-go-name: "LatestMetricVec"
      x-go-package: "stats/base/stats.pb"
    EntitySchemaProto: 
      description: "Specifies the meta-data associated with entity such as the list of\nattributes and time series data."
      type: "object"
      title: "Entity Schema."
      properties: 
        attributesDescriptor: 
          $ref: "#/definitions/EntitySchemaProto_AttributesDescriptor"
        isInternalSchema: 
          description: "Specifies if this schema should be displayed in Advanced Diagnostics\nof the Cohesity Dashboard. If false, the schema is displayed."
          type: "boolean"
          x-go-name: "IsInternalSchema"
        name: 
          description: "Specifies a name that uniquely identifies an entity schema such as\n'kBridgeClusterStats'."
          type: "string"
          x-go-name: "Name"
        schemaDescriptiveName: 
          description: "Specifies the name of the Schema as displayed in Advanced Diagnostics\nof the Cohesity Dashboard. For example for the 'kBridgeClusterStats'\nSchema, the descriptive name is 'Cluster Physical Stats'."
          type: "string"
          x-go-name: "SchemaDescriptiveName"
        schemaHelpText: 
          description: "Specifies an optional informational description about the schema."
          type: "string"
          x-go-name: "SchemaHelpText"
        timeSeriesDescriptorVec: 
          description: "List of time series of data (set of data points) for metrics."
          type: "array"
          title: "Array of Time Series."
          items: 
            $ref: "#/definitions/EntitySchemaProto_TimeSeriesDescriptor"
          x-go-name: "TimeSeriesDescriptorVec"
        version: 
          description: "Specifies the version of the entity schema."
          type: "integer"
          format: "int64"
          x-go-name: "Version"
      x-go-package: "stats/base/entity_schema.pb"
    EntitySchemaProto_AttributesDescriptor: 
      description: "Specifies a list of attributes about an entity."
      type: "object"
      title: "Attributes Descriptor."
      properties: 
        attributeVec: 
          description: "List of attributes about an entity."
          type: "array"
          title: "Array of Attributes."
          items: 
            $ref: "#/definitions/EntitySchemaProto_KeyValueDescriptor"
          x-go-name: "AttributeVec"
        keyAttributeNameIndex: 
          description: "Specifies the attribute to use as a unique identifier for the entity.\nThis value is returned in entityId when the GET\npublic/statistics/entities operation is run."
          type: "integer"
          format: "int32"
          x-go-name: "KeyAttributeNameIndex"
      x-go-package: "stats/base/entity_schema.pb"
    EntitySchemaProto_KeyValueDescriptor: 
      description: "Specifies a key/value pair."
      type: "object"
      title: "Key/Value Pair."
      properties: 
        keyName: 
          description: "Specifies the name of a key."
          type: "string"
          x-go-name: "KeyName"
        valueType: 
          description: "Specifies the type of the value that is associated with the key.\n0 specifies a value type of Int64.\n1 specifies a value type of Double.\n2 specifies a value type of String.\n3 specifies a value type of Bytes."
          type: "integer"
          format: "int32"
          x-go-name: "ValueType"
      x-go-package: "stats/base/entity_schema.pb"
    EntitySchemaProto_TimeSeriesDescriptor: 
      description: "Specifies the meta-data required to define a time series of data\n(set of data points) for a metric."
      type: "object"
      title: "Time Series."
      properties: 
        metricDescriptiveName: 
          description: "Specifies a descriptive name for the metric that is displayed in the\nAdvanced Diagnostics of the Cohesity Dashboard.\nFor example for the 'kUnmorphedUsageBytes' metric, the descriptive\nname is \"Total Logical Space Used\"."
          type: "string"
          x-go-name: "MetricDescriptiveName"
        metricName: 
          description: "Specifies the name of the metric such as 'kUnmorphedUsageBytes'.\nIt should be unique in an entity schema."
          type: "string"
          x-go-name: "MetricName"
        metricUnit: 
          $ref: "#/definitions/EntitySchemaProto_TimeSeriesDescriptor_MetricUnit"
        rawMetricPublishIntervalHintSecs: 
          description: "Specifies a suggestion for the interval to collect raw data points."
          type: "integer"
          format: "int32"
          x-go-name: "RawMetricPublishIntervalHintSecs"
        timeToLiveSecs: 
          description: "Specifies how long the data point will be stored."
          type: "integer"
          format: "int64"
          x-go-name: "TimeToLiveSecs"
        valueType: 
          description: "Specifies the value type for this metric.\nA metric of type 'string\" is not supported, instead use 'bytes'.\nNote that an aggregate metric of type 'bytes' is not supported.\n0 specifies a value type of Int64.\n1 specifies a value type of Double.\n2 specifies a value type of String.\n3 specifies a value type of Bytes."
          type: "integer"
          format: "int32"
          x-go-name: "ValueType"
      x-go-package: "stats/base/entity_schema.pb"
    EntitySchemaProto_TimeSeriesDescriptor_MetricUnit: 
      description: "Specifies the unit of measure for the metric.\nO specifies a unit of space used such as free disk space.\n1 specifies a Unix epoch Timestamp (in microseconds).\n2 specifies a Unix epoch Timestamp (in milliseconds).\n3 specifies a Unix epoch Timestamp (in seconds).\n4 specifies a Unix epoch Timestamp (in minutes).\n5 specifies a counter such as the read IO metric.\n6 specifies the temperature in Centigrade.\n7 specifies the temperature in Fahrenheit.\n8 specifies revolutions per minute such as a CPU fan speed.\n9 specifies a percentage such as CPU or memory usage."
      type: "object"
      title: "Metric Unit."
      properties: 
        type: 
          type: "integer"
          format: "int32"
          x-go-name: "Type"
      x-go-package: "stats/base/entity_schema.pb"
    EnvironmentTypeJobParameters: 
      description: "Specifies additional parameters that are applicable to all Protection\nSources in a Protection Job created for a particular environment type."
      type: "object"
      title: "Protection Job Parameters specific to Environment Type."
      properties: 
        hypervParameters: 
          description: "Specifies additional special parameters that are applicable only to\nTypes of 'kHyperV' type."
          $ref: "#/definitions/HypervEnvJobParameters"
        nasParameters: 
          description: "Specifies additional special parameters that are applicable only to\nTypes of 'kGenericNas' type."
          $ref: "#/definitions/NasEnvJobParameters"
        physicalParameters: 
          description: "Specifies additional special parameters that are applicable only to\nSources of 'kPhysical' type in a kPhysical environment."
          $ref: "#/definitions/PhysicalEnvJobParameters"
        pureParameters: 
          description: "Specifies additional special parameters that are applicable only to\nTypes of 'kPure' type."
          $ref: "#/definitions/PureEnvJobParameters"
        sqlParameters: 
          description: "Specifies additional special parameters that are applicable only to\nTypes of 'kSQL' type."
          $ref: "#/definitions/SqlEnvJobParameters"
        vmwareParameters: 
          description: "Specifies additional special parameters that are applicable only to\nTypes of 'kVMware' type."
          $ref: "#/definitions/VmwareEnvJobParameters"
      x-go-package: "cohesity/iris/server/data/public"
    ErasureCodingInfo: 
      type: "object"
      title: "Specifies information for erasure coding."
      properties: 
        algorithm: 
          description: "Algorthm used for erasure coding."
          type: "string"
          enum: 
            - "REED_SOLOMON"
            - "LRC"
          x-go-name: "Algorithm"
        erasureCodingEnabled: 
          description: "Specifies whether Erasure coding is enabled on the Storage Domain\n(View Box)."
          type: "boolean"
          x-go-name: "ErasureCodingEnabled"
        inlineErasureCoding: 
          description: "Specifies if erasure coding should occur inline (as the data is being\nwritten). This field is only relevant if erasure coding is enabled."
          type: "boolean"
          x-go-name: "InlineErasureCoding"
        numCodedStripes: 
          description: "The number of coded stripes."
          type: "integer"
          format: "int32"
          x-go-name: "NumCodedStripes"
        numDataStripes: 
          description: "The number of stripes containing data."
          type: "integer"
          format: "int32"
          x-go-name: "NumDataStripes"
      x-go-package: "cohesity/iris/server/data/public"
    ErrorProto: 
      type: "object"
      properties: 
        errorMsg: 
          description: "An optional detail."
          type: "string"
          x-go-name: "ErrorMsg"
        type: 
          description: "Error."
          type: "integer"
          format: "int32"
          x-go-name: "Type"
      x-go-package: "yoda/base/error.pb"
    EulaConfig: 
      type: "object"
      title: "Specifies the End User License Agreement acceptance information."
      properties: 
        licenseKey: 
          description: "Specifies the license key."
          type: "string"
          x-go-name: "LicenseKey"
        signedByUser: 
          description: "Specifies the login account name for the Cohesity user who accepted\nthe End User License Agreement."
          type: "string"
          x-go-name: "SignedByUser"
          readOnly: true
        signedTime: 
          description: "Specifies the time that the End User License Agreement was accepted."
          type: "integer"
          format: "int64"
          x-go-name: "SignedTime"
          readOnly: true
        signedVersion: 
          description: "Specifies the version of the End User License Agreement that was accepted."
          type: "integer"
          format: "int64"
          x-go-name: "SignedVersion"
      x-go-package: "cohesity/iris/server/data/public"
    ExportParameters: 
      type: "object"
      title: "ExportParameters specifies path required to export configuration."
      properties: 
        path: 
          description: "Specifies the directory path where to create a configuration files."
          type: "string"
          x-go-name: "Path"
      x-go-package: "cohesity/iris/server/data/public"
    ExtendedRetentionPolicy: 
      type: "object"
      title: "Specifies additional retention policies to apply to backup snapshots."
      properties: 
        daysToKeep: 
          description: "Specifies the number of days to retain copied Snapshots on the target."
          type: "integer"
          format: "int64"
          x-go-name: "DaysToKeep"
        multiplier: 
          description: "Specifies a factor to multiply the periodicity by, to determine the copy\nschedule.\nFor example if set to 2 and the periodicity is hourly, then Snapshots\nfrom the first eligible Job Run for every 2 hour period is copied."
          type: "integer"
          format: "int32"
          x-go-name: "Multiplier"
        periodicity: 
          description: "Specifies the frequency that Snapshots should be copied to the\nspecified target. Used in combination with multipiler.\n'kEvery' means that the Snapshot copy occurs after the number of\nJob Runs equals the number specified in the multiplier.\n'kHour' means that the Snapshot copy occurs hourly at the frequency\nset in the multiplier, for example if multiplier is 2, the copy occurs\nevery 2 hours.\n'kDay' means that the Snapshot copy occurs daily at the frequency\nset in the multiplier.\n'kWeek' means that the Snapshot copy occurs weekly at the frequency\nset in the multiplier.\n'kMonth' means that the Snapshot copy occurs monthly at the frequency\nset in the multiplier.\n'kYear' means that the Snapshot copy occurs yearly at the frequency\nset in the multiplier."
          type: "string"
          enum: 
            - "kEvery"
            - "kHour"
            - "kDay"
            - "kWeek"
            - "kMonth"
            - "kYear"
          x-go-name: "Periodicity"
      x-go-package: "cohesity/iris/server/data/public"
    ExtractFileRangeResult: 
      type: "object"
      title: "This will capture output of ExtractFileRange and ExtractNFSFileRange."
      properties: 
        data: 
          type: "array"
          title: "The actual data bytes."
          items: 
            type: "integer"
            format: "uint8"
          x-go-name: "Data"
        eof: 
          description: "Will be true if start_offset > file length or EOF is reached. This is an\nalternative to using file_length to determine when entire file is read.\nUsed when fetching from a view."
          type: "boolean"
          x-go-name: "Eof"
        error: 
          description: "Success/error status of the operation."
          $ref: "#/definitions/ErrorProto"
        fileLength: 
          description: "The total length of the file. This field would be set provided no error\nhad occurred (indicated by error field above)."
          type: "integer"
          format: "int64"
          x-go-name: "FileLength"
        startOffset: 
          description: "The offset from which data was read."
          type: "integer"
          format: "int64"
          x-go-name: "StartOffset"
      x-go-package: "yoda/base/yoda.pb"
    FileExtensionFilter: 
      type: "object"
      properties: 
        fileExtensionsList: 
          description: "The list of file extensions to apply"
          type: "array"
          items: 
            type: "string"
          x-go-name: "FileExtensionsList"
        isEnabled: 
          description: "If set, it enables the file extension filter"
          type: "boolean"
          x-go-name: "IsEnabled"
        mode: 
          description: "The mode applied to the list of file extensions"
          type: "string"
          enum: 
            - "kAllow"
            - "kDeny"
            - "kSpecialType"
          x-go-name: "Mode"
      x-go-package: "cohesity/iris/server/data/public"
    FilePartitionBlock: 
      description: "Defines a leaf node of a device tree. This refers to a logical\npartition in a virtual disk file."
      type: "object"
      properties: 
        diskFileName: 
          description: "Specifies the disk file name where the logical partition is."
          type: "string"
          x-go-name: "DiskFileName"
        lengthBytes: 
          description: "Specifies the length of the block in bytes."
          type: "integer"
          format: "int64"
          x-go-name: "LengthBytes"
        number: 
          description: "Specifies a unique number of the partition within the linear disk file."
          type: "integer"
          format: "int64"
          x-go-name: "Number"
        offsetBytes: 
          description: "Specifies the offset of the block (in bytes) from the beginning\nof the containing object such as a physical disk or a\nvirtual disk file."
          type: "integer"
          format: "int64"
          x-go-name: "OffsetBytes"
      x-go-package: "cohesity/iris/server/data/public"
    FilePathFilter: 
      description: "Specifies filters to match files and directories on a Server.\nTwo kinds of filters are supported. a) prefix which always starts\nwith '/'. b) posix which always starts with '*' (cannot be \"*\" only).\nRegular expressions are not supported.\nIf a directory is matched, the action is applicable to all of its\ndescendants. File paths not matching any protectFilters are not backed up.\n\nAn example is:\nProtect Filters: \"/\"\nExclude Filters: \"/tmp\", \"*.mp4\"\nUsing such a policy will include everything under the root directory except\nthe /tmp directory and all the mp4 files."
      type: "object"
      title: "File or Directory Path Filter."
      properties: 
        excludeFilters: 
          description: "Specifies filters to match files or directories that should be removed\nfrom the list of objects matching ProtectFilters."
          type: "array"
          title: "Array of Excluded File Path Filters."
          items: 
            type: "string"
          x-go-name: "ExcludeFilters"
        protectFilters: 
          description: "Specifies filters to match files or directories that should be protected."
          type: "array"
          title: "Array of Protected File Path Filters."
          items: 
            type: "string"
          x-go-name: "ProtectFilters"
      x-go-package: "cohesity/iris/server/data/public"
    FilePathParameters: 
      description: "Specifies a file or a directory to protect in a Physical Server.\nIf a directory is specified, all of its descendants are also backed up.\nOptionally, files or subdirectories can be explicitly excluded."
      type: "object"
      title: "File or Directory to Protect."
      properties: 
        backupFilePath: 
          description: "Specifies absolute path to a file or a directory in a Physical Server\nto protect."
          type: "string"
          x-go-name: "BackupFilePath"
        excludedFilePaths: 
          description: "Specifies absolute paths to descendant files or subdirectories\nof backupFilePath that should not be protected."
          type: "array"
          title: "Array of Excluded File Paths."
          items: 
            type: "string"
          x-go-name: "ExcludedFilePaths"
        skipNestedVolumes: 
          description: "Specifies if any subdirectories under backupFilePath, where local or\nnetwork volumes are mounted, should be excluded from being protected.\nIf true, the volumes are not protected."
          type: "boolean"
          x-go-name: "SkipNestedVolumes"
      x-go-package: "cohesity/iris/server/data/public"
    FileRestoreInfo: 
      type: "object"
      title: "Specifies restore information of a file or a folder."
      properties: 
        error: 
          description: "Specifies any error status for the file. If this error is set,\nit means we fail to get information for this file or file is not present\nin this instance id."
          $ref: "#/definitions/RequestError"
        filename: 
          description: "Specifies the path of the file/directory."
          type: "string"
          x-go-name: "Filename"
        filesystemVolume: 
          description: "Specifies the filesystem volume information."
          $ref: "#/definitions/FilesystemVolume"
        isFolder: 
          description: "Specifies whether the file path is a folder."
          type: "boolean"
          x-go-name: "IsFolder"
      x-go-package: "cohesity/iris/server/data/public"
    FileSearchResult: 
      description: "Specifies details about the found file or folder."
      type: "object"
      title: "File/Folder Search Result."
      properties: 
        documentType: 
          description: "Specifies the inferred document type."
          type: "string"
          x-go-name: "DocumentType"
        fileVersions: 
          description: "Specifies the different snapshot versions of a file or folder\nthat were captured at different times."
          type: "array"
          title: "Array of File Versions."
          items: 
            $ref: "#/definitions/FileVersion"
          x-go-name: "FileVersions"
        filename: 
          description: "Specifies the name of the found file or folder."
          type: "string"
          x-go-name: "Filename"
        isFolder: 
          description: "Specifies if the found item is a folder.\nIf true, the found item is a folder."
          type: "boolean"
          x-go-name: "IsFolder"
        jobId: 
          description: "Specifies the Job id for the Protection Job that is currently\nassociated with object that contains the backed up file or folder.\nIf the file or folder was backed up on current Cohesity Cluster,\nthis field contains the id for the Job that captured the object\nthat contains the file or folder.\nIf the file or folder was backed up on a Primary Cluster and\nreplicated to this Cohesity Cluster, a new Inactive Job is created,\nthe object that contains the file or folder is now associated\nwith new Inactive Job, and this field\ncontains the id of the new Inactive Job."
          type: "integer"
          format: "int64"
          x-go-name: "JobId"
        jobUid: 
          description: "Specifies the universal id of the Protection Job that backed up\nthe object that contains the file or folder."
          type: "object"
          title: "Unique Global Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        registeredSourceId: 
          description: "Specifies the id of the top-level registered source (such as a\nvCenter Server) where the source object that contains the\nthe file or folder is stored."
          type: "integer"
          format: "int64"
          x-go-name: "RegisteredSourceId"
        sourceId: 
          description: "Specifies the source id of the object that contains the file or folder."
          type: "integer"
          format: "int64"
          x-go-name: "SourceId"
        viewBoxId: 
          description: "Specifies the id of the Domain (View Box) where the source object that\ncontains the file or folder is stored."
          type: "integer"
          format: "int64"
          x-go-name: "ViewBoxId"
      x-go-package: "cohesity/iris/server/data/public"
    FileSearchResults: 
      description: "Specifies an array of found files and folders. In addition, a count is\nprovided to indicate if additional requests must be made to get\nthe full result."
      type: "object"
      title: "File/Folder Search Result."
      properties: 
        files: 
          description: "Specifies the list of files and folders returned by this request that\nmatch the specified search and filter criteria.\nThe number of files returned is limited by the pageCount field."
          type: "array"
          title: "Array of Files and Folders."
          items: 
            $ref: "#/definitions/FileSearchResult"
          x-go-name: "Files"
        totalCount: 
          description: "Specifies the total number of files and folders that match the filter and\nsearch criteria. Use this value to determine how many additional\nrequests are required to get the full result."
          type: "integer"
          format: "int64"
          x-go-name: "TotalCount"
      x-go-package: "cohesity/iris/server/data/public"
    FileSnapshotInformation: 
      description: "Specifies the information about the snapshot that contains the file\nor folder. In addition, information about the file or folder is\nprovided."
      type: "object"
      title: "File/Folder Snapshot Information."
      properties: 
        hasArchivalCopy: 
          description: "If true, this snapshot is located on an archival target\n(such as a tape or AWS)."
          type: "boolean"
          x-go-name: "HasArchivalCopy"
        hasLocalCopy: 
          description: "If true, this snapshot is located on a local Cohesity Cluster."
          type: "boolean"
          x-go-name: "HasLocalCopy"
        hasRemoteCopy: 
          description: "If true, this snapshot is located on a Remote Cohesity Cluster."
          type: "boolean"
          x-go-name: "HasRemoteCopy"
        modifiedTimeUsecs: 
          description: "Specifies the time when the file or folder was last modified.\nSpecified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "ModifiedTimeUsecs"
        sizeBytes: 
          description: "Specifies the size of the file or folder in bytes."
          type: "integer"
          format: "int64"
          x-go-name: "SizeBytes"
        snapshot: 
          description: "Specifies the snapshot that contains the specified file or folder."
          $ref: "#/definitions/SnapshotAttempt"
      x-go-package: "cohesity/iris/server/data/public"
    FileVersion: 
      description: "Specifies information about a single file or folder."
      type: "object"
      title: "File/Folder Version."
      properties: 
        modifiedTimeUsecs: 
          description: "Specifies the time when the file or folder was last modified.\nSpecified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "ModifiedTimeUsecs"
        sizeBytes: 
          description: "Specifies the size of the file or folder (in bytes)\nfrom the most recent snapshot."
          type: "integer"
          format: "int64"
          x-go-name: "SizeBytes"
        snapshots: 
          description: "Specifies the available snapshots of the file or folder. When a Job Run\nexecutes, it captures a snapshot of object (such as a VM)\nthat contains the file or folder."
          type: "array"
          title: "Array of Snapshots."
          items: 
            $ref: "#/definitions/SnapshotAttempt"
          x-go-name: "Snapshots"
      x-go-package: "cohesity/iris/server/data/public"
    FilenamePatternToDirectory: 
      description: "Specifies a filename pattern and the directory path where to keep files\nmatching that pattern."
      type: "object"
      properties: 
        directory: 
          description: "Specifies the directory where to keep the files matching the pattern."
          type: "string"
          x-go-name: "Directory"
        filenamePattern: 
          description: "Specifies a pattern to be matched with filenames. This can be a\nregex expression."
          type: "string"
          x-go-name: "FilenamePattern"
      x-go-package: "cohesity/iris/server/data/public"
    FilerAuditLogConfiguration: 
      description: "Specifies the settings of the filer audit log configuration."
      type: "object"
      title: "Filer Audit Log Configuration."
      required: 
        - "enabled"
        - "retentionPeriodDays"
      properties: 
        enabled: 
          description: "Specifies if filer audit logging is enabled on the Cohesity Cluster.\nIf 'true', filer audit logging is enabled. Otherwise, it is disabled."
          type: "boolean"
          x-go-name: "Enabled"
        retentionPeriodDays: 
          description: "Specifies the number of days to keep (retain) the filer audit logs.\nAudit logs generated before the period of time specified by\nretentionPeriodDays are removed from the Cohesity Cluster."
          type: "integer"
          format: "int32"
          x-go-name: "RetentionPeriodDays"
      x-go-package: "cohesity/iris/server/data/public"
    FilesystemVolume: 
      description: "Specifies information about a filesystem volume."
      type: "object"
      title: "Filesystem Volume."
      properties: 
        disks: 
          description: "Specifies information about all the disks and partitions needed to\nmount this logical volume."
          type: "array"
          title: "Array of Disks and Partitions."
          items: 
            $ref: "#/definitions/Disk"
          x-go-name: "Disks"
        displayName: 
          description: "Specifies a description about the filesystem."
          type: "string"
          x-go-name: "DisplayName"
        filesystemType: 
          description: "Specifies type of the filesystem on this volume."
          type: "string"
          x-go-name: "FilesystemType"
        filesystemUuid: 
          description: "Specifies the uuid of the filesystem."
          type: "string"
          x-go-name: "FilesystemUuid"
        isSupported: 
          description: "If true, this is a supported filesystem volume type."
          type: "boolean"
          x-go-name: "IsSupported"
        logicalVolume: 
          description: "Specify attributes for a kLMV (Linux) or kLDM (Windows) filesystem.\nThis field is set only for kLVM and kLDM volume types."
          type: "object"
          title: "Logical Volume."
          properties: 
            deviceRootNode: 
              description: "Specifies the device tree defining how to combine partitions to create\nthis logical volume."
              $ref: "#/definitions/DeviceTree"
            groupName: 
              description: "Specifies the group name of the logical volume."
              type: "string"
              x-go-name: "GroupName"
            groupUuid: 
              description: "Specifies the group uuid of the logical volume."
              type: "string"
              x-go-name: "GroupUuid"
            name: 
              description: "Specifies the name of the logical volume."
              type: "string"
              x-go-name: "Name"
            uuid: 
              description: "Specifies the uuid of the logical volume."
              type: "string"
              x-go-name: "Uuid"
        logicalVolumeType: 
          description: "Specifies the type of logical volume such as kSimpleVolume, kLVM or kLDM.\n'kSimpleVolume' indicates a simple volume. Data can be used by just\nmounting the only one partition present on the disk.\n'kLVM' indicates a logical volume on Linux managed by a Logical Volume\nManager. In order to access the data, deviceTree must be created based\non the specification in logicalVolume.deviceTree.\n'kLDM' indicates a logical volume on Windows managed by Logical Disk\nManager."
          type: "string"
          enum: 
            - "kSimpleVolume"
            - "kLVM"
            - "kLDM"
          x-go-name: "LogicalVolumeType"
        name: 
          description: "Specifies the name of the volume such as /C."
          type: "string"
          x-go-name: "Name"
        volumeGuid: 
          description: "VolumeGuid is the Volume guid.\nThis is populated for kPhysical environments."
          type: "string"
          x-go-name: "VolumeGuid"
      x-go-package: "cohesity/iris/server/data/public"
    FixedUnixIdMapping: 
      description: "Specifies the fields when mapping type is set to 'kFixed'. It maps all\nActive Directory users of a domain to a fixed Unix uid, and gid."
      type: "object"
      properties: 
        gid: 
          description: "Specifies the fixed Unix GID, when mapping type is set to kFixed."
          type: "integer"
          format: "int64"
          x-go-name: "Gid"
        uid: 
          description: "Specifies the fixed Unix UID, when mapping type is set to kFixed."
          type: "integer"
          format: "int64"
          x-go-name: "Uid"
      x-go-package: "cohesity/iris/server/data/public"
    GetMRJarUploadPathResult: 
      description: "User can upload jar files containing mappers and reducers. Iris will upload\nthese jar files in Yoda's internal view. Yoda will mount its internal view\nand send Iris the mount point."
      type: "object"
      properties: 
        error: 
          description: "Status code for this http rpc."
          $ref: "#/definitions/ErrorProto"
        jarUploadPath: 
          description: "Path where Jars can be uploaded by Iris."
          type: "string"
          x-go-name: "JarUploadPath"
      x-go-package: "yoda/base/analytics.pb"
    GetMapReduceAppRunsParams: 
      description: "GetMapReduceAppRunsParams specifies the input params to fetch the map reduce\napplication runs."
      type: "object"
      properties: 
        appId: 
          description: "ApplicationId is the Id of the map reduce application."
          type: "integer"
          format: "int64"
          x-go-name: "ApplicationId"
        appInstanceId: 
          description: "ApplicationInstanceId is the Id of the map reduce application instance."
          type: "integer"
          format: "int64"
          x-go-name: "ApplicationInstanceId"
        includeDetails: 
          description: "If this flag is true, then send details of instance, else send only\nRunInfo."
          type: "boolean"
          x-go-name: "IncludeDetails"
        lastNumInstances: 
          description: "Give last N instance of an app based on end time."
          type: "integer"
          format: "int32"
          x-go-name: "LastNumInstances"
        maxRunEndTimeInSecs: 
          description: "MaxRunEndTimestampInSecs specifies the maximum job run end timestamp\nin seconds. App run instances with end time less than equal to\nMaxRunEndTimestampInSecs will be selected. Default is LONG_MAX (inf)."
          type: "integer"
          format: "int64"
          x-go-name: "MaxRunEndTimestampInSecs"
        maxRunStartTimeInSecs: 
          description: "MaxRunStartTimestampInSecs specifies the maximum job run start timestamp\nin seconds. App run instances with start time less than equal to\nMaxRunStartTimestampInSecs will be selected. Default is LONG_MAX (inf)."
          type: "integer"
          format: "int64"
          x-go-name: "MaxRunStartTimestampInSecs"
        minRunEndTimeInSecs: 
          description: "MinRunEndTimestampInSecs specifies the minimum job run end timestamp\nin seconds. App run instances with end time greater than equal to\nMinRunEndTimestampInSecs will be selected. Default is 0, i.e. beginning\nof time."
          type: "integer"
          format: "int64"
          x-go-name: "MinRunEndTimestampInSecs"
        minRunStartTimeInSecs: 
          description: "MinRunStartTimestampInSecs specifies the minimum job run start timestamp\nin seconds. App run instances with start time greater than equal to\nMinRunStartTimestampInSecs will be selected. Default is 0, i.e. beginning\nof time."
          type: "integer"
          format: "int64"
          x-go-name: "MinRunStartTimestampInSecs"
        pageSize: 
          description: "Number of results to be displayed on a page."
          type: "integer"
          format: "int32"
          x-go-name: "PageSize"
        runStatus: 
          description: "Filter instances based on the map reduce application run status."
          type: "string"
          x-go-name: "RunStatus"
        startOffset: 
          description: "Start offset for pagination from where result needs to be fetched."
          type: "integer"
          format: "int32"
          x-go-name: "StartOffset"
      x-go-package: "cohesity/iris/server/data/public"
    GetRegistrationInfoResponse: 
      description: "Specifies the registration and protection information of all or a subset\nof the registered Protection Source Trees or Views on the Cohesity Cluster."
      type: "object"
      title: "Registration and Protection Information of the Cohesity Cluster."
      properties: 
        rootNodes: 
          description: "Specifies the registration and protection information of either all or\na subset of registered Protection Sources matching the filter parameters.\noverrideDescription: true"
          type: "array"
          items: 
            $ref: "#/definitions/ProtectionSourceTreeInfo"
          x-go-name: "RootNodes"
        stats: 
          description: "Specifies the sum of all the stats of protection of Protection Sources\nand views selected by the query parameters."
          type: "object"
          title: "Protection Summary Information of a registered Protection Source tree or\nthe Cohesity Cluster."
          properties: 
            protectedCount: 
              description: "Specifies the number of objects that are protected under the given\nentity."
              type: "integer"
              format: "int64"
              x-go-name: "ProtectedCount"
            protectedSize: 
              description: "Specifies the total size of the protected objects under the given entity."
              type: "integer"
              format: "int64"
              x-go-name: "ProtectedSize"
            unprotectedCount: 
              description: "Specifies the number of objects that are not protected under the given\nentity."
              type: "integer"
              format: "int64"
              x-go-name: "UnprotectedCount"
            unprotectedSize: 
              description: "Specifies the total size of the unprotected objects under the given\nentity."
              type: "integer"
              format: "int64"
              x-go-name: "UnprotectedSize"
        views: 
          description: "Specifies the protection information of either all or a subset of Views\ncreated on the Cohesity Cluster.\noverrideDescription: true"
          type: "array"
          items: 
            $ref: "#/definitions/ViewProtectionInfo"
          x-go-name: "Views"
      x-go-package: "cohesity/iris/server/data/public"
    GetViewsByShareNameResult: 
      description: "Specifies the list of Views and Aliases by share name that matched the\nspecified filter criteria."
      type: "object"
      title: "Get (Views and Aliases) By Share Result."
      properties: 
        paginationCookie: 
          description: "If set, i.e. there are more results to display, use this value to get\nthe next set of results, by using this value in paginationCookie param\nfor the next request to GetViewsByShare."
          type: "string"
          x-go-name: "PaginationCookie"
        sharesList: 
          description: "Specifies the list of Views returned in this response."
          type: "array"
          title: "Array of Views and Aliases by Share name."
          items: 
            $ref: "#/definitions/Share"
          x-go-name: "SharesList"
      x-go-package: "cohesity/iris/server/data/public"
    GetViewsResult: 
      description: "Specifies the list of Views returned that matched the specified filter\ncriteria."
      type: "object"
      title: "Get Views Result."
      properties: 
        lastResult: 
          description: "If false, more Views are available to return. If the number of\nViews to return exceeds the number of Views specified in maxCount\n(default of 1000) of the original GET /public/views request,\nthe first set of Views are returned and this field returns false.\nTo get the next set of Views, in the next GET /public/views request\nsend the last id from the previous viewList."
          type: "boolean"
          x-go-name: "LastResult"
        views: 
          description: "Specifies the list of Views returned in this response.\nThe list is sorted by decreasing View ids."
          type: "array"
          title: "Array of Views."
          items: 
            $ref: "#/definitions/View"
          x-go-name: "ViewList"
      x-go-package: "cohesity/iris/server/data/public"
    GoogleCloudCredentials: 
      description: "Specifies the cloud credentials to connect to a Google service account."
      type: "object"
      title: "Google Cloud Credentials."
      properties: 
        clientEmailAddress: 
          description: "Specifies the client email address used to access Google\nCloud Storage."
          type: "string"
          x-go-name: "ClientEmailAddress"
        clientPrivateKey: 
          description: "Specifies the private key used to access Google Cloud Storage that is\ngenerated when the service account is created."
          type: "string"
          x-go-name: "ClientPrivateKey"
        projectId: 
          description: "Specifies the project id of an existing Google Cloud project to store\nobjects."
          type: "string"
          x-go-name: "ProjectId"
      x-go-package: "cohesity/iris/server/data/public"
    Group: 
      description: "Specifies details about the group."
      type: "object"
      title: "Group Details."
      properties: 
        createdTimeMsecs: 
          description: "Specifies the epoch time in milliseconds when the group was created/added."
          type: "integer"
          format: "int64"
          x-go-name: "CreatedTimeMsecs"
        description: 
          description: "Specifies a description of the group."
          type: "string"
          x-go-name: "Description"
        domain: 
          description: "Specifies the domain of the group."
          type: "string"
          x-go-name: "Domain"
        lastUpdatedTimeMsecs: 
          description: "Specifies the epoch time in milliseconds when the group was last modified."
          type: "integer"
          format: "int64"
          x-go-name: "LastUpdatedTimeMsecs"
        name: 
          description: "Specifies the name of the group."
          type: "string"
          x-go-name: "Name"
        restricted: 
          description: "Whether the group is a restricted group. Users belonging to a restricted\ngroup can only view objects they have permissions to."
          type: "boolean"
          x-go-name: "Restricted"
        roles: 
          description: "Specifies the Cohesity roles to associate with the group such as\n'Admin', 'Ops' or 'View'.\nThe Cohesity roles determine privileges on the Cohesity Cluster\nfor all the users in this group."
          type: "array"
          title: "Array of Roles."
          items: 
            type: "string"
          x-go-name: "Roles"
        sid: 
          description: "Specifies the unique Security ID (SID) of the group."
          type: "string"
          x-go-name: "Sid"
      x-go-package: "cohesity/iris/server/data/public"
    GroupDeleteParameters: 
      description: "Specifies the groups to delete on the Cohesity Cluster."
      type: "object"
      title: "Delete Groups Request."
      properties: 
        domain: 
          description: "Specifies the domain associated with the groups to delete.\nOnly groups associated with the same domain can be deleted\nby a single request.\nIf no domain is specified, the specified groups are deleted from the\nLOCAL domain on the Cohesity Cluster.\nIf a non-LOCAL domain is specified, the specified groups are deleted\non the Cohesity Cluster. However, the referenced group principals on the\nActive Directory are not deleted."
          type: "string"
          x-go-name: "Domain"
        names: 
          description: "Specifies the list of groups to delete on the Cohesity Cluster.\nOnly groups from the same domain can be deleted by a single request."
          type: "array"
          title: "Array of Groups."
          items: 
            type: "string"
          x-go-name: "Names"
      x-go-package: "cohesity/iris/server/data/public"
    GroupParameters: 
      description: "Specifies the settings used to add/create a new group or modify an existing\ngroup."
      type: "object"
      title: "Group Request."
      properties: 
        description: 
          description: "Specifies a description of the group."
          type: "string"
          x-go-name: "Description"
        domain: 
          description: "Specifies the domain of the group."
          type: "string"
          x-go-name: "Domain"
        name: 
          description: "Specifies the name of the group."
          type: "string"
          x-go-name: "Name"
        restricted: 
          description: "Whether the group is a restricted group. Users belonging to a restricted\ngroup can only view objects they have permissions to."
          type: "boolean"
          x-go-name: "Restricted"
        roles: 
          description: "Specifies the Cohesity roles to associate with the group such as\n'Admin', 'Ops' or 'View'.\nThe Cohesity roles determine privileges on the Cohesity Cluster\nfor all the users in this group."
          type: "array"
          title: "Array of Roles."
          items: 
            type: "string"
          x-go-name: "Roles"
      x-go-package: "cohesity/iris/server/data/public"
    HardwareInfo: 
      description: "Hardware JSON file serves as cache for hardware info to reduce\nhardware polling which takes time."
      type: "object"
      title: "This struct should match the fields in the hardware JSON file."
      properties: 
        chassisModel: 
          type: "string"
          x-go-name: "ChassisModel"
        chassisSerial: 
          type: "string"
          x-go-name: "ChassisSerial"
        chassisType: 
          type: "string"
          x-go-name: "ChassisType"
        hbaModel: 
          type: "string"
          x-go-name: "HbaModel"
        ipmiLanChannel: 
          type: "string"
          x-go-name: "IpmiLanChannel"
        maxSlots: 
          type: "string"
          x-go-name: "MaxSlots"
        nodeModel: 
          type: "string"
          x-go-name: "NodeModel"
        nodeSerial: 
          type: "string"
          x-go-name: "NodeSerial"
        primaryBondName: 
          type: "string"
          x-go-name: "PrimaryBondName"
        productModel: 
          type: "string"
          x-go-name: "ProductModel"
        secondaryBondName: 
          type: "array"
          items: 
            type: "string"
          x-go-name: "SecondaryBondName"
        slotNumber: 
          type: "string"
          x-go-name: "SlotNumber"
      x-go-package: "cohesity/util/hal"
    HealthTile: 
      type: "object"
      title: "Health for Dashboard."
      properties: 
        capacityBytes: 
          description: "Raw Cluster Capacity in Bytes. This is not usable capacity and does not\ntake replication factor into account."
          type: "integer"
          format: "int64"
          x-go-name: "CapacityBytes"
        clusterCloudUsageBytes: 
          description: "Usage in Bytes on the cloud."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterCloudUsageBytes"
        lastDayAlerts: 
          type: "array"
          title: "Alerts in last 24 hours."
          items: 
            $ref: "#/definitions/Alert"
          x-go-name: "LastDayAlerts"
        lastDayNumCriticals: 
          description: "Number of Critical Alerts."
          type: "integer"
          format: "int64"
          x-go-name: "LastDayNumCriticals"
        lastDayNumWarnings: 
          description: "Number of Warning Alerts."
          type: "integer"
          format: "int64"
          x-go-name: "LastDayNumWarnings"
        numNodes: 
          description: "Number of nodes in the cluster."
          type: "integer"
          format: "int32"
          x-go-name: "NumNodes"
        numNodesWithIssues: 
          description: "Number of nodes in the cluster that are unhealthy."
          type: "integer"
          format: "int32"
          x-go-name: "NumNodesWithIssues"
        percentFull: 
          description: "Percent the cluster is full."
          type: "number"
          format: "float"
          x-go-name: "PercentFull"
        rawUsedBytes: 
          description: "Raw Bytes used in the cluster."
          type: "integer"
          format: "int64"
          x-go-name: "RawUsedBytes"
      x-go-package: "cohesity/iris/server/data/public"
    HypervCloneParameters: 
      description: "This field defines the HyperV specific params for restore tasks of type\nkCloneVMs."
      type: "object"
      title: "Specifies information needed when cloning VMs in HyperV enviroment."
      properties: 
        disableNetwork: 
          description: "Specifies whether the network should be left in disabled state.\nAttached network is enabled by default. Set this flag to true to\ndisable it."
          type: "boolean"
          x-go-name: "DisableNetwork"
        networkId: 
          description: "Specifies a network configuration to be attached to the cloned or\nrecovered object.\nFor kCloneVMs and kRecoverVMs tasks, original network configuration\nis detached if the cloned or recovered object is kept under a different\nparent Protection Source or a different Resource Pool.\nBy default, for kRecoverVMs task, original network configuration is\npreserved if the recovered object is kept under the same parent\nProtection Source and the same Resource Pool.\nSpecify this field to override the preserved network configuration or\nto attach a new network configuration to the cloned or recovered objects.\nYou can get the networkId of the kNetwork object by setting\nincludeNetworks to 'true' in the GET /public/protectionSources operation.\nIn the response, get the id of the desired kNetwork object, the resource\npool, and the registered parent Protection Source."
          type: "integer"
          format: "int64"
          x-go-name: "NetworkId"
        poweredOn: 
          description: "Specifies the power state of the cloned or recovered objects.\nBy default, the cloned or recovered objects are powered off."
          type: "boolean"
          x-go-name: "KeepPoweredOn"
        prefix: 
          description: "Specifies a prefix to prepended to the source object name to derive a\nnew name for the recovered or cloned object.\nBy default, cloned or recovered objects retain their original name.\nLength of this field is limited to 8 characters."
          type: "string"
          x-go-name: "Prefix"
        resourceId: 
          description: "The resource (HyperV host) to which the restored VM will be attached.\n\nThis field is optional for a kRecoverVMs task if the VMs are being\nrestored to its original parent source. If not specified, restored VMs\nwill be attached to its original host. This field is mandatory if the\nVMs are being restored to a different parent source."
          type: "integer"
          format: "int64"
          x-go-name: "ResourceId"
        suffix: 
          description: "Specifies a suffix to appended to the original source object name\nto derive a new name for the recovered or cloned object.\nBy default, cloned or recovered objects retain their original name.\nLength of this field is limited to 8 characters."
          type: "string"
          x-go-name: "Suffix"
      x-go-package: "cohesity/iris/server/data/public"
    HypervDatastore: 
      description: "Specifies information about a Datastore Object in HyperV environment."
      type: "object"
      title: "HyperV Datastore Object."
      properties: 
        capacity: 
          description: "Specifies the capacity of the datastore in bytes."
          type: "integer"
          format: "uint64"
          x-go-name: "Capacity"
        freeSpace: 
          description: "Specifies the available space on the datastore in bytes."
          type: "integer"
          format: "uint64"
          x-go-name: "FreeSpace"
        mountPoints: 
          type: "array"
          title: "Specifies the available mount points on the datastore."
          items: 
            type: "string"
          x-go-name: "MountPoints"
        type: 
          description: "Specifies the type of the datastore object like kFileShare or kVolume.\noverrideDescription: true\nSpecifies the type of a HyperV datastore object.\n'kFileShare' indicates SMB file share datastore.\n'kVolume' indicates a volume which can a LUN."
          type: "string"
          enum: 
            - "kFileShare"
            - "kVolume"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    HypervEnvJobParameters: 
      description: "Specifies job parameters applicable for all 'kHyperV' Environment type\nProtection Sources in a Protection Job."
      type: "object"
      title: "Protection Job parameters applicable to 'kHyperV' Environment type."
      properties: 
        fallbackToCrashConsistent: 
          description: "If true, takes a crash-consistent snapshot when app-consistent snapshot\nfails. Otherwise, the snapshot attempt is marked failed.\nBy default, this field is set to false."
          type: "boolean"
          x-go-name: "FallbackToCrashConsistent"
      x-go-package: "cohesity/iris/server/data/public"
    HypervProtectionSource: 
      description: "Specifies a Protection Source in HyperV environment."
      type: "object"
      title: "HyperV Protection Source."
      properties: 
        agentInfo: 
          description: "Specifies information about the agent running on the HyperV objects."
          $ref: "#/definitions/AgentInformation"
        backupType: 
          description: "Specifies the type of backup supported by the VM.\n'kRctBackup', 'kVssBackup'\nSpecifies the type of an HyperV datastore object.\n'kRctBackup' indicates backup is done using RCT/checkpoints.\n'kVssBackup' indicates backup is done using VSS."
          type: "string"
          enum: 
            - "kRctBackup"
            - "kVssBackup"
          x-go-name: "BackupType"
        clusterName: 
          description: "Specifies the cluster name for 'kHostCluster' objects."
          type: "string"
          x-go-name: "ClusterName"
        datastoreInfo: 
          description: "Specifies additional information for 'kDatastore' objects."
          $ref: "#/definitions/HypervDatastore"
        description: 
          description: "Specifies a description about the Protection Source."
          type: "string"
          x-go-name: "Description"
        hostType: 
          description: "Specifies host OS type for 'kVirtualMachine' objects.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
          type: "string"
          enum: 
            - "kLinux"
            - "kWindows"
          x-go-name: "HostType"
        hypervUuid: 
          description: "Specifies the UUID for 'kVirtualMachine' HyperV objects."
          type: "string"
          x-go-name: "HypervUuid"
        name: 
          description: "Specifies the name of the HyperV Object."
          type: "string"
          x-go-name: "Name"
        type: 
          description: "Specifies the type of an HyperV Protection Source Object such as\n'kSCVMMServer', 'kStandaloneHost', 'kNetwork', etc.\noverrideDescription: true\nSpecifies the type of an HyperV Protection Source.\n'kSCVMMServer' indicates a collection of root folders clusters.\n'kStandaloneHost' indicates a single Nutanix cluster.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kHostGroup' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an HyperV host.\n'kHostCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kDatastore' represents a storage container object."
          type: "string"
          enum: 
            - "kSCVMMServer"
            - "kStandaloneHost"
            - "kStandaloneCluster"
            - "kHostGroup"
            - "kHost"
            - "kHostCluster"
            - "kVirtualMachine"
            - "kNetwork"
            - "kDatastore"
          x-go-name: "Type"
        uuid: 
          description: "Specifies the UUID of the Object. This is unique within the HyperV\nenvironment."
          type: "string"
          x-go-name: "Uuid"
        vmInfo: 
          description: "Specifies additional information for 'kVirtualMachine' objects."
          $ref: "#/definitions/HypervVirtualMachine"
      x-go-package: "cohesity/iris/server/data/public"
    HypervRestoreParameters: 
      description: "This field defines the HyperV specific params for restore tasks of type\nkRecoverVMs."
      type: "object"
      title: "Specifies information needed when restoring VMs in HyperV enviroment."
      properties: 
        datastoreId: 
          description: "A datastore entity where the object's files should be restored to. This\nfield is optional if object is being restored to its original parent\nsource. If not specified, the object's files will be restored to their\noriginal datastore locations. This field is mandatory if object is being\nrestored to a different resource entity or to a different parent source."
          type: "integer"
          format: "int64"
          x-go-name: "DatastoreId"
        disableNetwork: 
          description: "Specifies whether the network should be left in disabled state.\nAttached network is enabled by default. Set this flag to true to\ndisable it."
          type: "boolean"
          x-go-name: "DisableNetwork"
        networkId: 
          description: "Specifies a network configuration to be attached to the cloned or\nrecovered object.\nFor kCloneVMs and kRecoverVMs tasks, original network configuration\nis detached if the cloned or recovered object is kept under a different\nparent Protection Source or a different Resource Pool.\nBy default, for kRecoverVMs task, original network configuration is\npreserved if the recovered object is kept under the same parent\nProtection Source and the same Resource Pool.\nSpecify this field to override the preserved network configuration or\nto attach a new network configuration to the cloned or recovered objects.\nYou can get the networkId of the kNetwork object by setting\nincludeNetworks to 'true' in the GET /public/protectionSources operation.\nIn the response, get the id of the desired kNetwork object, the resource\npool, and the registered parent Protection Source."
          type: "integer"
          format: "int64"
          x-go-name: "NetworkId"
        poweredOn: 
          description: "Specifies the power state of the cloned or recovered objects.\nBy default, the cloned or recovered objects are powered off."
          type: "boolean"
          x-go-name: "KeepPoweredOn"
        prefix: 
          description: "Specifies a prefix to prepended to the source object name to derive a\nnew name for the recovered or cloned object.\nBy default, cloned or recovered objects retain their original name.\nLength of this field is limited to 8 characters."
          type: "string"
          x-go-name: "Prefix"
        resourceId: 
          description: "The resource (HyperV host) to which the restored VM will be attached.\n\nThis field is optional for a kRecoverVMs task if the VMs are being\nrestored to its original parent source. If not specified, restored VMs\nwill be attached to its original host. This field is mandatory if the\nVMs are being restored to a different parent source."
          type: "integer"
          format: "int64"
          x-go-name: "ResourceId"
        suffix: 
          description: "Specifies a suffix to appended to the original source object name\nto derive a new name for the recovered or cloned object.\nBy default, cloned or recovered objects retain their original name.\nLength of this field is limited to 8 characters."
          type: "string"
          x-go-name: "Suffix"
      x-go-package: "cohesity/iris/server/data/public"
    HypervVirtualMachine: 
      description: "Specifies information about a VirtualMachine Object in HyperV environment."
      type: "object"
      title: "HyperV VirtualMachine Object."
      properties: 
        isHighlyAvailable: 
          description: "Specifies whether the VM is Highly Availabile or not."
          type: "boolean"
          x-go-name: "IsHighlyAvailable"
        version: 
          description: "Specifies the version of the VM. For example, 8.0, 5.0 etc."
          type: "string"
          x-go-name: "Version"
        vmBackupStatus: 
          description: "Specifies the status of the VM for backup purpose.\noverrideDescription: true\nSpecifies the backup status of a HyperV Virtual Machine object.\n'kSupported' indicates the agent on the VM can do backup.\n'kUnsupportedConfig' indicates the agent on the VM cannot do backup.\n'kMissing' indicates the VM is not found in SCVMM."
          type: "string"
          enum: 
            - "kSupported"
            - "kUnsupportedConfig"
            - "kMissing"
          x-go-name: "VmBackupStatus"
        vmBackupType: 
          description: "Specifies the type of backup supported by the VM.\noverrideDescription: true\nSpecifies the type of an HyperV datastore object.\n'kRctBackup' indicates backup is done using RCT/checkpoints.\n'kVssBackup' indicates backup is done using VSS."
          type: "string"
          enum: 
            - "kRctBackup"
            - "kVssBackup"
          x-go-name: "VmBackupType"
      x-go-package: "cohesity/iris/server/data/public"
    IdMappingInfo: 
      description: "Specifies the params required to update the user id mapping info of an\nActive Directory."
      type: "object"
      properties: 
        fallbackUserIdMappingInfo: 
          description: "Specifies the fallback id mapping info which is used when an ID mapping\nfor a user is not found via the above IdMappingInfo. Only supported for\ntwo types of fallback mapping types - 'kRid' and 'kFixed'."
          $ref: "#/definitions/UserIdMapping"
        unixRootSid: 
          description: "Specifies the SID of the Active Directory domain user to be mapped to\nUnix root user."
          type: "string"
          x-go-name: "UnixRootSid"
        userIdMappingInfo: 
          description: "Specifies the information about how the Unix and Windows users are mapped\nfor this domain."
          $ref: "#/definitions/UserIdMapping"
      x-go-package: "cohesity/iris/server/data/public"
    ImportConfigurations: 
      description: "This is the form of the request."
      type: "object"
      title: "ImportConfigurations struct used for ImportConfig endpoint."
      properties: 
        activeDirectories: 
          type: "array"
          title: "Selective import of active directories."
          items: 
            type: "string"
          x-go-name: "ActiveDirectories"
        all: 
          type: "array"
          title: "List of which entities to import all."
          items: 
            type: "string"
          x-go-name: "All"
        clusters: 
          type: "array"
          title: "Selective import certain cluster."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "Clusters"
        file: 
          description: "File is the config file."
          type: "string"
          x-go-name: "File"
        groups: 
          type: "array"
          title: "Selective import certain groups."
          items: 
            type: "string"
          x-go-name: "Groups"
        partitions: 
          type: "array"
          title: "Selective import of Partiton."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "Partitions"
        principalSources: 
          type: "array"
          title: "Selective import of principal sources."
          items: 
            type: "string"
          x-go-name: "PrincipalSources"
        protectionJobs: 
          type: "array"
          title: "Selective import of protection jobs."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "ProtectionJobs"
        protectionPolicies: 
          type: "array"
          title: "Selective import of protection policies."
          items: 
            type: "string"
          x-go-name: "ProtectionPolicies"
        protectionSources: 
          type: "array"
          title: "Selective import of protection sources."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "ProtectionSources"
        remoteClusters: 
          type: "array"
          title: "Selective import certain remote clusters."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "RemoteClusters"
        roles: 
          type: "array"
          title: "Selective import certain roles (by username)."
          items: 
            type: "string"
          x-go-name: "Roles"
        sql: 
          type: "array"
          title: "Selective import of sql."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "Sql"
        users: 
          type: "array"
          title: "Selective import certain users."
          items: 
            type: "string"
          x-go-name: "Users"
        vaults: 
          type: "array"
          title: "Selective import certain vaults."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "Vaults"
        viewBoxes: 
          type: "array"
          title: "Selective import certain Storage Domains (View Boxes)."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "ViewBoxes"
        views: 
          type: "array"
          title: "Selective import of views."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "Views"
      x-go-package: "cohesity/iris/server/data/public"
    IndexAndSnapshots: 
      description: "Specifies settings required to restore the index and Snapshots of\na Protection Job."
      type: "object"
      title: "Restore Protection Job Index and Snapshots."
      properties: 
        archiveTaskUid: 
          description: "Specifies a unique id of the Archive task that originally archived the\nobject to the Vault."
          type: "object"
          title: "Archive Task Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        endTimeUsecs: 
          description: "Specifies the end time as a Unix epoch Timestamp (in microseconds).\nIf set, only index and Snapshots for Protection Job Runs that\nstarted before the specified end time are restored."
          type: "integer"
          format: "int64"
          x-go-name: "EndTimeUsecs"
        remoteProtectionJobUid: 
          description: "Specifies a unique id assigned to the original Protection Job\nby the original Cluster that archived data to the remote Vault."
          type: "object"
          title: "Protection Job Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        startTimeUsecs: 
          description: "Specifies the start time as a Unix epoch Timestamp (in microseconds).\nIf set, only the index and Snapshots for Protection Job Runs that\nstarted after the specified start time are restored."
          type: "integer"
          format: "int64"
          x-go-name: "StartTimeUsecs"
        viewBoxId: 
          description: "Specifies the id of the local Storage Domain (View Box) where the index\nand the Snapshot will be restored to."
          type: "integer"
          format: "int64"
          x-go-name: "ViewBoxId"
      x-go-package: "cohesity/iris/server/data/public"
    IndexingPolicy: 
      description: "Specifies settings for indexing files found in an Object\n(such as a VM) so these files can be searched and recovered.\nThis also specifies inclusion and exclusion rules that determine\nthe directories to index."
      type: "object"
      title: "Indexing Policy."
      properties: 
        allowPrefixes: 
          description: "Specifies a list of directories to index."
          type: "array"
          title: "Array of Indexed Directories."
          items: 
            type: "string"
          x-go-name: "AllowPrefixes"
        denyPrefixes: 
          description: "Specifies a list of directories to exclude from indexing."
          type: "array"
          title: "Array of Excluded Directories."
          items: 
            type: "string"
          x-go-name: "DenyPrefixes"
        disableIndexing: 
          description: "Specifies if the files found in an Object (such as a VM) should be\nindexed. If false (the default), files are indexed."
          type: "boolean"
          x-go-name: "DisableIndexing"
      x-go-package: "cohesity/iris/server/data/public"
    InputSpec: 
      type: "object"
      title: "Input selector. Selects the files to map over."
      properties: 
        filesSelector: 
          $ref: "#/definitions/InputSpec_InputFilesSelector"
        onNfsFiles: 
          description: "Selects whether input is files inside vmdks or files on NFS. One of\nvm_selector or files_selector will be chosen based on this flag."
          type: "boolean"
          x-go-name: "OnNfsFiles"
        vmSelector: 
          $ref: "#/definitions/InputSpec_InputVMsSelector"
      x-go-package: "yoda/base/analytics.pb"
    InputSpec_FileTimeFilter: 
      description: "File time filter to filter files based on their last change time. All\nfiles whose change time is in the range [change_time_range_start_secs,\nchange_time_range_end_secs) will be processed. Both values are time\nduration in seconds w.r.t. to current time and not absolute points in\ntime."
      type: "object"
      properties: 
        changeTimeRangeEndSecs: 
          description: "End of file's change time range."
          type: "integer"
          format: "int64"
          x-go-name: "ChangeTimeRangeEndSecs"
        changeTimeRangeStartSecs: 
          description: "Start of file's change time range."
          type: "integer"
          format: "int64"
          x-go-name: "ChangeTimeRangeStartSecs"
      x-go-package: "yoda/base/analytics.pb"
    InputSpec_InputFilesSelector: 
      description: "If mapper is going to run over files on SnapFS, this selects the input\nfiles."
      type: "object"
      properties: 
        fileTimeFilter: 
          description: "File time filter for file's last change time."
          $ref: "#/definitions/InputSpec_FileTimeFilter"
        filenameGlob: 
          description: "Glob patterns to match on file. e.g. {*.txt, *.cc}"
          type: "array"
          items: 
            type: "string"
          x-go-name: "FilenameGlob"
        partitionId: 
          type: "integer"
          format: "int64"
          x-go-name: "PartitionId"
        rootDir: 
          description: "Within each volume, traversal will be rooted at this directory. A\ntypical value here might be /home"
          type: "string"
          x-go-name: "RootDir"
        viewBoxId: 
          type: "integer"
          format: "int64"
          x-go-name: "ViewBoxId"
        viewName: 
          type: "string"
          x-go-name: "ViewName"
      x-go-package: "yoda/base/analytics.pb"
    InputSpec_InputVMsSelector: 
      type: "object"
      properties: 
        fileTimeFilter: 
          description: "Time filter for file's last change time."
          $ref: "#/definitions/InputSpec_FileTimeFilter"
        filenameGlob: 
          description: "After VMDKs are selected as above, the files within them can be selected\nby using these predicates."
          type: "array"
          items: 
            type: "string"
          x-go-name: "FilenameGlob"
        jobIds: 
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "JobIds"
        maxSnapshotTimestamp: 
          description: "Exclusive end of snapshot_timestamp range. If missing, inf will be used\nas the timestamp range."
          type: "integer"
          format: "int64"
          x-go-name: "MaxSnapshotTimestamp"
        minSnapshotTimestamp: 
          description: "Inclusive. If missing, 0 will the default lower end of timestamp range"
          type: "integer"
          format: "int64"
          x-go-name: "MinSnapshotTimestamp"
        partitionIds: 
          type: "array"
          title: "Filters are AND of ORs."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "PartitionIds"
        processLatestOnly: 
          description: "Boolean flag to indicate if only latest snapshot of each object should\nbe processed."
          type: "boolean"
          x-go-name: "ProcessLatestOnly"
        rootDir: 
          description: "Within each volume, traversal will be rooted at this directory. A\ntypical value here might be /home"
          type: "string"
          x-go-name: "RootDir"
        sourceEntityIds: 
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "SourceEntityIds"
        viewBoxIds: 
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "ViewBoxIds"
        viewNames: 
          type: "array"
          items: 
            type: "string"
          x-go-name: "ViewNames"
      x-go-package: "yoda/base/analytics.pb"
    IopsTile: 
      type: "object"
      title: "IOPs information for dashboard."
      properties: 
        maxReadIops: 
          description: "Maximum Read IOs per second in last 24 hours."
          type: "integer"
          format: "int64"
          x-go-name: "MaxReadIops"
        maxWriteIops: 
          description: "Maximum number of Write IOs per second in last 24 hours."
          type: "integer"
          format: "int64"
          x-go-name: "MaxWriteIops"
        readIopsSamples: 
          description: "Read IOs per second samples taken for the past 24 hours at 10 minutes\ninterval given in descending order of time."
          type: "array"
          items: 
            $ref: "#/definitions/Sample"
          x-go-name: "ReadIopsSamples"
        writeIopsSamples: 
          description: "Write IOs per second samples taken for the past 24 hours at 10 minutes\ninterval given in descending order of time."
          type: "array"
          items: 
            $ref: "#/definitions/Sample"
          x-go-name: "WriteIopsSamples"
      x-go-package: "cohesity/iris/server/data/public"
    IscsiSanPort: 
      type: "object"
      title: "Specifies an iSCSI SAN Port."
      properties: 
        ipAddress: 
          description: "Specifies the IP address of the SAN port."
          type: "string"
          x-go-name: "IpAddress"
        iqn: 
          description: "Specifies the qualified name of the iSCSI port (IQN)."
          type: "string"
          x-go-name: "Iqn"
        tcpPort: 
          description: "Specifies the listening port(tcp) of the SAN port."
          type: "integer"
          format: "int32"
          x-go-name: "TcpPort"
      x-go-package: "cohesity/iris/server/data/public"
    JobRunsTile: 
      type: "object"
      title: "Jon Runs information."
      properties: 
        lastDayNumJobErrors: 
          description: "Number of Error runs in the last 24 hours."
          type: "integer"
          format: "int32"
          x-go-name: "LastDayNumJobErrors"
        lastDayNumJobRuns: 
          description: "Number of Job Runs in the last 24 hours."
          type: "integer"
          format: "int32"
          x-go-name: "LastDayNumJobRuns"
        lastDayNumJobSlaViolations: 
          description: "Number of SLA Violations in the last 24 hours."
          type: "integer"
          format: "int32"
          x-go-name: "LastDayNumJobSlaViolations"
        numJobRunning: 
          description: "Number of Jobs currently running."
          type: "integer"
          format: "int32"
          x-go-name: "NumJobRunning"
        objectsProtectedByPolicy: 
          type: "array"
          title: "Objects Protected By Policy."
          items: 
            $ref: "#/definitions/ObjectsProtectedByPolicy"
          x-go-name: "ObjectsProtectedByPolicy"
      x-go-package: "cohesity/iris/server/data/public"
    KeyValuePair: 
      description: "Specifies a key/value pair."
      type: "object"
      title: "Key Value Pair."
      properties: 
        key: 
          description: "Specifies the name of the key."
          type: "string"
          x-go-name: "Key"
        value: 
          description: "Specifies a value for the key."
          $ref: "#/definitions/Value"
      x-go-package: "stats/base/stats_types.pb"
    KillMapReduceInstanceResult: 
      type: "object"
      properties: 
        error: 
          description: "Status code of http rpc."
          $ref: "#/definitions/ErrorProto"
      x-go-package: "yoda/base/analytics.pb"
    KvmProtectionSource: 
      description: "Specifies a Protection Source in KVM environment."
      type: "object"
      title: "KVM Protection Source."
      properties: 
        agentError: 
          description: "Specifies a message when the agent cannot be reached."
          type: "string"
          x-go-name: "AgentError"
        agentId: 
          description: "Specifies the ID of the Agent with which this KVM entity is associated\nwhen the entity represents a Delegate host or KVM host."
          type: "integer"
          format: "int64"
          x-go-name: "AgentId"
        clusterId: 
          description: "Specifies the cluster ID for 'kCluster' objects."
          type: "string"
          x-go-name: "ClusterId"
        datacenterId: 
          description: "Specifies the ID of the 'kDatacenter' objects."
          type: "string"
          x-go-name: "DatacenterId"
        description: 
          description: "Specifies a description about the Protection Source."
          type: "string"
          x-go-name: "Description"
        name: 
          description: "Specifies the name of the KVM entity."
          type: "string"
          x-go-name: "Name"
        type: 
          description: "Specifies the type of KVM Protection Source entities such as\n'kDatacenter', 'kCluster', 'kVirtualMachine', etc.\nSpecifies the type of an KVM source entity.\n'kOVirtManager' indicates the root entity registerd with Cohesity cluster.\n'kStandaloneHost' indicates a host registered with Cohesity cluster.\n'kDatacenter' indicates a KVM datacenter managed by the OVirt manager.\n'kCluster' indicates a KVM cluster managed by the OVirt manager.\n'kHost' indicates a host within the KVM environment.\n'kVirtualMachine' indicates a virtual machine in the KVM enironment.\n'kNetwork' represents a network used by the virtual machine entity.\n'kStorageDomain' represents a storage domain in the KVM environment."
          type: "string"
          enum: 
            - "kOVirtManager"
            - "kStandaloneHost"
            - "kDatacenter"
            - "kCluster"
            - "kHost"
            - "kVirtualMachine"
            - "kNetwork"
            - "kStorageDomain"
          x-go-name: "Type"
        uuid: 
          description: "Specifies the UUID of the Object. This is unique within the KVM\nenvironment."
          type: "string"
          x-go-name: "Uuid"
      x-go-package: "cohesity/iris/server/data/public"
    LatencyThresholds: 
      description: "Specifies latency thresholds that trigger throttling for all datastores\nfound in the registered Protection Source or specific to one datastore."
      type: "object"
      properties: 
        activeTaskMsecs: 
          description: "If the latency of a datastore is above this value, existing backup tasks\nusing the datastore are throttled."
          type: "integer"
          format: "int64"
          x-go-name: "ActiveTaskMsecs"
        newTaskMsecs: 
          description: "If the latency of a datastore is above this value, then new backup tasks\nusing the datastore will not be started."
          type: "integer"
          format: "int64"
          x-go-name: "NewTaskMsecs"
      x-go-package: "cohesity/iris/server/data/public"
    ListCentrifyZone: 
      type: "object"
      properties: 
        centrifySchema: 
          description: "Specifies the schema of this Centrify zone.\nThe below list of schemas and their values are taken from the document\nCentrify Server Suite 2016 Windows API Programmer's Guide\nhttps://docs.centrify.com/en/css/suite2016/centrify-win-progguide.pdf\n'kCentrifyDynamicSchema_1_0' specifies dynamic schema, version 1.0.\n'kCentrifyDynamicSchema_2_0' specifies dynamic schema, version 2.0.\n'kCentrifyDynamicSchema_3_0' specifies dynamic schema, version 3.0.\n'kCentrifyDynamicSchema_5_0' specifies dynamic schema, version 5.0.\n'kCentrifySfu_3_0' specifies sfu schema, version 3.0.\n'kCentrifySfu_3_0_V5' specifies sfu schema, 3.0.5.\n'kCentrifySfu_4_0' specifies sfu schema, version 4.0.\n'kCentrifyCdcRfc2307' specifies cdcrfc2307 schema.\n'kCentrifyCdcRfc2307_2' specifies cdcrfc2307, version 2.\n'kCentrifyCdcRfc2307_3' specifies cdcrfc2307, version 3."
          type: "string"
          enum: 
            - "kCentrifyDynamicSchema_1_0"
            - "kCentrifyDynamicSchema_2_0"
            - "kCentrifySfu_3_0"
            - "kCentrifySfu_4_0"
            - "kCentrifyCdcRfc2307"
            - "kCentrifyDynamicSchema_3_0"
            - "kCentrifyCdcRfc2307_2"
            - "kCentrifyDynamicSchema_5_0"
            - "kCentrifyCdcRfc2307_3"
            - "kCentrifySfu_3_0_V5"
          x-go-name: "CentrifySchema"
        description: 
          description: "Specifies a description of the Centrify zone."
          type: "string"
          x-go-name: "Description"
        distinguishedName: 
          description: "Specifies the distinguished name of the Centrify zone."
          type: "string"
          x-go-name: "DistinguishedName"
        zoneName: 
          description: "Specifies the zone name."
          type: "string"
          x-go-name: "ZoneName"
      x-go-package: "cohesity/iris/server/data/public"
    LogicalStats: 
      description: "Provides logical statistics for logical entities such as Clusters\nand Domains (View Boxes).\nThe logical size is the size of the data when it is fully hydrated or\nexpanded.\nThe actual physical data stored on the Cohesity Cluster is\nreduced by change-block tracking, compression and deduplication."
      type: "object"
      title: "Logical Statistics"
      properties: 
        totalLogicalUsageBytes: 
          description: "Provides the logical usage as computed by the Cohesity Cluster.\nThe size of the data without reduction by change-block tracking,\ncompression and deduplication."
          type: "integer"
          format: "int64"
          x-go-name: "TotalLogicalUsageBytes"
      x-go-package: "cohesity/iris/server/data/public"
    LogicalVolume: 
      type: "object"
      title: "Specifies attributes for a kLVM (Linux) or kLDM (Windows) filesystem."
      properties: 
        deviceRootNode: 
          description: "Specifies the device tree defining how to combine partitions to create\nthis logical volume."
          $ref: "#/definitions/DeviceTree"
        groupName: 
          description: "Specifies the group name of the logical volume."
          type: "string"
          x-go-name: "GroupName"
        groupUuid: 
          description: "Specifies the group uuid of the logical volume."
          type: "string"
          x-go-name: "GroupUuid"
        name: 
          description: "Specifies the name of the logical volume."
          type: "string"
          x-go-name: "Name"
        uuid: 
          description: "Specifies the uuid of the logical volume."
          type: "string"
          x-go-name: "Uuid"
      x-go-package: "cohesity/iris/server/data/public"
    MapReduceInfo: 
      description: "On UI this will be used to show the list of available apps to the user."
      type: "object"
      title: "This will be used to encapsulate information about mapper and reducer only."
      properties: 
        description: 
          description: "Map reduce job description."
          type: "string"
          x-go-name: "Description"
        excludedDataSourceVec: 
          type: "array"
          title: "List of all excluded data sources for this app."
          items: 
            type: "integer"
            format: "int32"
          x-go-name: "ExcludedDataSourceVec"
        id: 
          description: "ID of map reduce job."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        isSystemDefined: 
          description: "Flag to denote if this is system pre-defined app or user has written this\napp."
          type: "boolean"
          x-go-name: "IsSystemDefined"
        mapperId: 
          description: "ID of the mapper to process the input."
          type: "integer"
          format: "int64"
          x-go-name: "MapperId"
        name: 
          description: "Map reduce job name."
          type: "string"
          x-go-name: "Name"
        reducerId: 
          description: "ID of the reducer."
          type: "integer"
          format: "int64"
          x-go-name: "ReducerId"
        requiredPropertyVec: 
          type: "array"
          items: 
            $ref: "#/definitions/MapReduceInfo_RequiredProperty"
          x-go-name: "RequiredPropertyVec"
      x-go-package: "yoda/base/analytics.pb"
    MapReduceInfo_RequiredProperty: 
      description: "A required property represents a property that user must set before\ninvoking a mapreduction instance. e.g., SimpleGrepMapper will require a\nproperty named searchPattern to be set."
      type: "object"
      properties: 
        defaultValue: 
          description: "Default Value of the property."
          type: "string"
          x-go-name: "DefaultValue"
        description: 
          description: "Description of this property"
          type: "string"
          x-go-name: "Description"
        isRequired: 
          description: "Whether the property is required or optional."
          type: "boolean"
          x-go-name: "IsRequired"
        name: 
          description: "Name of the property."
          type: "string"
          x-go-name: "Name"
      x-go-package: "yoda/base/analytics.pb"
    MapReduceInstance: 
      type: "object"
      title: "Information about a Map reduce instance. An instance can be run only once."
      properties: 
        id: 
          description: "System generated ID of map reduce instance."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        inputParams: 
          type: "array"
          items: 
            $ref: "#/definitions/MapReduceInstance_InputParam"
          x-go-name: "InputParams"
        inputSpec: 
          description: "Input spec for the MR."
          $ref: "#/definitions/InputSpec"
        mapReduceInfoId: 
          description: "ID of Map reduce info."
          type: "integer"
          format: "int64"
          x-go-name: "MapReduceInfoId"
        outputSpec: 
          description: "Output spec for the MR."
          $ref: "#/definitions/OutputSpec"
        runInfo: 
          description: "Information about run of this instance. All fields of RunInfo will be\npopulated by yoda/analytics components."
          $ref: "#/definitions/MapReduceInstance_RunInfo"
      x-go-package: "yoda/base/analytics.pb"
    MapReduceInstanceWrapper: 
      description: "MapReduceInstanceWrapper is the struct containing the map reduce instance\ninformation along with the output file path information required to download\nthe results set."
      type: "object"
      properties: 
        logPath: 
          description: "LogPath is the path of the log files for the MR instance run."
          type: "string"
          x-go-name: "LogPath"
        mrInstance: 
          description: "InstanceInfo is the information about the map reduce application instance."
          $ref: "#/definitions/MapReduceInstance"
        outputFilePathList: 
          description: "OutputFilePathList is the list containing the output files path suffix\nthat Yoda uses to build the full path of the MR instance run output files."
          type: "array"
          items: 
            type: "string"
          x-go-name: "OutputFilePathList"
      x-go-package: "cohesity/iris/server/data/public"
    MapReduceInstance_InputParam: 
      description: "User can also pass Input params to run a map reduce. E.g. a grep MR\nwill need input about what to grep."
      type: "object"
      properties: 
        key: 
          type: "string"
          x-go-name: "Key"
        value: 
          type: "string"
          x-go-name: "Value"
      x-go-package: "yoda/base/analytics.pb"
    MapReduceInstance_RunInfo: 
      type: "object"
      title: "Stores the progress of run of this instance."
      properties: 
        endTime: 
          description: "Time when map redcue job completed."
          type: "integer"
          format: "int64"
          x-go-name: "EndTime"
        errorMessage: 
          description: "If this run failed, then error message for failure."
          type: "string"
          x-go-name: "ErrorMessage"
        executionStartTimeUsecs: 
          description: "Time (in usecs) when job was picked up for execution."
          type: "integer"
          format: "int64"
          x-go-name: "ExecutionStartTimeUsecs"
        filesProcessed: 
          description: "Number of files processed in this run."
          type: "integer"
          format: "int32"
          x-go-name: "FilesProcessed"
        mapDoneTimeUsecs: 
          description: "Time (in usecs) when map tasks were done."
          type: "integer"
          format: "int64"
          x-go-name: "MapDoneTimeUsecs"
        mapInputBytes: 
          description: "Total size of data processed by this run in bytes."
          type: "integer"
          format: "int64"
          x-go-name: "MapInputBytes"
        mappersSpawned: 
          description: "Number of mappers spawned till now."
          type: "integer"
          format: "int32"
          x-go-name: "MappersSpawned"
        numMapOutputs: 
          description: "Number of outputs from mappers."
          type: "integer"
          format: "int64"
          x-go-name: "NumMapOutputs"
        numReduceOutputs: 
          description: "Number of outputs from reducers."
          type: "integer"
          format: "int64"
          x-go-name: "NumReduceOutputs"
        percentageCompletion: 
          description: "Percentage completion of this run so far."
          type: "number"
          format: "float"
          x-go-name: "PercentageCompletion"
        percentageMapperCompletion: 
          description: "Percentage of mapper phase completed."
          type: "number"
          format: "float"
          x-go-name: "PercentageMapperCompletion"
        percentageReducerCompletion: 
          description: "Percentage of reducer phase completed."
          type: "number"
          format: "float"
          x-go-name: "PercentageReducerCompletion"
        reducersSpawned: 
          description: "Number of reducers spawned till now."
          type: "integer"
          format: "int32"
          x-go-name: "ReducersSpawned"
        remainingTimeMins: 
          description: "Expected remaining time in minutes for completion of this run."
          type: "integer"
          format: "int32"
          x-go-name: "RemainingTimeMins"
        startTime: 
          description: "Time when map reduce job was started by user."
          type: "integer"
          format: "int64"
          x-go-name: "StartTime"
        status: 
          description: "Status of this run."
          type: "integer"
          format: "int32"
          x-go-name: "Status"
        totalNumMappers: 
          description: "Total number of mappers to be spawned."
          type: "integer"
          format: "int32"
          x-go-name: "TotalNumMappers"
        totalNumReducers: 
          description: "Total number of reducers to be spawned."
          type: "integer"
          format: "int32"
          x-go-name: "TotalNumReducers"
      x-go-package: "yoda/base/analytics.pb"
    MapperInfo: 
      type: "object"
      title: "Information about a mapper."
      properties: 
        code: 
          description: "The code of the mapper in the specified language. Should be UTF-8."
          type: "string"
          x-go-name: "Code"
        id: 
          description: "Mapper ID generated by system. Absent when user is creating a new mapper.\nMandatory in all other use cases."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        isSystemDefined: 
          description: "Whether the mapper is system defined."
          type: "boolean"
          x-go-name: "IsSystemDefined"
        jarName: 
          description: "User can write their own mapper/reducer or upload jar files containing\nmappers and reducers. If this mapper was part of a jar file, then this\nfield will have the JAR name."
          type: "string"
          x-go-name: "JarName"
        jarPath: 
          description: "path of JAR in which this mapper was found. This is applicable only when\nthis mapper was uploaded via JAR.\nTODO(apurv): This is not immune to viewbox name change. Please write a\nproto to capture paths that are immune to this."
          type: "string"
          x-go-name: "JarPath"
        language: 
          description: "Language of the mapper."
          type: "integer"
          format: "int32"
          x-go-name: "Language"
        name: 
          description: "Name of the mapper."
          type: "string"
          x-go-name: "Name"
      x-go-package: "yoda/base/analytics.pb"
    MappersWrapper: 
      type: "object"
      title: "MappersWrapper is the struct to define the list of mappers."
      properties: 
        mappers: 
          type: "array"
          title: "Mappers specifies the list of available mappers in analytics workbench."
          items: 
            $ref: "#/definitions/MapperInfo"
          x-go-name: "Mappers"
      x-go-package: "cohesity/iris/server/data/public"
    MetricDataBlock: 
      type: "object"
      title: "Specifies a series of metric data points for a time series."
      properties: 
        dataPointVec: 
          description: "Specifies a list of metric data points for a time series."
          type: "array"
          title: "Array of Data Points."
          items: 
            $ref: "#/definitions/MetricDataPoint"
          x-go-name: "DataPointVec"
        metricName: 
          description: "Specifies the name of a metric such as 'kDiskAwaitTimeMsecs'."
          type: "string"
          x-go-name: "MetricName"
        type: 
          description: "Specifies the data type of the data points.\n0 specifies a data point of type Int64.\n1 specifies a data point of type Double.\n2 specifies a data point of type String.\n3 specifies a data point of type Bytes."
          type: "integer"
          format: "int32"
          x-go-name: "Type"
      x-go-package: "stats/base/stats.pb"
    MetricDataPoint: 
      description: "Specifies information about a single data point in a time series."
      type: "object"
      title: "Metric Data Point."
      properties: 
        data: 
          description: "Corresponding value of a metric at the given timestamp. When client\nadds or pushes the stats, this field must be specified. When Stats module,\nreturns the time series data, this field could be empty if data point is\nnot available for the given timestamp."
          $ref: "#/definitions/Value_Data"
        timestampMsecs: 
          description: "Specifies a timestamp when the metric data point was captured."
          type: "integer"
          format: "int64"
          x-go-name: "TimestampMsecs"
      x-go-package: "stats/base/stats.pb"
    MetricValue: 
      description: "Specifies one data point of a metric."
      type: "object"
      title: "Metric Value."
      properties: 
        metricName: 
          description: "Specifies the metric name."
          type: "string"
          x-go-name: "MetricName"
        timestampMsecs: 
          description: "Specifies the creation time of a data point as a Unix epoch Timestamp\n(in milliseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "TimestampMsecs"
        value: 
          description: "Specifies the value of the data point."
          $ref: "#/definitions/Value"
      x-go-package: "stats/base/stats.pb"
    MonthlySchedule: 
      description: "Specifies a monthly backup schedule by specifying a day in the week\nand a week in the month.\nFor example, if day is set to 'kMonday' and dayCount is set\nto 'kThird', a Job Run is started on the third Monday of every month."
      type: "object"
      title: "Monthly Schedule."
      properties: 
        day: 
          description: "Specifies the day of the week (such as 'kMonday') to start the Job Run.\nUsed with day count to define the day in the month to start\nthe Job Run.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
          type: "string"
          enum: 
            - "kSunday"
            - "kMonday"
            - "kTuesday"
            - "kWednesday"
            - "kThursday"
            - "kFriday"
            - "kSaturday"
          x-go-name: "Day"
        dayCount: 
          description: "Specifies the day count in the month (such as 'kThird') to start\nthe Job Run.\nUsed in combination with day to define the day in the month to start\nthe Job Run.\nSpecifies the day count in the month to start the backup.\nFor example if day count is set to 'kThird' and day is set to 'kMonday',\na backup is performed on the third Monday of every month."
          type: "string"
          enum: 
            - "kFirst"
            - "kSecond"
            - "kThird"
            - "kFourth"
            - "kLast"
          x-go-name: "DayCount"
      x-go-package: "cohesity/iris/server/data/public"
    MountVolumeResult: 
      description: "Specifies the result of mounting an individual mount volume in a\nRestore Task."
      type: "object"
      title: "Mount Volume Result."
      properties: 
        mountError: 
          description: "Specifies the cause of the mount failure if the mounting of a\nvolume failed."
          type: "object"
          title: "Error"
          properties: 
            errorCode: 
              description: "Operation response error code."
              type: "integer"
              format: "int64"
              x-go-name: "ErrorCode"
            message: 
              description: "Description of the error."
              type: "string"
              x-go-name: "Message"
        mountPoint: 
          description: "Specifies the mount point where the volume is mounted.\nNOTE: This field may not be populated for VM environments if the\nonlining of disks is not requested or there was any issue during onlining."
          type: "string"
          x-go-name: "MountPoint"
        volumeName: 
          description: "Specifies the name of the original volume."
          type: "string"
          x-go-name: "VolumeName"
      x-go-package: "cohesity/iris/server/data/public"
    MountVolumesParameters: 
      description: "Specifies the information required for mounting volumes.\nOnly required for Restore Tasks of type 'kMountVolumes'.\nAt a minimum, the targetSourceId must be specified for 'kMountVolumes'\nRestore Tasks. If only targetSourceId is specified, all disks are\nattached but may not be mounted.\nThe mount target must be registered on the Cohesity Cluster.\nIf the mount target is a VM, VMware Tools must be installed.\nIf the mount target is a physical server, a Cohesity Agent must be\nbe installed. See the Cohesity Dashboard help documentation for details.\nIn the username and password fields, specify the credentials to\naccess the mount target."
      type: "object"
      title: "Mounting Volumes."
      properties: 
        bringDisksOnline: 
          description: "Optional setting that determines if the volumes are brought\nonline on the mount target after attaching the disks.\nThis field is only set for VMs. The Cohesity Cluster always\nattempts to mount Physical servers.\nIf true and the mount target is a VM, to mount the volumes\nVMware Tools must be installed on the guest operating system of the VM\nand login credentials to the mount target must be specified.\nNOTE: If automount is configured for a Windows system, the\nvolumes may be automatically brought online."
          type: "boolean"
          x-go-name: "BringDisksOnline"
        password: 
          description: "Specifies password of the username to access the target source."
          type: "string"
          x-go-name: "Password"
        targetSourceId: 
          description: "Specifies the target Protection Source id where the volumes will be\nmounted.\nNOTE: The source that was backed up and the mount target must be the\nsame type, for example if the source is a VMware VM, then the mount\ntarget must also be a VMware VM.\nThe mount target must be registered on the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "TargetSourceId"
        username: 
          description: "Specifies username to access the target source."
          type: "string"
          x-go-name: "Username"
        volumeNames: 
          description: "Optionally specify the names of volumes to mount.\nIf none are specified, all volumes of the Server are mounted on the\ntarget. To get the names of the volumes, call the\nGET /public/restore/vms/volumesInformation operation."
          type: "array"
          title: "Array of Volume Names."
          items: 
            type: "string"
          x-go-name: "VolumeNames"
      x-go-package: "cohesity/iris/server/data/public"
    MountVolumesState: 
      description: "Specifies the states of mounting all the volumes onto a mount target\nfor a 'kRecoverVMs' Restore Task."
      type: "object"
      title: "Mount Volumes States."
      properties: 
        bringDisksOnline: 
          description: "Optional setting that determines if the volumes are brought\nonline on the mount target after attaching the disks.\nThis option is only significant for VMs."
          type: "boolean"
          x-go-name: "BringDisksOnline"
        mountVolumeResults: 
          description: "Specifies the results of mounting each specified volume."
          type: "array"
          title: "Array of Mount Volume Results."
          items: 
            $ref: "#/definitions/MountVolumeResult"
          x-go-name: "MountVolumeResults"
        otherError: 
          description: "Specifies an error that did not occur during the mount operation."
          type: "object"
          title: "Non-mount Error."
          properties: 
            errorCode: 
              description: "Operation response error code."
              type: "integer"
              format: "int64"
              x-go-name: "ErrorCode"
            message: 
              description: "Description of the error."
              type: "string"
              x-go-name: "Message"
        targetSourceId: 
          description: "Specifies the target Protection Source Id where the volumes will be\nmounted.\nNOTE: The source that was backed up and the mount target must be the\nsame type, for example if the source is a VMware VM, then the mount\ntarget must also be a VMware VM.\nThe mount target must be registered on the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "TargetSourceId"
        username: 
          description: "Specifies the username to access the mount target."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    NasCredentials: 
      description: "Specifies the server credentials to connect to a NetApp server."
      type: "object"
      title: "NAS Server Credentials."
      properties: 
        host: 
          description: "Specifies the hostname or IP address of the NAS server."
          type: "string"
          x-go-name: "Host"
        mountPath: 
          description: "Specifies the mount path to the NAS server."
          type: "string"
          x-go-name: "MountPath"
        password: 
          description: "If using the CIFS protocol and a Username was specified, specify\nthe password for the username."
          type: "string"
          x-go-name: "Password"
        shareType: 
          description: "Specifies the sharing protocol type used to mount the file system.\nCurrently, only NFS is supported.\n'kNFS' indicates use the NFS protocol to mount the file system.\n'kCIFS' indicates use the CIFS protocol to mount the file system."
          type: "string"
          enum: 
            - "kNFS"
            - "kCIFS"
          x-go-name: "ShareType"
        username: 
          description: "If using the CIFS protocol, you can optional specify a username\nto use when mounting."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    NasEnvJobParameters: 
      description: "Specifies job parameters applicable for all 'kGenericNas' Environment type\nProtection Sources in a Protection Job."
      type: "object"
      title: "Protection Job parameters applicable to 'kGenericNas' Environment type."
      properties: 
        continueOnError: 
          description: "Specifies if the backup should continue on with other Protection Sources\neven if the backup operation of some Protection Source fails. If true,\nthe Cohesity Cluster ignores the errors and continues with remaining\nProtection Sources in the job. If false, the backup operation stops when\nan error occurs. This does not apply to non-snapshot based generic NAS\nbackup jobs. If not set, default value is true."
          type: "boolean"
          x-go-name: "ContinueOnError"
        filePathFilters: 
          description: "Specifies filters on the backup objects like files and directories.\nSpecifying filters decide which objects within a source should be backed\nup. If this field is not specified, then all of the objects within the\nsource will be backed up."
          $ref: "#/definitions/FilePathFilter"
        nasProtocol: 
          description: "Specifies the preferred protocol to use for backup. This does not\napply to generic NAS and will be ignored.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
          type: "string"
          enum: 
            - "kNfs3"
            - "kCifs1"
          x-go-name: "NasProtocol"
      x-go-package: "cohesity/iris/server/data/public"
    NasMountCredentials: 
      description: "Specifies the credentials to mount a volume on a NetApp server."
      type: "object"
      title: "NAS Mount Credentials."
      properties: 
        domain: 
          description: "Specifies the domain in which this credential is valid."
          type: "string"
          x-go-name: "Domain"
        nasProtocol: 
          description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
          type: "string"
          enum: 
            - "kNfs3"
            - "kCifs1"
          x-go-name: "NasProtocol"
        password: 
          description: "Specifies the password for the username to use for mounting the NAS."
          type: "string"
          x-go-name: "Password"
        username: 
          description: "Specifies a username to use for mounting the NAS."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    NasProtectionSource: 
      description: "Specifies a Protection Source in a Generic NAS environment."
      type: "object"
      title: "Generic NAS Protection Source."
      properties: 
        description: 
          description: "Specifies a description about the Protection Source."
          type: "string"
          x-go-name: "Description"
        mountPath: 
          description: "Specifies the mount path of this NAS. For example, for a NFS mount point,\nthis should be in the format of IP or hostname:/foo/bar."
          type: "string"
          x-go-name: "MountPath"
        name: 
          description: "Specifies the name of the NetApp Object."
          type: "string"
          x-go-name: "Name"
        protocol: 
          description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
          type: "string"
          enum: 
            - "kNfs3"
            - "kCifs1"
          x-go-name: "Protocol"
        type: 
          description: "Specifies the type of a Protection Source Object in a generic NAS Source\nsuch as 'kGroup', or 'kHost'.\nSpecifies the kind of NAS mount.\n'kGroup' indicates top level node that holds individual NAS hosts.\n'kHost' indicates a single NAS path that can be mounted."
          type: "string"
          enum: 
            - "kGroup"
            - "kHost"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    NetappClusterInfo: 
      description: "Specifies information about a NetApp Cluster Protection Source."
      type: "object"
      title: "NetApp Cluster Information."
      properties: 
        contactInfo: 
          description: "Specifies information about the contact for the NetApp cluster\nsuch as a name, phone number, and email address."
          type: "string"
          x-go-name: "ContactInfo"
        location: 
          description: "Specifies where this NetApp cluster is located.\nThis location identification string is configured by the\nNetApp system administrator.\nThis field does not contain the NetApp cluster\nhostname or IP address."
          type: "string"
          x-go-name: "Location"
        serialNumber: 
          description: "Specifies the serial number of the NetApp cluster in the\nformat: x-xx-xxxxxx."
          type: "string"
          x-go-name: "SerialNumber"
      x-go-package: "cohesity/iris/server/data/public"
    NetappProtectionSource: 
      description: "Specifies a Protection Source in a NetApp environment."
      type: "object"
      title: "NetApp Protection Source."
      properties: 
        clusterInfo: 
          description: "Specifies information about a NetApp cluster and is only valid for a\nNetApp Object of type kCluster."
          $ref: "#/definitions/NetappClusterInfo"
        isTopLevel: 
          description: "Specifies if this Object is a top level Object.\nBecause a top level Object can either be a NetApp cluster or a Vserver,\nthis cannot be determined only by type."
          type: "boolean"
          x-go-name: "IsTopLevel"
        name: 
          description: "Specifies the name of the NetApp Object."
          type: "string"
          x-go-name: "Name"
        type: 
          description: "Specifies the type of managed NetApp Object in a NetApp Protection Source\nsuch as 'kCluster', 'kVserver' or 'kVolume'."
          type: "string"
          enum: 
            - "kCluster"
            - "kVserver"
            - "kVolume"
          x-go-name: "Type"
        uuid: 
          description: "Specifies the globally unique ID of this Object assigned by the\nNetApp server."
          type: "string"
          x-go-name: "Uuid"
        volumeInfo: 
          description: "Specifies information about a NetApp volume and is only valid for a\nNetApp Object of type kVolume."
          $ref: "#/definitions/NetappVolumeInfo"
        vserverInfo: 
          description: "Specifies information about a NetApp Vserver and is only valid for a\nNetApp Object of type kVserver."
          $ref: "#/definitions/NetappVserverInfo"
      x-go-package: "cohesity/iris/server/data/public"
    NetappVolumeInfo: 
      description: "Specifies information about a volume in a NetApp cluster."
      type: "object"
      title: "NetApp Volume Information."
      properties: 
        aggregateName: 
          description: "Specifies the containing aggregate name of this volume."
          type: "string"
          x-go-name: "AggregateName"
        capacityBytes: 
          description: "Specifies the total capacity in bytes of this volume."
          type: "integer"
          format: "int64"
          x-go-name: "CapacityBytes"
        cifsShares: 
          description: "Specifies the set of CIFS Shares exported for this volume."
          type: "array"
          title: "Array of CIFS Shares."
          items: 
            $ref: "#/definitions/CifsShareInfo"
          x-go-name: "CifsShares"
        creationTimeUsecs: 
          description: "Specifies the creation time of the volume specified in Unix epoch time\n(in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "CreationTimeUsecs"
        dataProtocols: 
          description: "Specifies the set of data protocols supported by this volume.\n'kNfs' indicates NFS connections.\n'kCifs' indicates SMB (CIFS) connections.\n'kIscsi' indicates iSCSI connections.\n'kFc' indicates Fiber Channel connections.\n'kFcache' indicates Flex Cache connections.\n'kHttp' indicates HTTP connections.\n'kNdmp' indicates NDMP connections.\n'kManagement' indicates non-data connections used for management purposes."
          type: "array"
          title: "Array of Data Protocols."
          items: 
            type: "string"
            enum: 
              - "kNfs"
              - "kCifs"
              - "kIscsi"
              - "kFc"
              - "kFcache"
              - "kHttp"
              - "kNdmp"
              - "kManagement"
          x-go-name: "DataProtocols"
        exportPolicyName: 
          description: "Specifies the name of the export policy (which defines the access\npermissions for the mount client) that has been assigned to this volume."
          type: "string"
          x-go-name: "ExportPolicyName"
        junctionPath: 
          description: "Specifies the junction path of this volume.\nThis path can be used to mount this volume via protocols such as NFS."
          type: "string"
          x-go-name: "JunctionPath"
        name: 
          description: "Specifies the name of the NetApp Vserver that this volume belongs to."
          type: "string"
          x-go-name: "Name"
        securityInfo: 
          description: "Specifies the security information of this volume."
          $ref: "#/definitions/VolumeSecurityInfo"
        state: 
          description: "Specifies the state of this volume.\nSpecifies the state of a NetApp Volume.\n'kOnline' indicates the volume is online. Read and write access to this\nvolume is allowed.\n'kRestricted' indicates the volume is restricted. Some operations,\nsuch as parity reconstruction, are allowed, but data access is not\nallowed.\n'kOffline' indicates the volume is offline. No access to the volume is\nallowed.\n'kMixed' indicates the volume is in mixed state, which means its\naggregates are not all in the same state.\n'kUnknownState' indicates the volume is in an unknown state."
          type: "string"
          enum: 
            - "kReadWrite"
            - "kLoadSharing"
            - "kDataProtection"
            - "kDataCache"
            - "kTmp"
            - "kUnknownType"
          x-go-name: "State"
        type: 
          description: "Specifies the NetApp type of this volume.\nSpecifies the type of a NetApp Volume.\n'kReadWrite' indicates read-write volume.\n'kLoadSharing' indicates load-sharing volume.\n'kDataProtection' indicates data-protection volume.\n'kDataCache' indicates data-cache volume.\n'kTmp' indicates temporaray purpose.\n'kUnknownType' indicates unknown type."
          type: "string"
          enum: 
            - "kReadWrite"
            - "kLoadSharing"
            - "kDataProtection"
            - "kDataCache"
            - "kTmp"
            - "kUnknownType"
          x-go-name: "Type"
        usedBytes: 
          description: "Specifies the total space (in bytes) used in this volume."
          type: "integer"
          format: "int64"
          x-go-name: "UsedBytes"
      x-go-package: "cohesity/iris/server/data/public"
    NetappVserverInfo: 
      description: "Specifies information about a NetApp Vserver in a NetApp Protection Source."
      type: "object"
      title: "NetApp Vserver Information."
      properties: 
        dataProtocols: 
          description: "Specifies the set of data protocols supported by this Vserver.\nThe kManagement protocol is not supported for this case.\n'kNfs' indicates NFS connections.\n'kCifs' indicates SMB (CIFS) connections.\n'kIscsi' indicates iSCSI connections.\n'kFc' indicates Fiber Channel connections.\n'kFcache' indicates Flex Cache connections.\n'kHttp' indicates HTTP connections.\n'kNdmp' indicates NDMP connections.\n'kManagement' indicates non-data connections used for management purposes."
          type: "array"
          title: "Array of Data Protocols."
          items: 
            type: "string"
            enum: 
              - "kNfs"
              - "kCifs"
              - "kIscsi"
              - "kFc"
              - "kFcache"
              - "kHttp"
              - "kNdmp"
              - "kManagement"
          x-go-name: "DataProtocols"
        interfaces: 
          description: "Specifies information about all interfaces on this Vserver."
          type: "array"
          title: "Array of Interfaces."
          items: 
            $ref: "#/definitions/VserverNetworkInterface"
          x-go-name: "Interfaces"
        rootCifsShare: 
          description: "Specifies the root 'c$' CIFS share of this Vserver.\nIf it exists, it can be used to mount all CIFS volumes that are\njunctioned under '/' on this Vserver."
          $ref: "#/definitions/CifsShareInfo"
        type: 
          description: "Specifies the type of this Vserver.\nSpecifies the type of the NetApp Vserver.\n'kData' indicates the Vserver is used for data backup and restore.\n'kAdmin' indicates the Vserver is used for cluster-wide management.\n'kSystem' indicates the Vserver is used for cluster-scoped communications\nin an IPspace.\n'kNode' indicates the Vserver is used as the physical controller.\n'kUnknown' indicates the Vserver is used for an unknown purpose."
          type: "string"
          enum: 
            - "kData"
            - "kAdmin"
            - "kSystem"
            - "kNode"
            - "kUnknown"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    NewS3SecretAccessKey: 
      type: "object"
      properties: 
        newKey: 
          type: "string"
          x-go-name: "NewKey"
      x-go-package: "cohesity/iris/server/data/public"
    Node: 
      type: "object"
      title: "Node is the struct for a Node."
      properties: 
        capacityByTier: 
          type: "array"
          title: "CapacityByTier describes the capacity of each storage tier."
          items: 
            $ref: "#/definitions/CapacityByTier"
          x-go-name: "CapacityByTier"
        chassisInfo: 
          description: "ChassisInfo describes the information for the chassis of the node."
          $ref: "#/definitions/ChassisInfo"
        clusterPartitionId: 
          description: "ClusterPartitionId is the Id of the cluster partition to which\nthe Node belongs."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterPartitionId"
        clusterPartitionName: 
          description: "ClusterPartitionName is the name of the cluster to which the Node\nbelongs."
          type: "string"
          x-go-name: "ClusterPartitionName"
        diskCount: 
          description: "DiskCount is the number of disks in a node."
          type: "integer"
          format: "int64"
          x-go-name: "DiskCount"
        id: 
          description: "Id is the Id of the Node."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        ip: 
          description: "Ip is the IP address of the Node."
          type: "string"
          x-go-name: "Ip"
        isMarkedForRemoval: 
          description: "IsMarkedForRemoval specifies whether the node has been marked for\nremoval."
          type: "boolean"
          x-go-name: "IsMarkedForRemoval"
        maxPhysicalCapacityBytes: 
          description: "MaxPhysicalCapacityBytes specifies the maximum physical capacity of the\nnode in bytes."
          type: "integer"
          format: "int64"
          x-go-name: "MaxPhysicalCapacityBytes"
        nodeHardwareInfo: 
          description: "HardwareInfo describes the hardware of the node."
          $ref: "#/definitions/NodeHardwareInfo"
        nodeIncarnationId: 
          description: "NodeIncarnationId is the incarnation id  of this node. The incarnation\nid is changed every time the data is wiped from the node. Various\nservices on a node is only run if incarnation id of the node matches the\nincarnation id of the cluster. Whenever a mismatch is detected, Nexus\nwill stop all services and clean the data from the node. After clean\noperation is completed, Nexus will set the node incarnation id to\ncluster incarnation id and start the services."
          type: "integer"
          format: "int64"
          x-go-name: "NodeIncarnationId"
        nodeSoftwareVersion: 
          description: "NodeSoftwareVersion is the current version of Cohesity software installed\non a node."
          type: "string"
          x-go-name: "NodeSoftwareVersion"
        offlineMountPathsOfDisks: 
          description: "OfflineMountPathsOfDisks provides the corresponding mount paths for\ndirect attached disks that are currently offline - access to these were\ndetected to hang sometime in the past. After these disks have been fixed,\ntheir mount paths needs to be removed from the following list before\nthese will be accessed again."
          type: "array"
          items: 
            type: "string"
          x-go-name: "OfflineMountPathsOfDisks"
        removalState: 
          description: "RemovalState specifies the removal state of the node.\n'kDontRemove' means the state of object is functional and\nit is not being removed.\n'kMarkedForRemoval' means the object is being removed.\n'kOkToRemove' means the object has been removed on the Cohesity Cluster and\nif the object is physical, it can be removed from the Cohesity Cluster."
          type: "string"
          enum: 
            - "kDontRemove"
            - "kMarkedForRemoval"
            - "kOkToRemove"
          x-go-name: "RemovalState"
        stats: 
          description: "Stats describes the node stats."
          $ref: "#/definitions/NodeStats"
        systemDisks: 
          type: "array"
          title: "SystemDisk describes the node system disks."
          items: 
            $ref: "#/definitions/NodeSystemDiskInfo"
          x-go-name: "SystemDisks"
      x-go-package: "cohesity/iris/server/data/public"
    NodeHardwareInfo: 
      type: "object"
      title: "NodeHardwareInfo provides the information regarding the hardware."
      properties: 
        cpu: 
          description: "Cpu provides the information regarding the CPU."
          type: "string"
          x-go-name: "Cpu"
        memorySizeBytes: 
          description: "MemorySizeBytes provides the memory size in bytes."
          type: "integer"
          format: "int64"
          x-go-name: "MemorySizeBytes"
        network: 
          description: "Network provides the information regarding the network cards."
          type: "string"
          x-go-name: "Network"
      x-go-package: "cohesity/iris/server/data/public"
    NodeStats: 
      type: "object"
      title: "NodeStats provides various statistics for the node."
      properties: 
        id: 
          description: "Id is the Id of the Node."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        usagePerfStats: 
          description: "UsagePerfStats provides the usage and performance stats for the node."
          $ref: "#/definitions/UsageAndPerformanceStats"
      x-go-package: "cohesity/iris/server/data/public"
    NodeSystemDiskInfo: 
      type: "object"
      properties: 
        devicePath: 
          description: "DevicePath is the device path of the disk."
          type: "string"
          x-go-name: "DevicePath"
        id: 
          description: "Id is the id of the disk."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        offline: 
          description: "Offline specifies whether a disk is marked offline."
          type: "boolean"
          x-go-name: "Offline"
      x-go-package: "cohesity/iris/server/data/public"
    NtpSettingsConfig: 
      type: "object"
      properties: 
        ntpServersInternal: 
          type: "boolean"
          x-go-name: "NtpServersInternal"
      x-go-package: "cohesity/iris/server/data/public"
    ObjectSearchResults: 
      description: "Specifies an array of backup objects and a count to indicate\nif additional requests must be made to get the full result."
      type: "object"
      title: "Object Search Results."
      properties: 
        objectSnapshotInfo: 
          description: "Specifies the list of backup objects returned by this request that\nmatch the specified search and filter criteria.\nThe number of objects returned is limited by the pageCount field."
          type: "array"
          title: "Array of Snapshot Objects."
          items: 
            $ref: "#/definitions/ObjectSnapshotInfo"
          x-go-name: "ObjectSnapshotInfo"
        totalCount: 
          description: "Specifies the total number of backup objects that match the filter and\nsearch criteria. Use this value\nto determine how many additional requests are required to get the\nfull result."
          type: "integer"
          format: "int64"
          x-go-name: "TotalCount"
      x-go-package: "cohesity/iris/server/data/public"
    ObjectSnapshotInfo: 
      description: "Specifies information about an object that has been backed up."
      type: "object"
      title: "Object Snapshot."
      properties: 
        clusterPartitionId: 
          description: "Specifies the Cohesity Cluster partition id where this object is stored."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterPartitionId"
        jobId: 
          description: "Specifies the id for the Protection Job that is currently\nassociated with the object. If the object was backed up on\ncurrent Cohesity Cluster, this field contains the id for the Job\nthat captured this backup object.\nIf the object was backed up on a Primary Cluster and\nreplicated to this Cohesity Cluster, a new Inactive Job is created,\nthe object is now associated with new Inactive Job, and this field\ncontains the id of the new Inactive Job."
          type: "integer"
          format: "int64"
          x-go-name: "JobId"
        jobName: 
          description: "Specifies the name of the Protection Job that captured the backup."
          type: "string"
          x-go-name: "JobName"
        jobUid: 
          description: "Specifies the globally unique id of the Protection Job that backed up\nthis object. This id is unique across Cohesity Clusters.\nEven if this object is replicated to a Remote Cohesity Cluster\nand the object is associated with a new Job, the value specified\nin this field does not change."
          type: "object"
          title: "Unique Global Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        objectName: 
          description: "Specifies the primary name of the object."
          type: "string"
          x-go-name: "ObjectName"
        osType: 
          description: "Specifies the inferred OS type."
          type: "string"
          x-go-name: "OsType"
        registeredSource: 
          description: "Specifies the id of the original root Protection Source tree\n(such as a vCenter Server) that was accessed by the Protection Job\nto capture a backup of this object."
          $ref: "#/definitions/ProtectionSource"
        snapshottedSource: 
          description: "Specifies the Protection Source that represents the original object being\nbacked up. When a root Protection Source is registered, it creates\na tree of source Protection Source objects. This field defines the\nspecific Protection Source leaf object (such as a VM)\nthat was backed up."
          $ref: "#/definitions/ProtectionSource"
        versions: 
          description: "Specifies all snapshot versions of this object. Each time a Job Run\nof a Job executes, it may create a new snapshot version of an object.\nThis array stores the different snapshots versions of the object."
          type: "array"
          title: "Array of Snapshots."
          items: 
            $ref: "#/definitions/SnapshotVersion"
          x-go-name: "Versions"
        viewBoxId: 
          description: "Specifies the id of the Domain (View Box) where this\nobject is stored."
          type: "integer"
          format: "int64"
          x-go-name: "ViewBoxId"
        viewName: 
          description: "Specifies the View name where this object is stored."
          type: "string"
          x-go-name: "ViewName"
      x-go-package: "cohesity/iris/server/data/public"
    ObjectsByEnv: 
      type: "object"
      title: "Number of Objects by Type."
      properties: 
        envType: 
          description: "Environment Type."
          type: "string"
          x-go-name: "EnvType"
        numObjects: 
          description: "Number of Objects."
          type: "integer"
          format: "int32"
          x-go-name: "NumObjects"
      x-go-package: "cohesity/iris/server/data/public"
    ObjectsProtectedByPolicy: 
      type: "object"
      title: "Objects (e.g. VMs) protected by Policy."
      properties: 
        objectsProtected: 
          type: "array"
          title: "Protected Objects."
          items: 
            $ref: "#/definitions/ObjectsByEnv"
          x-go-name: "ObjectsProtected"
        policyId: 
          description: "Id of the policy."
          type: "string"
          x-go-name: "PolicyId"
        policyName: 
          description: "Name of the policy."
          type: "string"
          x-go-name: "PolicyName"
      x-go-package: "cohesity/iris/server/data/public"
    OutputSpec: 
      type: "object"
      title: "Output specification for the mapreduce."
      properties: 
        numReduceShards: 
          description: "Number of reduce shards."
          type: "integer"
          format: "int32"
          x-go-name: "NumReduceShards"
        outputDir: 
          description: "Name of output directory."
          type: "string"
          x-go-name: "OutputDir"
        partitionId: 
          description: "Partition id where output will go."
          type: "integer"
          format: "int64"
          x-go-name: "PartitionId"
        reduceOutputPrefix: 
          description: "Prefix of the reduce output files. File names will be:\n${reduce_output_prefix}-00000-of-00100 if num_reduce_shards=100\nThis name can contain some path components. e.g. \"awb_results/run1\" is a\nvalid value. output_dir is deprecated."
          type: "string"
          x-go-name: "ReduceOutputPrefix"
        viewBoxId: 
          description: "Viewbox id where the output will go."
          type: "integer"
          format: "int64"
          x-go-name: "ViewBoxId"
        viewName: 
          description: "Name of the view where output will go. This will be filled up by yoda."
          type: "string"
          x-go-name: "ViewName"
      x-go-package: "yoda/base/analytics.pb"
    OverwriteViewParam: 
      type: "object"
      title: "Overwrite View Request."
      required: 
        - "sourceViewName"
        - "targetViewName"
      properties: 
        sourceViewName: 
          description: "Specifies the source view name."
          type: "string"
          x-go-name: "SourceViewName"
        targetViewName: 
          description: "Specifies the target view name."
          type: "string"
          x-go-name: "TargetViewName"
      x-go-package: "cohesity/iris/server/data/public"
    PhysicalEnvJobParameters: 
      description: "Specifies job parameters applicable for all 'kPhysical' Environment type\nProtection Sources in a Protection Job."
      type: "object"
      title: "Protection Job parameters applicable to 'kPhysical' Environment type."
      properties: 
        incrementalSnapshotUponRestart: 
          description: "If true, performs an incremental backup after server restarts. Otherwise\na full backup is done. NOTE: This is applicable only to Windows servers.\nIf not set, default value is false."
          type: "boolean"
          x-go-name: "IncrementalSnapshotUponRestart"
      x-go-package: "cohesity/iris/server/data/public"
    PhysicalProtectionSource: 
      description: "Specifies a Protection Source in a Physical environment."
      type: "object"
      title: "Physical Protection Source."
      properties: 
        agents: 
          description: "Specifiles the agents running on the Physical Protection Source and the\nstatus information."
          type: "array"
          title: "Array of Agents on the Physical Protection Source."
          items: 
            $ref: "#/definitions/AgentInformation"
          x-go-name: "Agents"
        hostType: 
          description: "Specifies the environment type for the host.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
          type: "string"
          enum: 
            - "kLinux"
            - "kWindows"
          x-go-name: "HostType"
        id: 
          description: "Specifies a unique id of a Physical Protection Source.\nThe id is unique across Cohesity Clusters."
          type: "object"
          title: "Unique Global Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        name: 
          description: "Specifies a human readable name of the Protection Source."
          type: "string"
          x-go-name: "Name"
        type: 
          description: "Specifies the type of managed Object in a Physical Protection Source.\n'kHost' indicates a single physical server.\n'kWindowsCluster' indicates a Microsoft Windows cluster."
          type: "string"
          enum: 
            - "kHost"
            - "kWindowsCluster"
          x-go-name: "Type"
        volumes: 
          description: "Specifies the volumes available on the physical host.\nThese fields are populated only for the kPhysicalHost type."
          type: "array"
          title: "Array of Physical Volumes."
          items: 
            $ref: "#/definitions/PhysicalVolume"
          x-go-name: "Volumes"
      x-go-package: "cohesity/iris/server/data/public"
    PhysicalSpecialParameters: 
      description: "Specifies additional special settings applicable for a Protection Source\nof 'kPhysical' type in a Protection Job."
      type: "object"
      title: "Protection Job parameters applicable for a 'kPhysical' Protection Source."
      properties: 
        applicationParameters: 
          description: "Specifies parameters that are related to applications running on the\nProtection Source."
          $ref: "#/definitions/ApplicationParameters"
        enableSystemBackup: 
          description: "Specifies whether to allow system backup using 3rd party tools installed\non the Protection Host. System backups are used for doing bare metal\nrecovery later. This field is applicable only for System backups."
          type: "boolean"
          x-go-name: "EnableSystemBackup"
        filePaths: 
          description: "Specifies a list of directories or files to protect in a\nPhysical Server."
          type: "array"
          title: "Array of File Paths to Back Up."
          items: 
            $ref: "#/definitions/FilePathParameters"
          x-go-name: "FilePaths"
        volumeGuid: 
          description: "Specifies the subset of mounted volumes to protect in\na Physical Server. If not specified, all mounted volumes on a\nPhysical Server are protected."
          type: "array"
          title: "Array of Mounted Volumes to Back Up."
          items: 
            type: "string"
          x-go-name: "VolumeGuid"
        windowsParameters: 
          description: "Specifies parameters applicable only to Windows hosts."
          $ref: "#/definitions/WindowsHostSnapshotParameters"
      x-go-package: "cohesity/iris/server/data/public"
    PhysicalVolume: 
      description: "Specifies volume information about a Physical Protection Source."
      type: "object"
      title: "Physical Volume."
      properties: 
        devicePath: 
          description: "Specifies the path to the device that hosts the volume locally."
          type: "string"
          x-go-name: "DevicePath"
        guid: 
          description: "Specifies an id for the Physical Volume."
          type: "string"
          x-go-name: "Guid"
        isExtendedAttributesSupported: 
          description: "Specifies whether this volume supports extended attributes (like ACLs)\nwhen performing file backups."
          type: "boolean"
          x-go-name: "IsExtendedAttributesSupported"
        isProtected: 
          description: "Specifies if a volume is protected by a Job."
          type: "boolean"
          x-go-name: "IsProtected"
        label: 
          description: "Specifies a volume label that can be used for displaying additional\nidentifying information about a volume."
          type: "string"
          x-go-name: "Label"
        logicalSizeBytes: 
          description: "Specifies the logical size of the volume in bytes that is\nnot reduced by change-block tracking, compression and deduplication."
          type: "integer"
          format: "uint64"
          x-go-name: "LogicalSizeBytes"
        mountPoints: 
          description: "Specifies the mount points where the volume is mounted,\nfor example: 'C:\\', '/mnt/foo' etc."
          type: "array"
          title: "Array of Mount Points."
          items: 
            type: "string"
          x-go-name: "MountPoints"
        networkPath: 
          description: "Specifies the full path to connect to the network attached volume.\nFor example, (IP or hostname):/path/to/share for NFS volumes)."
          type: "string"
          x-go-name: "NetworkPath"
        usedSizeBytes: 
          description: "Specifies the size used by the volume in bytes."
          type: "integer"
          format: "uint64"
          x-go-name: "UsedSizeBytes"
      x-go-package: "cohesity/iris/server/data/public"
    Principal: 
      description: "Specifies information about a single Principal."
      type: "object"
      title: "Principal."
      properties: 
        domain: 
          description: "Specifies the domain name of the where the principal' account is\nmaintained."
          type: "string"
          x-go-name: "Domain"
        fullName: 
          description: "Specifies the full name (first and last names) of the principal."
          type: "string"
          x-go-name: "FullName"
        objectClass: 
          description: "Specifies the object class of the principal (either 'kGroup' or 'kUser').\n'kUser' specifies a user object class.\n'kGroup' specifies a group object class."
          type: "string"
          enum: 
            - "kUser"
            - "kGroup"
          x-go-name: "ObjectClass"
        principalName: 
          description: "Specifies the name of the principal."
          type: "string"
          x-go-name: "PrincipalName"
        sid: 
          description: "Specifies the unique Security id (SID) of the principal."
          type: "string"
          x-go-name: "Sid"
      x-go-package: "cohesity/iris/server/data/public"
    PrivilegeInfo: 
      description: "Specifies details about a privilege such as the category,\ndescription, name, etc."
      type: "object"
      title: "Privilege Information."
      properties: 
        category: 
          description: "Specifies a category for the privilege such as 'Access Management'."
          type: "string"
          x-go-name: "Category"
        description: 
          description: "Specifies a description defining what the privilege provides."
          type: "string"
          x-go-name: "Description"
        isCustomRoleDefault: 
          description: "Specifies if this privilege is automatically assigned to custom roles."
          type: "boolean"
          x-go-name: "IsCustomRoleDefault"
        isSpecial: 
          description: "Specifies if this privilege is automatically assigned to the default\nSystem Admin user called 'admin'.\nIf true, the privilege is NOT assigned to the default System Admin user\ncalled 'admin'.\nBy default, privileges are automatically assigned to the default System\nAdmin user called 'admin'."
          type: "boolean"
          x-go-name: "IsSpecial"
        isViewOnly: 
          description: "Specifies if privilege is view-only privilege that cannot make changes."
          type: "boolean"
          x-go-name: "IsViewOnly"
        label: 
          description: "Specifies the label for the privilege as displayed on the Cohesity\nDashboard such as 'Access Management View'."
          type: "string"
          x-go-name: "Label"
        name: 
          description: "Specifies the Cluster name for the privilege such as PRINCIPAL_VIEW."
          type: "string"
          x-go-name: "Name"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectedObjectsByEnv: 
      type: "object"
      title: "Number of Protected Objects by Type."
      properties: 
        envType: 
          description: "Environment Type."
          type: "string"
          x-go-name: "EnvType"
        protectedCount: 
          description: "Number of Protected Objects."
          type: "integer"
          format: "int32"
          x-go-name: "ProtectedCount"
        protectedSizeBytes: 
          description: "Size of Protected Objects."
          type: "integer"
          format: "int64"
          x-go-name: "ProtectedSizeBytes"
        unprotectedCount: 
          description: "Number of Unprotected Objects."
          type: "integer"
          format: "int32"
          x-go-name: "UnprotectedCount"
        unprotectedSizeBytes: 
          description: "Size of Unprotected Objects."
          type: "integer"
          format: "int64"
          x-go-name: "UnprotectedSizeBytes"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectedObjectsTile: 
      type: "object"
      title: "Protected Objects information."
      properties: 
        objectsProtected: 
          type: "array"
          title: "Protected Objects breakdown by object type."
          items: 
            $ref: "#/definitions/ProtectedObjectsByEnv"
          x-go-name: "ObjectsProtected"
        protectedCount: 
          description: "Number of Protected Objects."
          type: "integer"
          format: "int32"
          x-go-name: "ProtectedCount"
        protectedSizeBytes: 
          description: "Size of Protected Objects."
          type: "integer"
          format: "int64"
          x-go-name: "ProtectedSizeBytes"
        unprotectedCount: 
          description: "Number of Unprotected Objects."
          type: "integer"
          format: "int32"
          x-go-name: "UnprotectedCount"
        unprotectedSizeBytes: 
          description: "Size of Unprotected Objects."
          type: "integer"
          format: "int64"
          x-go-name: "UnprotectedSizeBytes"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectedVmInfo: 
      type: "object"
      title: "Specifies the Protection Jobs information of a VM."
      properties: 
        protectionJobs: 
          type: "array"
          title: "Specifies the list of Protection Jobs that protect the VM."
          items: 
            $ref: "#/definitions/ProtectionJob"
          x-go-name: "ProtectionJobs"
        protectionPolicies: 
          type: "array"
          title: "Specifies the list of Policies that are used by the Protection Jobs."
          items: 
            $ref: "#/definitions/ProtectionPolicy"
          x-go-name: "ProtectionPolicies"
        protectionSource: 
          description: "Specifies a VM that is being protected on the Cohesity Cluster."
          $ref: "#/definitions/ProtectionSource"
        stats: 
          description: "Specifies the protection stats of VM."
          type: "object"
          title: "Protection Summary Information of a registered Protection Source tree or\nthe Cohesity Cluster."
          properties: 
            protectedCount: 
              description: "Specifies the number of objects that are protected under the given\nentity."
              type: "integer"
              format: "int64"
              x-go-name: "ProtectedCount"
            protectedSize: 
              description: "Specifies the total size of the protected objects under the given entity."
              type: "integer"
              format: "int64"
              x-go-name: "ProtectedSize"
            unprotectedCount: 
              description: "Specifies the number of objects that are not protected under the given\nentity."
              type: "integer"
              format: "int64"
              x-go-name: "UnprotectedCount"
            unprotectedSize: 
              description: "Specifies the total size of the unprotected objects under the given\nentity."
              type: "integer"
              format: "int64"
              x-go-name: "UnprotectedSize"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionJob: 
      description: "Provides details about a Protection Job."
      type: "object"
      title: "Protection Job."
      required: 
        - "name"
        - "policyId"
        - "viewBoxId"
      properties: 
        abortInBlackoutPeriod: 
          description: "If true, the Cohesity Cluster aborts any currently executing Job Runs\nof this Protection Job when a blackout period specified for this Job\nstarts, even if the Job Run started before the blackout\nperiod began.\nIf false, a Job Run continues to execute, if the Job Run started before\nthe blackout period starts."
          type: "boolean"
          x-go-name: "AbortInBlackoutPeriod"
        alertingPolicy: 
          description: "During Job Runs, the following Job Events are generated:\n1) Job succeeds 2) Job fails\n3) Job violates the SLA\nThese Job Events can cause Alerts to be generated.\n'kSuccess' means the Protection Job succeeded.\n'kFailure' means the Protection Job failed.\n'kSlaViolation' means the Protection Job took longer than the time period\nspecified in the SLA."
          type: "array"
          title: "Array of Job Events."
          items: 
            type: "string"
            enum: 
              - "kSuccess"
              - "kFailure"
              - "kSlaViolation"
          x-go-name: "AlertingPolicy"
        cloudParameters: 
          description: "Specifies Cloud specific parameters applicable in various scenarios."
          $ref: "#/definitions/CloudParameters"
        creationTimeUsecs: 
          description: "Specifies the time when the Protection Job was created."
          type: "integer"
          format: "int64"
          x-go-name: "CreationTimeUsecs"
        description: 
          description: "Specifies a text description about the Protection Job."
          type: "string"
          x-go-name: "Description"
        endTimeUsecs: 
          description: "Specifies the epoch time (in microseconds) after which the Protection Job\nbecomes dormant."
          type: "integer"
          format: "int64"
          x-go-name: "EndTimeUsecs"
        environment: 
          description: "Specifies the environment type (such as kVMware or kSQL)\nof the Protection Source this Job is protecting.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "string"
          enum: 
            - "kVMware"
            - "kSQL"
            - "kView"
            - "kPuppeteer"
            - "kPhysical"
            - "kPure"
            - "kNetapp"
            - "kGenericNas"
            - "kHyperV"
            - "kAcropolis"
            - "kAzure"
          x-go-name: "Environment"
        environmentParameters: 
          description: "Specifies additional settings that are applicable to all Sources in\nthe Protection Job that are of specified environment type. For example,\nyou can specify to exclude a disk from backup for all 'kVMware'\nProtection Sources in the Protection Job. If a setting conflicts with\nsourceSpecialParameters, then sourceSpecialParameters will be used."
          $ref: "#/definitions/EnvironmentTypeJobParameters"
        excludeSourceIds: 
          description: "List of Object ids from a Protection Source that should not be\nprotected and are excluded from being backed up by the Protection Job.\nLeaf and non-leaf Objects may be in this list and an Object in this list\nmust have an ancestor in the sourceId list."
          type: "array"
          title: "Array of Excluded Source Objects."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "ExcludeSourceIds"
        excludeVmTagIds: 
          description: "Optionally specify a list of VMs to exclude from protecting by listing\nProtection Source ids of VM Tags in this two dimensional array.\nUsing this two dimensional array of Tag ids, the Cluster\ngenerates a list of VMs to exclude from protecting,\nwhich are derived from intersections of the inner arrays\nand union of the outer array, as shown by the following example.\nFor example a Datacenter is selected to be protected but you want to\nexclude all the 'Former Employees' VMs in the East and West but\nkeep all the VMs for 'Former Employees' in the South which are\nalso stored in this Datacenter, by specifying the\nfollowing tag id array:\n[ [1000, 2221], [1000, 3031] ],\nwhere 1000 is the 'Former Employee' VM Tag id,\n2221 is the 'East' VM Tag id and 3031 is the 'West' VM Tag id.\nThe first inner array [1000, 2221] produces a list of VMs that are\nboth tagged with 'Former Employees' and 'East' (an intersection).\nThe second inner array [1000, 3031] produces a list of VMs that are both\ntagged with 'Former Employees' and 'West' (an intersection).\nThe outer array combines the list of VMs from the two inner\narrays. The list of resulting VMs are excluded from being protected\nthis Job."
          type: "array"
          title: "Array of Arrays of VM Tag Ids that Specify VMs to Exclude."
          items: 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
          x-go-name: "ExcludeVmTagIds"
        fullProtectionSlaTimeMins: 
          description: "If specified, this setting is number of minutes that a Job Run\nof a Full (no CBT) backup schedule is expected to complete, which is\nknown as a Service-Level Agreement (SLA).\nA SLA violation is reported when the run time of a Job Run exceeds\nthe SLA time period specified for this backup schedule."
          type: "integer"
          format: "int64"
          x-go-name: "FullProtectionSlaTimeMins"
        fullProtectionStartTime: 
          description: "Specifies the time of day to start the Full Protection Schedule.\nThis is optional and only applicable if the Protection Policy defines\na monthly or a daily Full (no CBT) Protection Schedule.\nDefault value is 02:00 AM.\ndeprecated: true"
          type: "object"
          title: "Full (no CBT) Protection Schedule Start Time."
          properties: 
            hour: 
              description: "Specifies an (0-23) hour in a day."
              type: "integer"
              format: "int32"
              x-go-name: "Hour"
            minute: 
              description: "Specifies a (0-59) minute in an hour."
              type: "integer"
              format: "int32"
              x-go-name: "Minute"
        id: 
          description: "Specifies an id for the Protection Job."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        incrementalProtectionSlaTimeMins: 
          description: "If specified, this setting is number of minutes that a Job Run\nof a CBT-based backup schedule is expected to complete, which\nis known as a Service-Level Agreement (SLA).\nA SLA violation is reported when the run time of a Job Run exceeds\nthe SLA time period specified for this backup schedule."
          type: "integer"
          format: "int64"
          x-go-name: "IncrementalProtectionSlaTimeMins"
        incrementalProtectionStartTime: 
          description: "Specifies the time of day to start the CBT-based Protection Schedule.\nThis is optional and only applicable if the Protection Policy defines\na monthly or a daily CBT-based Protection Schedule.\nDefault value is 02:00 AM.\ndeprecated: true"
          type: "object"
          title: "CBT-based Protection Schedule Start Time."
          properties: 
            hour: 
              description: "Specifies an (0-23) hour in a day."
              type: "integer"
              format: "int32"
              x-go-name: "Hour"
            minute: 
              description: "Specifies a (0-59) minute in an hour."
              type: "integer"
              format: "int32"
              x-go-name: "Minute"
        indexingPolicy: 
          description: "Specifies the settings for indexing files found in an Object\n(such as a VM) so these files can be searched and recovered.\nIn addition, it specifies inclusion and exclusion rules that determine\nthe directories to index."
          $ref: "#/definitions/IndexingPolicy"
        isActive: 
          description: "Indicates if the current state of the Protection Job is Active\nor Inactive.\nWhen you create a Protection Job on a Primary Cluster\nwith a replication schedule, the Cohesity Cluster creates an\nInactive copy of the Job on the Remote Cluster.\nIn addition, when an Active and running Job is deactivated,\nthe Job becomes Inactive."
          type: "boolean"
          x-go-name: "IsActive"
        isDeleted: 
          description: "Equals 'true' if the Protection Job was deleted but some Snapshots\nare still associated with this Job. If 'true', no new Job Runs are started\nby this Protection Job."
          type: "boolean"
          x-go-name: "IsDeleted"
        isPaused: 
          description: "Indicates if the Protection Job is paused, which means that no new\nJob Runs are started but any existing Job Runs continue to\nexecute."
          type: "boolean"
          x-go-name: "IsPaused"
        lastRun: 
          description: "Specifies the last run of the Protection Job if any.\nThis field is set only if it was requested."
          $ref: "#/definitions/ProtectionRunInstance"
        leverageStorageSnapshots: 
          description: "Specifies whether to leverage the storage array based snapshots for this\nbackup job. To leverage storage snapshots, the storage array has to be\nregistered as a source. If storage based snapshots can not be taken, job\nwill fallback to the default backup method."
          type: "boolean"
          x-go-name: "LeverageStorageSnapshots"
        modificationTimeUsecs: 
          description: "Specifies the last time this Job was updated."
          type: "integer"
          format: "int64"
          x-go-name: "ModificationTimeUsecs"
        modifiedByUser: 
          description: "Specifies the last Cohesity user who updated this Job."
          type: "string"
          x-go-name: "ModifiedByUser"
        name: 
          description: "Specifies the name of the Protection Job."
          type: "string"
          x-go-name: "Name"
        parentSourceId: 
          description: "Specifies the id of the registered Protection Source that is the\nparent of the Objects that may be protected by this Job.\nFor example when a vCenter Server is registered on a Cohesity Cluster,\nthe Cohesity Cluster assigns a unique id to this field that represents\nthe vCenter Server."
          type: "integer"
          format: "int64"
          x-go-name: "ParentSourceId"
        policyAppliedTimeMsecs: 
          description: "Specifies the epoch time (in milliseconds) when the\nassociated Policy was last applied to this Job.\nThis is used to determine if the Policy has changed since it\nwas last applied to this Job."
          type: "integer"
          format: "int64"
          x-go-name: "PolicyAppliedTimeMsecs"
        policyId: 
          description: "Specifies the unique id of the Protection Policy associated with\nthe Protection Job. The Policy provides retry settings,\nProtection Schedules, Priority, SLA, etc.\nThe Job defines the Storage Domain (View Box), the Objects to Protect\n(if applicable), Start Time, Indexing settings, etc."
          type: "string"
          x-go-name: "PolicyId"
        priority: 
          description: "Specifies the priority of execution for a Protection Job.\nCohesity supports concurrent backups but if the number of Jobs exceeds\nthe ability to process Jobs, the specified priority determines the\nexecution Job priority.\nThis field also specifies the replication priority."
          type: "string"
          enum: 
            - "kLow"
            - "kMedium"
            - "kHigh"
          x-go-name: "Priority"
        qosType: 
          description: "Specifies the QoS policy type to use for this Protection Job.\n'kBackupHDD' indicates the Cohesity Cluster writes data directly to\nthe HDD tier for this Protection Job. This is the recommended setting.\n'kBackupSSD' indicates the Cohesity Cluster writes data directly to\nthe SSD tier for this Protection Job. Only specify this policy if\nyou need fast ingest speed for a small number of Protection Jobs."
          type: "string"
          enum: 
            - "kBackupHDD"
            - "kBackupSSD"
          x-go-name: "QosType"
        quiesce: 
          description: "Indicates if the App-Consistent option is enabled for this Job.\nIf the option is enabled, the Cohesity Cluster quiesces\nthe file system and applications before taking\nApplication-Consistent Snapshots. VMware Tools must be installed\non the guest Operating System."
          type: "boolean"
          x-go-name: "Quiesce"
        remoteScript: 
          description: "For a Remote Adapter 'kPuppeteer' Job, this field specifies the\nsettings about the remote script that will be executed by this Job.\nOnly specify this field for Remote Adapter 'kPuppeteer' Jobs."
          type: "object"
          title: "Remote Adapter."
          properties: 
            fullBackupScript: 
              description: "Specifies the script that should run for the Full (no CBT) backup schedule\nof a Remote Adapter 'kPuppeteer' Job.\nThis field is mandatory if the Policy associated with this Job\nhas a Full (no CBT) backup schedule and this is Remote Adapter\n'kPuppeteer' Job."
              type: "object"
              title: "Full (No CBT) Script."
              properties: 
                scriptParams: 
                  description: "Specifies the parameters and values to pass into the remote script.\nFor example if the script expects values for the 'database' and\n'user' parameters, specify the parameters and values using\nthe following string: \"database=myDatabase user=me\"."
                  type: "string"
                  x-go-name: "ScriptParams"
                scriptPath: 
                  description: "Specifies the path to the script on the remote host."
                  type: "string"
                  x-go-name: "ScriptPath"
            incrementalBackupScript: 
              description: "Specifies the script that should run for the CBT-based backup\nschedule of a Remote Adapter 'kPuppeteer' Job. A CBT-based backup\nschedule is utilizing Change Block Tracking when capturing Snapshots.\nThis field is mandatory if the Policy associated with this Job\nhas a CBT-based backup schedule and this is Remote Adapter\n'kPuppeteer' Job."
              type: "object"
              title: "CBT-based Script."
              properties: 
                scriptParams: 
                  description: "Specifies the parameters and values to pass into the remote script.\nFor example if the script expects values for the 'database' and\n'user' parameters, specify the parameters and values using\nthe following string: \"database=myDatabase user=me\"."
                  type: "string"
                  x-go-name: "ScriptParams"
                scriptPath: 
                  description: "Specifies the path to the script on the remote host."
                  type: "string"
                  x-go-name: "ScriptPath"
            logBackupScript: 
              description: "Specifies the script that should run for the Log backup schedule\nof a Remote Adapter 'kPuppeteer' Job.\nThis field is mandatory if the Policy associated with this Job\nhas a Log backup schedule and this is Remote Adapter\n'kPuppeteer' Job."
              type: "object"
              title: "Log Script."
              properties: 
                scriptParams: 
                  description: "Specifies the parameters and values to pass into the remote script.\nFor example if the script expects values for the 'database' and\n'user' parameters, specify the parameters and values using\nthe following string: \"database=myDatabase user=me\"."
                  type: "string"
                  x-go-name: "ScriptParams"
                scriptPath: 
                  description: "Specifies the path to the script on the remote host."
                  type: "string"
                  x-go-name: "ScriptPath"
            remoteHost: 
              description: "Specifies the remote host where the remote scripts are executed.\nThis field must be set for Remote Adapter Jobs."
              type: "object"
              title: "Remote Host."
              properties: 
                address: 
                  description: "Specifies the address (IP, hostname or FQDN) of the remote host\nthat will run the script."
                  type: "string"
                  x-go-name: "Address"
                type: 
                  description: "Specifies the OS type of the remote host that will run the script.\nCurrently only 'kLinux' is supported.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "Type"
            username: 
              description: "Specifies the username that will be used to login to the remote host.\nFor host type 'kLinux', it is expected that user has setup the\npassword-less access. So only username field is required."
              type: "string"
              x-go-name: "Username"
        sourceIds: 
          description: "Specifies the list of Object ids from the Protection Source to\nprotect (or back up) by the Protection Job.\nAn Object in this list may be descendant of another Object in this list.\nFor example a Datacenter could be selected but its child Host excluded.\nHowever, a child VM under the Host could be explicitly\nselected to be protected. Both the Datacenter and the VM are listed."
          type: "array"
          title: "Array of Protected Source Objects."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "SourceIds"
        sourceSpecialParameters: 
          description: "Specifies additional settings that can apply to a subset of the\nSources listed in the Protection Job. For example, you can specify a list\nof files and folders to protect instead of protecting the entire Physical\nServer. If this field's setting conflicts with environmentParameters,\nthen this setting will be used."
          type: "array"
          title: "Array of Special Source Parameters."
          items: 
            $ref: "#/definitions/SourceSpecialParameter"
          x-go-name: "SourceSpecialParameters"
        startTime: 
          description: "Specifies the time of day to start the Protection Schedule.\nThis is optional and only applicable if the Protection Policy defines\na monthly or a daily Protection Schedule.\nDefault value is 02:00 AM."
          type: "object"
          title: "Protection Schedule Start Time."
          properties: 
            hour: 
              description: "Specifies an (0-23) hour in a day."
              type: "integer"
              format: "int32"
              x-go-name: "Hour"
            minute: 
              description: "Specifies a (0-59) minute in an hour."
              type: "integer"
              format: "int32"
              x-go-name: "Minute"
        summaryStats: 
          description: "Specifies the summary stats of the Protection Job.\nThis field is set only if it was requested."
          $ref: "#/definitions/ProtectionJobSummaryStats"
        timezone: 
          description: "Specifies the timezone to use when calculating time for this\nProtection Job such as the Job start time.\nSpecify the timezone in the following format: \"Area/Location\",\nfor example: \"America/New_York\"."
          type: "string"
          x-go-name: "Timezone"
        uid: 
          description: "Specifies a global Protection Job id that is unique across Cohesity\nClusters."
          type: "object"
          title: "Unique Global Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        viewBoxId: 
          description: "Specifies the Storage Domain (View Box) id where this Job writes data."
          type: "integer"
          format: "int64"
          x-go-name: "ViewBoxId"
        viewName: 
          description: "For a Remote Adapter 'kPuppeteer' Job or a 'kView' Job, this field\nspecifies a View name that should be protected. Specify this field when\ncreating a Protection Job for the first time for a View. If this field\nis specified, ParentSourceId, SourceIds, and ExcludeSourceIds should not\nbe specified."
          type: "string"
          x-go-name: "ViewName"
        vmTagIds: 
          description: "Optionally specify a list of VMs to protect by listing\nProtection Source ids of VM Tags in this two dimensional array.\nUsing this two dimensional array of Tag ids, the Cluster\ngenerates a list of VMs to protect which are derived from\nintersections of the inner arrays and union of the outer array,\nas shown by the following example.\nTo protect only 'Eng' VMs in the East and all the VMs in the West,\nspecify the following tag id array:\n[ [1101, 2221], [3031] ],\nwhere 1101 is the 'Eng' VM Tag id, 2221 is the 'East' VM Tag id and\n3031 is the 'West' VM Tag id. The inner array [1101, 2221] produces a\nlist of VMs that are both tagged with 'Eng' and 'East'\n(an intersection). The outer array combines the list from the inner\narray with list of VMs tagged with 'West' (a union). The list\nof resulting VMs are protected by this Job."
          type: "array"
          title: "Array of Arrays of VMs Tags Ids that Specify VMs to Protect."
          items: 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
          x-go-name: "VmTagIds"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionJobInfo: 
      description: "Specifies basic information about a Protection Job."
      type: "object"
      title: "Protection Job Info"
      properties: 
        jobId: 
          description: "Specifies the id of the Protection Job."
          type: "integer"
          format: "int64"
          x-go-name: "JobId"
        jobName: 
          description: "Specifies the name of the Protection Job."
          type: "string"
          x-go-name: "JobName"
        type: 
          description: "Specifies the type of the Protection Job such as kView or kPuppeteer.\n'kPuppeteer' refers to a Remote Adapter Job.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "string"
          enum: 
            - "kVMware"
            - "kSQL"
            - "kView"
            - "kPuppeteer"
            - "kPhysical"
            - "kPure"
            - "kNetapp"
            - "kGenericNas"
            - "kHyperV"
            - "kAcropolis"
            - "kAzure"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionJobRequestBody: 
      description: "Specifies information about a Protection Job."
      type: "object"
      title: "Protection Job Request."
      required: 
        - "name"
        - "policyId"
        - "viewBoxId"
      properties: 
        abortInBlackoutPeriod: 
          description: "If true, the Cohesity Cluster aborts any currently executing Job Runs\nof this Protection Job when a blackout period specified for this Job\nstarts, even if the Job Run started before the blackout\nperiod began.\nIf false, a Job Run continues to execute, if the Job Run started before\nthe blackout period starts."
          type: "boolean"
          x-go-name: "AbortInBlackoutPeriod"
        alertingPolicy: 
          description: "During Job Runs, the following Job Events are generated:\n1) Job succeeds 2) Job fails\n3) Job violates the SLA\nThese Job Events can cause Alerts to be generated.\n'kSuccess' means the Protection Job succeeded.\n'kFailure' means the Protection Job failed.\n'kSlaViolation' means the Protection Job took longer than the time period\nspecified in the SLA."
          type: "array"
          title: "Array of Job Events."
          items: 
            type: "string"
            enum: 
              - "kSuccess"
              - "kFailure"
              - "kSlaViolation"
          x-go-name: "AlertingPolicy"
        cloudParameters: 
          description: "Specifies Cloud specific parameters applicable in various scenarios."
          $ref: "#/definitions/CloudParameters"
        description: 
          description: "Specifies a text description about the Protection Job."
          type: "string"
          x-go-name: "Description"
        endTimeUsecs: 
          description: "Specifies the epoch time (in microseconds) after which the Protection Job\nbecomes dormant."
          type: "integer"
          format: "int64"
          x-go-name: "EndTimeUsecs"
        environment: 
          description: "Specifies the environment type (such as kVMware or kSQL)\nof the Protection Source this Job is protecting.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "string"
          enum: 
            - "kVMware"
            - "kSQL"
            - "kView"
            - "kPuppeteer"
            - "kPhysical"
            - "kPure"
            - "kNetapp"
            - "kGenericNas"
            - "kHyperV"
            - "kAcropolis"
            - "kAzure"
          x-go-name: "Environment"
        environmentParameters: 
          description: "Specifies additional settings that are applicable to all Sources in\nthe Protection Job that are of specified environment type. For example,\nyou can specify to exclude a disk from backup for all 'kVMware'\nProtection Sources in the Protection Job. If a setting conflicts with\nsourceSpecialParameters, then sourceSpecialParameters will be used."
          $ref: "#/definitions/EnvironmentTypeJobParameters"
        excludeSourceIds: 
          description: "List of Object ids from a Protection Source that should not be\nprotected and are excluded from being backed up by the Protection Job.\nLeaf and non-leaf Objects may be in this list and an Object in this list\nmust have an ancestor in the sourceId list."
          type: "array"
          title: "Array of Excluded Source Objects."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "ExcludeSourceIds"
        excludeVmTagIds: 
          description: "Optionally specify a list of VMs to exclude from protecting by listing\nProtection Source ids of VM Tags in this two dimensional array.\nUsing this two dimensional array of Tag ids, the Cluster\ngenerates a list of VMs to exclude from protecting,\nwhich are derived from intersections of the inner arrays\nand union of the outer array, as shown by the following example.\nFor example a Datacenter is selected to be protected but you want to\nexclude all the 'Former Employees' VMs in the East and West but\nkeep all the VMs for 'Former Employees' in the South which are\nalso stored in this Datacenter, by specifying the\nfollowing tag id array:\n[ [1000, 2221], [1000, 3031] ],\nwhere 1000 is the 'Former Employee' VM Tag id,\n2221 is the 'East' VM Tag id and 3031 is the 'West' VM Tag id.\nThe first inner array [1000, 2221] produces a list of VMs that are\nboth tagged with 'Former Employees' and 'East' (an intersection).\nThe second inner array [1000, 3031] produces a list of VMs that are both\ntagged with 'Former Employees' and 'West' (an intersection).\nThe outer array combines the list of VMs from the two inner\narrays. The list of resulting VMs are excluded from being protected\nthis Job."
          type: "array"
          title: "Array of Arrays of VM Tag Ids that Specify VMs to Exclude."
          items: 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
          x-go-name: "ExcludeVmTagIds"
        fullProtectionSlaTimeMins: 
          description: "If specified, this setting is number of minutes that a Job Run\nof a Full (no CBT) backup schedule is expected to complete, which is\nknown as a Service-Level Agreement (SLA).\nA SLA violation is reported when the run time of a Job Run exceeds\nthe SLA time period specified for this backup schedule."
          type: "integer"
          format: "int64"
          x-go-name: "FullProtectionSlaTimeMins"
        fullProtectionStartTime: 
          description: "Specifies the time of day to start the Full Protection Schedule.\nThis is optional and only applicable if the Protection Policy defines\na monthly or a daily Full (no CBT) Protection Schedule.\nDefault value is 02:00 AM.\ndeprecated: true"
          type: "object"
          title: "Full (no CBT) Protection Schedule Start Time."
          properties: 
            hour: 
              description: "Specifies an (0-23) hour in a day."
              type: "integer"
              format: "int32"
              x-go-name: "Hour"
            minute: 
              description: "Specifies a (0-59) minute in an hour."
              type: "integer"
              format: "int32"
              x-go-name: "Minute"
        incrementalProtectionSlaTimeMins: 
          description: "If specified, this setting is number of minutes that a Job Run\nof a CBT-based backup schedule is expected to complete, which\nis known as a Service-Level Agreement (SLA).\nA SLA violation is reported when the run time of a Job Run exceeds\nthe SLA time period specified for this backup schedule."
          type: "integer"
          format: "int64"
          x-go-name: "IncrementalProtectionSlaTimeMins"
        incrementalProtectionStartTime: 
          description: "Specifies the time of day to start the CBT-based Protection Schedule.\nThis is optional and only applicable if the Protection Policy defines\na monthly or a daily CBT-based Protection Schedule.\nDefault value is 02:00 AM.\ndeprecated: true"
          type: "object"
          title: "CBT-based Protection Schedule Start Time."
          properties: 
            hour: 
              description: "Specifies an (0-23) hour in a day."
              type: "integer"
              format: "int32"
              x-go-name: "Hour"
            minute: 
              description: "Specifies a (0-59) minute in an hour."
              type: "integer"
              format: "int32"
              x-go-name: "Minute"
        indexingPolicy: 
          description: "Specifies the settings for indexing files found in an Object\n(such as a VM) so these files can be searched and recovered.\nIn addition, it specifies inclusion and exclusion rules that determine\nthe directories to index."
          $ref: "#/definitions/IndexingPolicy"
        leverageStorageSnapshots: 
          description: "Specifies whether to leverage the storage array based snapshots for this\nbackup job. To leverage storage snapshots, the storage array has to be\nregistered as a source. If storage based snapshots can not be taken, job\nwill fallback to the default backup method."
          type: "boolean"
          x-go-name: "LeverageStorageSnapshots"
        name: 
          description: "Specifies the name of the Protection Job."
          type: "string"
          x-go-name: "Name"
        parentSourceId: 
          description: "Specifies the id of the registered Protection Source that is the\nparent of the Objects that may be protected by this Job.\nFor example when a vCenter Server is registered on a Cohesity Cluster,\nthe Cohesity Cluster assigns a unique id to this field that represents\nthe vCenter Server."
          type: "integer"
          format: "int64"
          x-go-name: "ParentSourceId"
        policyId: 
          description: "Specifies the unique id of the Protection Policy associated with\nthe Protection Job. The Policy provides retry settings,\nProtection Schedules, Priority, SLA, etc.\nThe Job defines the Storage Domain (View Box), the Objects to Protect\n(if applicable), Start Time, Indexing settings, etc."
          type: "string"
          x-go-name: "PolicyId"
        priority: 
          description: "Specifies the priority of execution for a Protection Job.\nCohesity supports concurrent backups but if the number of Jobs exceeds\nthe ability to process Jobs, the specified priority determines the\nexecution Job priority.\nThis field also specifies the replication priority."
          type: "string"
          enum: 
            - "kLow"
            - "kMedium"
            - "kHigh"
          x-go-name: "Priority"
        qosType: 
          description: "Specifies the QoS policy type to use for this Protection Job.\n'kBackupHDD' indicates the Cohesity Cluster writes data directly to\nthe HDD tier for this Protection Job. This is the recommended setting.\n'kBackupSSD' indicates the Cohesity Cluster writes data directly to\nthe SSD tier for this Protection Job. Only specify this policy if\nyou need fast ingest speed for a small number of Protection Jobs."
          type: "string"
          enum: 
            - "kBackupHDD"
            - "kBackupSSD"
          x-go-name: "QosType"
        quiesce: 
          description: "Indicates if the App-Consistent option is enabled for this Job.\nIf the option is enabled, the Cohesity Cluster quiesces\nthe file system and applications before taking\nApplication-Consistent Snapshots. VMware Tools must be installed\non the guest Operating System."
          type: "boolean"
          x-go-name: "Quiesce"
        remoteScript: 
          description: "For a Remote Adapter 'kPuppeteer' Job, this field specifies the\nsettings about the remote script that will be executed by this Job.\nOnly specify this field for Remote Adapter 'kPuppeteer' Jobs."
          type: "object"
          title: "Remote Adapter."
          properties: 
            fullBackupScript: 
              description: "Specifies the script that should run for the Full (no CBT) backup schedule\nof a Remote Adapter 'kPuppeteer' Job.\nThis field is mandatory if the Policy associated with this Job\nhas a Full (no CBT) backup schedule and this is Remote Adapter\n'kPuppeteer' Job."
              type: "object"
              title: "Full (No CBT) Script."
              properties: 
                scriptParams: 
                  description: "Specifies the parameters and values to pass into the remote script.\nFor example if the script expects values for the 'database' and\n'user' parameters, specify the parameters and values using\nthe following string: \"database=myDatabase user=me\"."
                  type: "string"
                  x-go-name: "ScriptParams"
                scriptPath: 
                  description: "Specifies the path to the script on the remote host."
                  type: "string"
                  x-go-name: "ScriptPath"
            incrementalBackupScript: 
              description: "Specifies the script that should run for the CBT-based backup\nschedule of a Remote Adapter 'kPuppeteer' Job. A CBT-based backup\nschedule is utilizing Change Block Tracking when capturing Snapshots.\nThis field is mandatory if the Policy associated with this Job\nhas a CBT-based backup schedule and this is Remote Adapter\n'kPuppeteer' Job."
              type: "object"
              title: "CBT-based Script."
              properties: 
                scriptParams: 
                  description: "Specifies the parameters and values to pass into the remote script.\nFor example if the script expects values for the 'database' and\n'user' parameters, specify the parameters and values using\nthe following string: \"database=myDatabase user=me\"."
                  type: "string"
                  x-go-name: "ScriptParams"
                scriptPath: 
                  description: "Specifies the path to the script on the remote host."
                  type: "string"
                  x-go-name: "ScriptPath"
            logBackupScript: 
              description: "Specifies the script that should run for the Log backup schedule\nof a Remote Adapter 'kPuppeteer' Job.\nThis field is mandatory if the Policy associated with this Job\nhas a Log backup schedule and this is Remote Adapter\n'kPuppeteer' Job."
              type: "object"
              title: "Log Script."
              properties: 
                scriptParams: 
                  description: "Specifies the parameters and values to pass into the remote script.\nFor example if the script expects values for the 'database' and\n'user' parameters, specify the parameters and values using\nthe following string: \"database=myDatabase user=me\"."
                  type: "string"
                  x-go-name: "ScriptParams"
                scriptPath: 
                  description: "Specifies the path to the script on the remote host."
                  type: "string"
                  x-go-name: "ScriptPath"
            remoteHost: 
              description: "Specifies the remote host where the remote scripts are executed.\nThis field must be set for Remote Adapter Jobs."
              type: "object"
              title: "Remote Host."
              properties: 
                address: 
                  description: "Specifies the address (IP, hostname or FQDN) of the remote host\nthat will run the script."
                  type: "string"
                  x-go-name: "Address"
                type: 
                  description: "Specifies the OS type of the remote host that will run the script.\nCurrently only 'kLinux' is supported.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "Type"
            username: 
              description: "Specifies the username that will be used to login to the remote host.\nFor host type 'kLinux', it is expected that user has setup the\npassword-less access. So only username field is required."
              type: "string"
              x-go-name: "Username"
        sourceIds: 
          description: "Specifies the list of Object ids from the Protection Source to\nprotect (or back up) by the Protection Job.\nAn Object in this list may be descendant of another Object in this list.\nFor example a Datacenter could be selected but its child Host excluded.\nHowever, a child VM under the Host could be explicitly\nselected to be protected. Both the Datacenter and the VM are listed."
          type: "array"
          title: "Array of Protected Source Objects."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "SourceIds"
        sourceSpecialParameters: 
          description: "Specifies additional settings that can apply to a subset of the\nSources listed in the Protection Job. For example, you can specify a list\nof files and folders to protect instead of protecting the entire Physical\nServer. If this field's setting conflicts with environmentParameters,\nthen this setting will be used."
          type: "array"
          title: "Array of Special Source Parameters."
          items: 
            $ref: "#/definitions/SourceSpecialParameter"
          x-go-name: "SourceSpecialParameters"
        startTime: 
          description: "Specifies the time of day to start the Protection Schedule.\nThis is optional and only applicable if the Protection Policy defines\na monthly or a daily Protection Schedule.\nDefault value is 02:00 AM."
          type: "object"
          title: "Protection Schedule Start Time."
          properties: 
            hour: 
              description: "Specifies an (0-23) hour in a day."
              type: "integer"
              format: "int32"
              x-go-name: "Hour"
            minute: 
              description: "Specifies a (0-59) minute in an hour."
              type: "integer"
              format: "int32"
              x-go-name: "Minute"
        timezone: 
          description: "Specifies the timezone to use when calculating time for this\nProtection Job such as the Job start time.\nSpecify the timezone in the following format: \"Area/Location\",\nfor example: \"America/New_York\"."
          type: "string"
          x-go-name: "Timezone"
        viewBoxId: 
          description: "Specifies the Storage Domain (View Box) id where this Job writes data."
          type: "integer"
          format: "int64"
          x-go-name: "ViewBoxId"
        viewName: 
          description: "For a Remote Adapter 'kPuppeteer' Job or a 'kView' Job, this field\nspecifies a View name that should be protected. Specify this field when\ncreating a Protection Job for the first time for a View. If this field\nis specified, ParentSourceId, SourceIds, and ExcludeSourceIds should not\nbe specified."
          type: "string"
          x-go-name: "ViewName"
        vmTagIds: 
          description: "Optionally specify a list of VMs to protect by listing\nProtection Source ids of VM Tags in this two dimensional array.\nUsing this two dimensional array of Tag ids, the Cluster\ngenerates a list of VMs to protect which are derived from\nintersections of the inner arrays and union of the outer array,\nas shown by the following example.\nTo protect only 'Eng' VMs in the East and all the VMs in the West,\nspecify the following tag id array:\n[ [1101, 2221], [3031] ],\nwhere 1101 is the 'Eng' VM Tag id, 2221 is the 'East' VM Tag id and\n3031 is the 'West' VM Tag id. The inner array [1101, 2221] produces a\nlist of VMs that are both tagged with 'Eng' and 'East'\n(an intersection). The outer array combines the list from the inner\narray with list of VMs tagged with 'West' (a union). The list\nof resulting VMs are protected by this Job."
          type: "array"
          title: "Array of Arrays of VMs Tags Ids that Specify VMs to Protect."
          items: 
            type: "array"
            items: 
              type: "integer"
              format: "int64"
          x-go-name: "VmTagIds"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionJobRunStats: 
      description: "Specifies statistics about a Protection Job Run.\nThis contains the Job Run level statistics."
      type: "object"
      title: "Protection Job Run Statistics."
      properties: 
        admittedTimeUsecs: 
          description: "Specifies the time the task was unqueued from the queue to start running.\nThis field can be used to determine the following times:\ninitial-wait-time = admittedTimeUsecs - startTimeUsecs\nrun-time = endTimeUsecs - admittedTimeUsecs\nIf the task ends up waiting in other queues, then actual run-time will\nbe smaller than the run-time computed this way.\nThis field is only populated for Backup tasks currently."
          type: "integer"
          format: "int64"
          x-go-name: "AdmittedTimeUsecs"
        endTimeUsecs: 
          description: "Specifies the end time of the Protection Run. The end time\nis specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "EndTimeUsecs"
        numAppInstances: 
          description: "Specifies the number of application instances backed up by this Run.\nFor example if the environment type is kSQL, this field contains\nthe number of SQL Server instances."
          type: "integer"
          format: "int32"
          x-go-name: "NumAppInstances"
        numAppObjects: 
          description: "Specifies the number of application objects in total backed up by this\nRun. For example, if the environment type is kSQL, this number is for\nall of the SQL server databases"
          type: "integer"
          format: "int32"
          x-go-name: "NumAppObjects"
        numCanceledTasks: 
          description: "Specifies the number of backup tasks that were canceled."
          type: "integer"
          format: "int64"
          x-go-name: "NumCanceledTasks"
        numFailedTasks: 
          description: "Specifies the number of backup tasks that failed."
          type: "integer"
          format: "int64"
          x-go-name: "NumFailedTasks"
        numSuccessfulTasks: 
          description: "Specifies the number of backup tasks that completed successfully."
          type: "integer"
          format: "int64"
          x-go-name: "NumSuccessfulTasks"
        startTimeUsecs: 
          description: "Specifies the start time of the Protection Run. The start time\nis specified as a Unix epoch Timestamp (in microseconds).\nThis time is when the task is queued to an internal queue where tasks\nare waiting to run."
          type: "integer"
          format: "int64"
          x-go-name: "StartTimeUsecs"
        timeTakenUsecs: 
          description: "Specifies the actual execution time for the protection run to complete\nthe backup task and the copy tasks. This time will not include the\ntime waited in various internal queues.\nThis field is only populated for Backup tasks currently."
          type: "integer"
          format: "int64"
          x-go-name: "TimeTakenUsecs"
        totalBytesReadFromSource: 
          description: "Specifies the total amount of data read from the source (so far)."
          type: "integer"
          format: "int64"
          x-go-name: "TotalBytesReadFromSource"
        totalBytesToReadFromSource: 
          description: "Specifies the total amount of data expected to be read from the\nsource."
          type: "integer"
          format: "int64"
          x-go-name: "TotalBytesToReadFromSource"
        totalLogicalBackupSizeBytes: 
          description: "Specifies the size of the source object (such as a VM) protected by\nthis task on the primary storage after the snapshot is taken.\nThe logical size of the data on the source if the\ndata is fully hydrated or expanded and not reduced\nby change-block tracking, compression and deduplication."
          type: "integer"
          format: "int64"
          x-go-name: "TotalLogicalBackupSizeBytes"
        totalPhysicalBackupSizeBytes: 
          description: "Specifies the total amount of physical space used on the Cohesity\nCluster to store the protected object after being reduced by change-block\ntracking, compression and deduplication. For example, if the logical\nbackup size is 1GB, but only 1MB was used on the Cohesity Cluster\nto store it, this field be equal to 1MB."
          type: "integer"
          format: "int64"
          x-go-name: "TotalPhysicalBackupSizeBytes"
        totalSourceSizeBytes: 
          description: "Specifies the size of the source object (such as a VM) protected by\nthis task on the primary storage before the snapshot is taken.\nThe logical size of the data on the source if the\ndata is fully hydrated or expanded and not reduced\nby change-block tracking, compression and deduplication."
          type: "integer"
          format: "int64"
          x-go-name: "TotalSourceSizeBytes"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionJobSummaryStats: 
      description: "Specifies statistics about a Protection Job."
      type: "object"
      title: "Protection Job Summary Statistics."
      properties: 
        averageRunTimeUsecs: 
          description: "Specifies the average run time of all successful Protection Runs.\nIt is specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "AverageRunTimeUsecs"
        fastestRunTimeUsecs: 
          description: "Specifies the time taken for a fastest successful Protection Run so far.\nIt is specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "FastestRunTimeUsecs"
        numCanceledRuns: 
          description: "Specifies the number of runs that were canceled."
          type: "integer"
          format: "int64"
          x-go-name: "NumCanceledRuns"
        numFailedRuns: 
          description: "Specifies the number of runs that failed to finish."
          type: "integer"
          format: "int64"
          x-go-name: "NumFailedRuns"
        numSlaViolations: 
          description: "Specifies the number of runs having SLA violations."
          type: "integer"
          format: "int64"
          x-go-name: "NumSlaViolations"
        numSuccessfulRuns: 
          description: "Specifies the number of runs that finished successfully."
          type: "integer"
          format: "int64"
          x-go-name: "NumSuccessfulRuns"
        slowestRunTimeUsecs: 
          description: "Specifies the time taken for a slowest successful Protection Run so far.\nIt is specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "SlowestRunTimeUsecs"
        totalBytesReadFromSource: 
          description: "Specifies the total amount of data read from the source (so far)."
          type: "integer"
          format: "int64"
          x-go-name: "TotalBytesReadFromSource"
        totalLogicalBackupSizeBytes: 
          description: "Specifies the size of the source object (such as a VM) protected by\nthis task on the primary storage after the snapshot is taken.\nThe logical size of the data on the source if the\ndata is fully hydrated or expanded and not reduced\nby change-block tracking, compression and deduplication."
          type: "integer"
          format: "int64"
          x-go-name: "TotalLogicalBackupSizeBytes"
        totalPhysicalBackupSizeBytes: 
          description: "Specifies the total amount of physical space used on the Cohesity\nCluster to store the protected object after being reduced by change-block\ntracking, compression and deduplication. For example, if the logical\nbackup size is 1GB, but only 1MB was used on the Cohesity Cluster\nto store it, this field be equal to 1MB."
          type: "integer"
          format: "int64"
          x-go-name: "TotalPhysicalBackupSizeBytes"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionPolicy: 
      description: "Specifies information about a Protection Policy."
      type: "object"
      title: "Protection Policy."
      properties: 
        blackoutPeriods: 
          description: "If specified, this field defines black periods when new Job Runs\nare not started. If a Job Run has been scheduled but not yet\nexecuted and the blackout period starts, the behavior depends on\nthe policy field AbortInBlackoutPeriod."
          type: "array"
          title: "Array of Blackout Periods."
          items: 
            $ref: "#/definitions/BlackoutPeriod"
          x-go-name: "BlackoutPeriods"
        cloudDeployPolicies: 
          description: "Specifies settings for copying Snapshots to Cloud.\nCloudDeploy target where backup snapshots may be converted and stored.\nIt also defines the retention of copied Snapshots on the Cloud."
          type: "array"
          title: "Array of Cloud Deploy Policies."
          items: 
            $ref: "#/definitions/SnapshotCloudCopyPolicy"
          x-go-name: "SnapshotCloudCopyPolicies"
        daysToKeep: 
          description: "Specifies how many days to retain Snapshots on the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "DaysToKeep"
        daysToKeepLog: 
          description: "Specifies the number of days to retain log run if Log Schedule exists."
          type: "integer"
          format: "int64"
          x-go-name: "DaysToKeepLog"
        daysToKeepSystem: 
          description: "Specifies the number of days to retain system backups made for bare metal\nrecovery. This field is applicable if systemSchedulingPolicy is specified."
          type: "integer"
          format: "int64"
          x-go-name: "DaysToKeepSystem"
        description: 
          description: "Description of the Protection Policy."
          type: "string"
          x-go-name: "Description"
        extendedRetentionPolicies: 
          description: "Specifies additional retention policies that should be applied to the\nbackup snapshots. A backup snapshot will be retained up to a time that is\nthe maximum of all retention policies that are applicable to it."
          type: "array"
          items: 
            $ref: "#/definitions/ExtendedRetentionPolicy"
          x-go-name: "ExtendedRetentionPolicies"
        fullSchedulingPolicy: 
          description: "Specifies the Full (no CBT) backup schedule of a Protection Job and\nhow long Snapshots captured by this schedule are retained on the\nCohesity Cluster."
          type: "object"
          title: "Full (no CBT) Job Policy."
          properties: 
            continuousSchedule: 
              description: "Specifies the time interval between two Job Runs of a continuous backup\nschedule and any blackout periods when new Job Runs should NOT be started.\nSet if periodicity is kContinuous."
              type: "object"
              title: "Continuous Schedule."
              properties: 
                backupIntervalMins: 
                  description: "If specified, this field defines the time interval in minutes when\nnew Job Runs are started."
                  type: "integer"
                  format: "int64"
                  x-go-name: "BackupIntervalMins"
            dailySchedule: 
              description: "Specifies a daily or weekly backup schedule.\nSet if periodicity is kDaily."
              type: "object"
              title: "Daily & Weekly Schedule."
              properties: 
                days: 
                  description: "Specifies a list of days of the week when to start Job Runs.\nIf no days are specified, the Jobs Runs will run every day of the week.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
                  type: "array"
                  title: "Array of Days."
                  items: 
                    type: "string"
                    enum: 
                      - "kSunday"
                      - "kMonday"
                      - "kTuesday"
                      - "kWednesday"
                      - "kThursday"
                      - "kFriday"
                      - "kSaturday"
                  x-go-name: "Days"
            monthlySchedule: 
              description: "Specifies a monthly backup schedule.\nSet if periodicity is kMonthly."
              type: "object"
              title: "Monthly Schedule."
              properties: 
                day: 
                  description: "Specifies the day of the week (such as 'kMonday') to start the Job Run.\nUsed with day count to define the day in the month to start\nthe Job Run.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
                  type: "string"
                  enum: 
                    - "kSunday"
                    - "kMonday"
                    - "kTuesday"
                    - "kWednesday"
                    - "kThursday"
                    - "kFriday"
                    - "kSaturday"
                  x-go-name: "Day"
                dayCount: 
                  description: "Specifies the day count in the month (such as 'kThird') to start\nthe Job Run.\nUsed in combination with day to define the day in the month to start\nthe Job Run.\nSpecifies the day count in the month to start the backup.\nFor example if day count is set to 'kThird' and day is set to 'kMonday',\na backup is performed on the third Monday of every month."
                  type: "string"
                  enum: 
                    - "kFirst"
                    - "kSecond"
                    - "kThird"
                    - "kFourth"
                    - "kLast"
                  x-go-name: "DayCount"
            periodicity: 
              description: "Specifies how often to start new Job Runs of a Protection Job.\n'kDaily' means new Job Runs start daily.\n'kMonthly' means new Job Runs start monthly.\n'kContinuous' means new Job Runs repetitively start at the\nbeginning of the specified time interval (in hours or minutes).\n'kOneOff' means this is an additional schedule."
              type: "string"
              enum: 
                - "kContinuous"
                - "kDaily"
                - "kMonthly"
                - "kOneOff"
              x-go-name: "Periodicity"
        id: 
          description: "Specifies a unique Policy id assigned by the Cohesity Cluster."
          type: "string"
          x-go-name: "Id"
        incrementalSchedulingPolicy: 
          description: "Specifies the CBT-based backup schedule of a Protection Job and\nhow long Snapshots captured by this schedule are\nretained on the Cohesity Cluster."
          type: "object"
          title: "CBT-based Job Policy."
          properties: 
            continuousSchedule: 
              description: "Specifies the time interval between two Job Runs of a continuous backup\nschedule and any blackout periods when new Job Runs should NOT be started.\nSet if periodicity is kContinuous."
              type: "object"
              title: "Continuous Schedule."
              properties: 
                backupIntervalMins: 
                  description: "If specified, this field defines the time interval in minutes when\nnew Job Runs are started."
                  type: "integer"
                  format: "int64"
                  x-go-name: "BackupIntervalMins"
            dailySchedule: 
              description: "Specifies a daily or weekly backup schedule.\nSet if periodicity is kDaily."
              type: "object"
              title: "Daily & Weekly Schedule."
              properties: 
                days: 
                  description: "Specifies a list of days of the week when to start Job Runs.\nIf no days are specified, the Jobs Runs will run every day of the week.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
                  type: "array"
                  title: "Array of Days."
                  items: 
                    type: "string"
                    enum: 
                      - "kSunday"
                      - "kMonday"
                      - "kTuesday"
                      - "kWednesday"
                      - "kThursday"
                      - "kFriday"
                      - "kSaturday"
                  x-go-name: "Days"
            monthlySchedule: 
              description: "Specifies a monthly backup schedule.\nSet if periodicity is kMonthly."
              type: "object"
              title: "Monthly Schedule."
              properties: 
                day: 
                  description: "Specifies the day of the week (such as 'kMonday') to start the Job Run.\nUsed with day count to define the day in the month to start\nthe Job Run.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
                  type: "string"
                  enum: 
                    - "kSunday"
                    - "kMonday"
                    - "kTuesday"
                    - "kWednesday"
                    - "kThursday"
                    - "kFriday"
                    - "kSaturday"
                  x-go-name: "Day"
                dayCount: 
                  description: "Specifies the day count in the month (such as 'kThird') to start\nthe Job Run.\nUsed in combination with day to define the day in the month to start\nthe Job Run.\nSpecifies the day count in the month to start the backup.\nFor example if day count is set to 'kThird' and day is set to 'kMonday',\na backup is performed on the third Monday of every month."
                  type: "string"
                  enum: 
                    - "kFirst"
                    - "kSecond"
                    - "kThird"
                    - "kFourth"
                    - "kLast"
                  x-go-name: "DayCount"
            periodicity: 
              description: "Specifies how often to start new Job Runs of a Protection Job.\n'kDaily' means new Job Runs start daily.\n'kMonthly' means new Job Runs start monthly.\n'kContinuous' means new Job Runs repetitively start at the\nbeginning of the specified time interval (in hours or minutes).\n'kOneOff' means this is an additional schedule."
              type: "string"
              enum: 
                - "kContinuous"
                - "kDaily"
                - "kMonthly"
                - "kOneOff"
              x-go-name: "Periodicity"
        lastModifiedTimeMsecs: 
          description: "Specifies the epoch time (in milliseconds) when the Protection Policy\nwas last modified."
          type: "integer"
          format: "int64"
          x-go-name: "LastModifiedTimeMsecs"
        logSchedulingPolicy: 
          description: "Specifies the Log backup schedule of a Protection Job and how long\nlog files captured by this schedule are retained on the\nCohesity Cluster."
          title: "Log Job Policy."
          $ref: "#/definitions/SchedulingPolicy"
        name: 
          description: "Specifies the name of the Protection Policy."
          type: "string"
          x-go-name: "Name"
        retries: 
          description: "Specifies the number of times to retry capturing Snapshots before\nthe Job Run fails."
          type: "integer"
          format: "int32"
          x-go-name: "Retries"
        retryIntervalMins: 
          description: "Specifies the number of minutes before retrying a failed Protection Job."
          type: "integer"
          format: "int32"
          x-go-name: "RetryIntervalMins"
        skipIntervalMins: 
          description: "Specifies the period of time before skipping the execution of new\nJob Runs if an existing queued Job Run of the same Protection Job\nhas not started. For example if this field is set to 30 minutes and\na Job Run is scheduled to start at 5:00 AM every day but does not start\ndue to conflicts (such as too many Jobs are running). If the new Job Run\ndoes not start by 5:30AM, the Cohesity Cluster will skip the new Job Run.\nIf the original Job Run completes before 5:30AM the next day, a new\nJob Run is created and starts executing.\nThis field is optional."
          type: "integer"
          format: "int32"
          x-go-name: "SkipIntervalMins"
        snapshotArchivalCopyPolicies: 
          description: "Specifies settings for copying Snapshots to  Archival External Targets\n(such as AWS or Tape).\nIt also defines the retention of copied Snapshots on an External Targets\nsuch as AWS and Tape."
          type: "array"
          title: "Array of External Targets."
          items: 
            $ref: "#/definitions/SnapshotArchivalCopyPolicy"
          x-go-name: "SnapshotArchivalCopyPolicies"
        snapshotReplicationCopyPolicies: 
          description: "Specifies settings for copying Snapshots to Remote Clusters.\nIt also defines the retention of copied Snapshots on a Remote Cluster."
          type: "array"
          title: "Array of Remote Clusters."
          items: 
            $ref: "#/definitions/SnapshotReplicationCopyPolicy"
          x-go-name: "SnapshotReplicationCopyPolicies"
        systemSchedulingPolicy: 
          description: "Specifies the system backup schedule for agents running on servers to run\nlow frequency backup jobs. Images created as part of the backup can be\nused to perform a \"bare metal\" recovery."
          title: "Agent driven System Job Policy."
          $ref: "#/definitions/SchedulingPolicy"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionPolicyRequest: 
      description: "Specifies information about a Protection Policy."
      type: "object"
      title: "Protection Policy Request."
      properties: 
        blackoutPeriods: 
          description: "If specified, this field defines black periods when new Job Runs\nare not started. If a Job Run has been scheduled but not yet\nexecuted and the blackout period starts, the behavior depends on\nthe policy field AbortInBlackoutPeriod."
          type: "array"
          title: "Array of Blackout Periods."
          items: 
            $ref: "#/definitions/BlackoutPeriod"
          x-go-name: "BlackoutPeriods"
        cloudDeployPolicies: 
          description: "Specifies settings for copying Snapshots to Cloud.\nCloudDeploy target where backup snapshots may be converted and stored.\nIt also defines the retention of copied Snapshots on the Cloud."
          type: "array"
          title: "Array of Cloud Deploy Policies."
          items: 
            $ref: "#/definitions/SnapshotCloudCopyPolicy"
          x-go-name: "SnapshotCloudCopyPolicies"
        daysToKeep: 
          description: "Specifies how many days to retain Snapshots on the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "DaysToKeep"
        daysToKeepLog: 
          description: "Specifies the number of days to retain log run if Log Schedule exists."
          type: "integer"
          format: "int64"
          x-go-name: "DaysToKeepLog"
        daysToKeepSystem: 
          description: "Specifies the number of days to retain system backups made for bare metal\nrecovery. This field is applicable if systemSchedulingPolicy is specified."
          type: "integer"
          format: "int64"
          x-go-name: "DaysToKeepSystem"
        description: 
          description: "Description of the Protection Policy."
          type: "string"
          x-go-name: "Description"
        extendedRetentionPolicies: 
          description: "Specifies additional retention policies that should be applied to the\nbackup snapshots. A backup snapshot will be retained up to a time that is\nthe maximum of all retention policies that are applicable to it."
          type: "array"
          items: 
            $ref: "#/definitions/ExtendedRetentionPolicy"
          x-go-name: "ExtendedRetentionPolicies"
        fullSchedulingPolicy: 
          description: "Specifies the Full (no CBT) backup schedule of a Protection Job and\nhow long Snapshots captured by this schedule are retained on the\nCohesity Cluster."
          type: "object"
          title: "Full (no CBT) Job Policy."
          properties: 
            continuousSchedule: 
              description: "Specifies the time interval between two Job Runs of a continuous backup\nschedule and any blackout periods when new Job Runs should NOT be started.\nSet if periodicity is kContinuous."
              type: "object"
              title: "Continuous Schedule."
              properties: 
                backupIntervalMins: 
                  description: "If specified, this field defines the time interval in minutes when\nnew Job Runs are started."
                  type: "integer"
                  format: "int64"
                  x-go-name: "BackupIntervalMins"
            dailySchedule: 
              description: "Specifies a daily or weekly backup schedule.\nSet if periodicity is kDaily."
              type: "object"
              title: "Daily & Weekly Schedule."
              properties: 
                days: 
                  description: "Specifies a list of days of the week when to start Job Runs.\nIf no days are specified, the Jobs Runs will run every day of the week.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
                  type: "array"
                  title: "Array of Days."
                  items: 
                    type: "string"
                    enum: 
                      - "kSunday"
                      - "kMonday"
                      - "kTuesday"
                      - "kWednesday"
                      - "kThursday"
                      - "kFriday"
                      - "kSaturday"
                  x-go-name: "Days"
            monthlySchedule: 
              description: "Specifies a monthly backup schedule.\nSet if periodicity is kMonthly."
              type: "object"
              title: "Monthly Schedule."
              properties: 
                day: 
                  description: "Specifies the day of the week (such as 'kMonday') to start the Job Run.\nUsed with day count to define the day in the month to start\nthe Job Run.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
                  type: "string"
                  enum: 
                    - "kSunday"
                    - "kMonday"
                    - "kTuesday"
                    - "kWednesday"
                    - "kThursday"
                    - "kFriday"
                    - "kSaturday"
                  x-go-name: "Day"
                dayCount: 
                  description: "Specifies the day count in the month (such as 'kThird') to start\nthe Job Run.\nUsed in combination with day to define the day in the month to start\nthe Job Run.\nSpecifies the day count in the month to start the backup.\nFor example if day count is set to 'kThird' and day is set to 'kMonday',\na backup is performed on the third Monday of every month."
                  type: "string"
                  enum: 
                    - "kFirst"
                    - "kSecond"
                    - "kThird"
                    - "kFourth"
                    - "kLast"
                  x-go-name: "DayCount"
            periodicity: 
              description: "Specifies how often to start new Job Runs of a Protection Job.\n'kDaily' means new Job Runs start daily.\n'kMonthly' means new Job Runs start monthly.\n'kContinuous' means new Job Runs repetitively start at the\nbeginning of the specified time interval (in hours or minutes).\n'kOneOff' means this is an additional schedule."
              type: "string"
              enum: 
                - "kContinuous"
                - "kDaily"
                - "kMonthly"
                - "kOneOff"
              x-go-name: "Periodicity"
        incrementalSchedulingPolicy: 
          description: "Specifies the CBT-based backup schedule of a Protection Job and\nhow long Snapshots captured by this schedule are\nretained on the Cohesity Cluster."
          type: "object"
          title: "CBT-based Job Policy."
          properties: 
            continuousSchedule: 
              description: "Specifies the time interval between two Job Runs of a continuous backup\nschedule and any blackout periods when new Job Runs should NOT be started.\nSet if periodicity is kContinuous."
              type: "object"
              title: "Continuous Schedule."
              properties: 
                backupIntervalMins: 
                  description: "If specified, this field defines the time interval in minutes when\nnew Job Runs are started."
                  type: "integer"
                  format: "int64"
                  x-go-name: "BackupIntervalMins"
            dailySchedule: 
              description: "Specifies a daily or weekly backup schedule.\nSet if periodicity is kDaily."
              type: "object"
              title: "Daily & Weekly Schedule."
              properties: 
                days: 
                  description: "Specifies a list of days of the week when to start Job Runs.\nIf no days are specified, the Jobs Runs will run every day of the week.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
                  type: "array"
                  title: "Array of Days."
                  items: 
                    type: "string"
                    enum: 
                      - "kSunday"
                      - "kMonday"
                      - "kTuesday"
                      - "kWednesday"
                      - "kThursday"
                      - "kFriday"
                      - "kSaturday"
                  x-go-name: "Days"
            monthlySchedule: 
              description: "Specifies a monthly backup schedule.\nSet if periodicity is kMonthly."
              type: "object"
              title: "Monthly Schedule."
              properties: 
                day: 
                  description: "Specifies the day of the week (such as 'kMonday') to start the Job Run.\nUsed with day count to define the day in the month to start\nthe Job Run.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
                  type: "string"
                  enum: 
                    - "kSunday"
                    - "kMonday"
                    - "kTuesday"
                    - "kWednesday"
                    - "kThursday"
                    - "kFriday"
                    - "kSaturday"
                  x-go-name: "Day"
                dayCount: 
                  description: "Specifies the day count in the month (such as 'kThird') to start\nthe Job Run.\nUsed in combination with day to define the day in the month to start\nthe Job Run.\nSpecifies the day count in the month to start the backup.\nFor example if day count is set to 'kThird' and day is set to 'kMonday',\na backup is performed on the third Monday of every month."
                  type: "string"
                  enum: 
                    - "kFirst"
                    - "kSecond"
                    - "kThird"
                    - "kFourth"
                    - "kLast"
                  x-go-name: "DayCount"
            periodicity: 
              description: "Specifies how often to start new Job Runs of a Protection Job.\n'kDaily' means new Job Runs start daily.\n'kMonthly' means new Job Runs start monthly.\n'kContinuous' means new Job Runs repetitively start at the\nbeginning of the specified time interval (in hours or minutes).\n'kOneOff' means this is an additional schedule."
              type: "string"
              enum: 
                - "kContinuous"
                - "kDaily"
                - "kMonthly"
                - "kOneOff"
              x-go-name: "Periodicity"
        logSchedulingPolicy: 
          description: "Specifies the Log backup schedule of a Protection Job and how long\nlog files captured by this schedule are retained on the\nCohesity Cluster."
          title: "Log Job Policy."
          $ref: "#/definitions/SchedulingPolicy"
        name: 
          description: "Specifies the name of the Protection Policy."
          type: "string"
          x-go-name: "Name"
        retries: 
          description: "Specifies the number of times to retry capturing Snapshots before\nthe Job Run fails."
          type: "integer"
          format: "int32"
          x-go-name: "Retries"
        retryIntervalMins: 
          description: "Specifies the number of minutes before retrying a failed Protection Job."
          type: "integer"
          format: "int32"
          x-go-name: "RetryIntervalMins"
        skipIntervalMins: 
          description: "Specifies the period of time before skipping the execution of new\nJob Runs if an existing queued Job Run of the same Protection Job\nhas not started. For example if this field is set to 30 minutes and\na Job Run is scheduled to start at 5:00 AM every day but does not start\ndue to conflicts (such as too many Jobs are running). If the new Job Run\ndoes not start by 5:30AM, the Cohesity Cluster will skip the new Job Run.\nIf the original Job Run completes before 5:30AM the next day, a new\nJob Run is created and starts executing.\nThis field is optional."
          type: "integer"
          format: "int32"
          x-go-name: "SkipIntervalMins"
        snapshotArchivalCopyPolicies: 
          description: "Specifies settings for copying Snapshots to  Archival External Targets\n(such as AWS or Tape).\nIt also defines the retention of copied Snapshots on an External Targets\nsuch as AWS and Tape."
          type: "array"
          title: "Array of External Targets."
          items: 
            $ref: "#/definitions/SnapshotArchivalCopyPolicy"
          x-go-name: "SnapshotArchivalCopyPolicies"
        snapshotReplicationCopyPolicies: 
          description: "Specifies settings for copying Snapshots to Remote Clusters.\nIt also defines the retention of copied Snapshots on a Remote Cluster."
          type: "array"
          title: "Array of Remote Clusters."
          items: 
            $ref: "#/definitions/SnapshotReplicationCopyPolicy"
          x-go-name: "SnapshotReplicationCopyPolicies"
        systemSchedulingPolicy: 
          description: "Specifies the system backup schedule for agents running on servers to run\nlow frequency backup jobs. Images created as part of the backup can be\nused to perform a \"bare metal\" recovery."
          title: "Agent driven System Job Policy."
          $ref: "#/definitions/SchedulingPolicy"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionRunInstance: 
      description: "A Job Run can have one Backup Run and zero or more Copy Runs."
      type: "object"
      title: "Specifies the status of one Job Run."
      properties: 
        backupRun: 
          description: "Specifies details about the Backup task.\nA Backup task captures the original backup snapshots."
          $ref: "#/definitions/BackupRun"
        copyRun: 
          description: "Specifies details about the Copy tasks of this Job Run.\nA Copy task copies the captured snapshots to an external target\nor a Remote Cohesity Cluster."
          type: "array"
          title: "Array of Copy Run Tasks."
          items: 
            $ref: "#/definitions/CopyRun"
          x-go-name: "CopyRuns"
        jobId: 
          description: "Specifies the id of the Protection Job that was run."
          type: "integer"
          format: "int64"
          x-go-name: "JobId"
        jobName: 
          description: "Specifies the name of the Protection Job name that was run."
          type: "string"
          x-go-name: "JobName"
        jobUid: 
          description: "Specifies the globally unique id of the Protection Job that was run."
          type: "object"
          title: "Unique Global Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        viewBoxId: 
          description: "Specifies the Storage Domain (View Box) to store the backed up data.\nSpecify the id of the Storage Domain (View Box)."
          type: "integer"
          format: "int64"
          x-go-name: "ViewBoxId"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionSource: 
      description: "Specifies a generic structure that represents a node\nin the Protection Source tree. Node details will depend on the\nenvironment of the Protection Source."
      type: "object"
      title: "Protection Source."
      properties: 
        acropolisProtectionSource: 
          description: "Specifies details about an Acropolis Protection Source\nwhen the environment is set to 'kAcropolis'."
          type: "object"
          title: "Acropolis Protection Source."
          properties: 
            clusterUuid: 
              description: "Specifies the UUID of the Acropolis cluster instance to which this\nentity belongs to."
              type: "string"
              x-go-name: "ClusterUuid"
            description: 
              description: "Specifies a description about the Protection Source."
              type: "string"
              x-go-name: "Description"
            mountPath: 
              description: "Specifies whether the the VM is an agent VM. This is applicable to\nacropolis entity of type kVirtualMachine."
              type: "boolean"
              x-go-name: "IsAgentVm"
            name: 
              description: "Specifies the name of the Acropolis Object."
              type: "string"
              x-go-name: "Name"
            type: 
              description: "Specifies the type of an Acropolis Protection Source Object such as\n'kPrismCentral', 'kHost', 'kNetwork', etc.\nSpecifies the type of an Acropolis source entity.\n'kPrismCentral' indicates a collection of multiple Nutanix clusters.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an Acropolis host.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kStorageContainer' represents a storage container object."
              type: "string"
              enum: 
                - "kPrismCentral"
                - "kStandaloneCluster"
                - "kCluster"
                - "kHost"
                - "kVirtualMachine"
                - "kNetwork"
                - "kStorageContainer"
              x-go-name: "Type"
            uuid: 
              description: "Specifies the UUID of the Acropolis Object. This is unique within the\ncluster instance. Together with clusterUuid, this entity is unique\nwithin the Acropolis environment."
              type: "string"
              x-go-name: "Uuid"
        awsProtectionSource: 
          description: "Specifies details about an AWS Protection Source\nwhen the environment is set to 'kAWS'."
          type: "object"
          title: "AWS Protection Source."
          properties: 
            hostType: 
              description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
              type: "string"
              enum: 
                - "kLinux"
                - "kWindows"
              x-go-name: "HostType"
            ipAddresses: 
              description: "Specifies the IP address of the entity of type 'kVirtualMachine'."
              type: "string"
              x-go-name: "IpAddress"
            name: 
              description: "Specifies the name of the AWS Object set by the Cloud Provider."
              type: "string"
              x-go-name: "Name"
            ownerId: 
              description: "Specifies the owner id of the resource in AWS environment. With type,\nname and ownerId gives a globally unique identity to the AWS entity."
              type: "string"
              x-go-name: "OwnerId"
            regionId: 
              description: "Specifies the region Id of the entity if the entity is an EC2 instance."
              type: "string"
              x-go-name: "RegionId"
            resourceId: 
              description: "Specifies the unique Id of the resource given by the cloud provider."
              type: "string"
              x-go-name: "ResourceId"
            type: 
              description: "Specifies the type of an AWS Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an AWS source entity.\n'kIAMUser' indicates a unique user within an AWS account.\n'kRegion' indicates a geographical region in the global infrastructure.\n'kAvailabilityZone' indicates an availability zone within a region.\n'kEC2Instance' indicates a Virtual Machine running in AWS environment.\n'kVPC' indicates a virtual private cloud (VPC) network within AWS.\n'kSubnet' indicates a subnet inside the VPC.\n'kNetworkSecurityGroup' represents a network security group.\n'kInstanceType' represents various machine types.\n'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine."
              type: "string"
              enum: 
                - "kIAMUser"
                - "kRegion"
                - "kAvailabilityZone"
                - "kEC2Instance"
                - "kVPC"
                - "kSubnet"
                - "kNetworkSecurityGroup"
                - "kInstanceType"
                - "kKeyPair"
              x-go-name: "Type"
            userAccountId: 
              description: "Specifies the account id derived from the ARN of the user."
              type: "string"
              x-go-name: "UserAccountId"
            userResourceName: 
              description: "Specifies the Amazon Resource Name (ARN) of the user."
              type: "string"
              x-go-name: "UserResourceName"
        azureProtectionSource: 
          description: "Specifies details about an Azure Protection Source\nwhen the environment is set to 'kAzure'."
          type: "object"
          title: "Azure Protection Source."
          properties: 
            hostType: 
              description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
              type: "string"
              enum: 
                - "kLinux"
                - "kWindows"
              x-go-name: "HostType"
            ipAddresses: 
              type: "array"
              title: "Specifies a list of IP addresses for entities of type 'kVirtualMachine'."
              items: 
                type: "string"
              x-go-name: "IpAddresses"
            location: 
              description: "Specifies the physical location of the resource group."
              type: "string"
              x-go-name: "Location"
            memoryMbytes: 
              description: "Specifies the amount of memory in MegaBytes of the Azure resource of\ntype 'kComputeOptions'."
              type: "integer"
              format: "int64"
              x-go-name: "MemoryMbytes"
            name: 
              description: "Specifies the name of the Azure Object set by the Cloud Provider.\nIf the provider did not set a name for the object, this field is not set."
              type: "string"
              x-go-name: "Name"
            numCores: 
              description: "Specifies the number of CPU cores of the Azure resource of\ntype 'kComputeOptions'."
              type: "integer"
              format: "int32"
              x-go-name: "NumCores"
            resourceId: 
              description: "Specifies the unique Id of the resource in Azure environment."
              type: "string"
              x-go-name: "ResourceId"
            type: 
              description: "Specifies the type of an Azure Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an Azure source entity.\n'kSubscription' indicates a billing unit within Azure account.\n'kResourceGroup' indicates a container that holds related resources.\n'kVirtualMachine' indicates a Virtual Machine in Azure environment.\n'kStorageAccount' represents a collection of storage containers.\n'kStorageKey' indicates a key required to access the storage account.\n'kStorageContainer' represents a storage container within a storage account.\n'kStorageBlob' represents a storage blog within a storage container.\n'kNetworkSecurityGroup' represents a network security group.\n'kVirtualNetwork' represents a virtual network.\n'kSubnet' represents a subnet within the virtual network.\n'kComputeOptions' indicates the number of CPU cores and memory size available for a type of a Virtual Machine."
              type: "string"
              enum: 
                - "kSubscription"
                - "kResourceGroup"
                - "kVirtualMachine"
                - "kStorageAccount"
                - "kStorageKey"
                - "kStorageContainer"
                - "kStorageBlob"
                - "kNetworkSecurityGroup"
                - "kVirtualNetwork"
                - "kSubnet"
                - "kComputeOptions"
              x-go-name: "Type"
        environment: 
          description: "Specifies the environment (such as 'kVMware' or 'kSQL') where the\nProtection Source exists. Depending on the environment, one of the\nfollowing Protection Sources are initialized.\n\nNOTE: kPuppeteer refers to Cohesity's Remote Adapter.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "string"
          enum: 
            - "kVMware"
            - "kSQL"
            - "kView"
            - "kPuppeteer"
            - "kPhysical"
            - "kPure"
            - "kNetapp"
            - "kGenericNas"
            - "kHyperV"
            - "kAcropolis"
            - "kAzure"
          x-go-name: "Environment"
        hypervProtectionSource: 
          description: "Specifies details about a HyperV Protection Source\nwhen the environment is set to 'kHyperV'."
          type: "object"
          title: "HyperV Protection Source."
          properties: 
            agentInfo: 
              description: "Specifies information about the agent running on the HyperV objects."
              $ref: "#/definitions/AgentInformation"
            backupType: 
              description: "Specifies the type of backup supported by the VM.\n'kRctBackup', 'kVssBackup'\nSpecifies the type of an HyperV datastore object.\n'kRctBackup' indicates backup is done using RCT/checkpoints.\n'kVssBackup' indicates backup is done using VSS."
              type: "string"
              enum: 
                - "kRctBackup"
                - "kVssBackup"
              x-go-name: "BackupType"
            clusterName: 
              description: "Specifies the cluster name for 'kHostCluster' objects."
              type: "string"
              x-go-name: "ClusterName"
            datastoreInfo: 
              description: "Specifies additional information for 'kDatastore' objects."
              $ref: "#/definitions/HypervDatastore"
            description: 
              description: "Specifies a description about the Protection Source."
              type: "string"
              x-go-name: "Description"
            hostType: 
              description: "Specifies host OS type for 'kVirtualMachine' objects.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
              type: "string"
              enum: 
                - "kLinux"
                - "kWindows"
              x-go-name: "HostType"
            hypervUuid: 
              description: "Specifies the UUID for 'kVirtualMachine' HyperV objects."
              type: "string"
              x-go-name: "HypervUuid"
            name: 
              description: "Specifies the name of the HyperV Object."
              type: "string"
              x-go-name: "Name"
            type: 
              description: "Specifies the type of an HyperV Protection Source Object such as\n'kSCVMMServer', 'kStandaloneHost', 'kNetwork', etc.\noverrideDescription: true\nSpecifies the type of an HyperV Protection Source.\n'kSCVMMServer' indicates a collection of root folders clusters.\n'kStandaloneHost' indicates a single Nutanix cluster.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kHostGroup' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an HyperV host.\n'kHostCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kDatastore' represents a storage container object."
              type: "string"
              enum: 
                - "kSCVMMServer"
                - "kStandaloneHost"
                - "kStandaloneCluster"
                - "kHostGroup"
                - "kHost"
                - "kHostCluster"
                - "kVirtualMachine"
                - "kNetwork"
                - "kDatastore"
              x-go-name: "Type"
            uuid: 
              description: "Specifies the UUID of the Object. This is unique within the HyperV\nenvironment."
              type: "string"
              x-go-name: "Uuid"
            vmInfo: 
              description: "Specifies additional information for 'kVirtualMachine' objects."
              $ref: "#/definitions/HypervVirtualMachine"
        id: 
          description: "Specifies an id of the Protection Source."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        kvmProtectionSource: 
          description: "Specifies details about a KVM Protection Source\nwhen the environment is set to 'kKVM'."
          type: "object"
          title: "KVM Protection Source."
          properties: 
            agentError: 
              description: "Specifies a message when the agent cannot be reached."
              type: "string"
              x-go-name: "AgentError"
            agentId: 
              description: "Specifies the ID of the Agent with which this KVM entity is associated\nwhen the entity represents a Delegate host or KVM host."
              type: "integer"
              format: "int64"
              x-go-name: "AgentId"
            clusterId: 
              description: "Specifies the cluster ID for 'kCluster' objects."
              type: "string"
              x-go-name: "ClusterId"
            datacenterId: 
              description: "Specifies the ID of the 'kDatacenter' objects."
              type: "string"
              x-go-name: "DatacenterId"
            description: 
              description: "Specifies a description about the Protection Source."
              type: "string"
              x-go-name: "Description"
            name: 
              description: "Specifies the name of the KVM entity."
              type: "string"
              x-go-name: "Name"
            type: 
              description: "Specifies the type of KVM Protection Source entities such as\n'kDatacenter', 'kCluster', 'kVirtualMachine', etc.\nSpecifies the type of an KVM source entity.\n'kOVirtManager' indicates the root entity registerd with Cohesity cluster.\n'kStandaloneHost' indicates a host registered with Cohesity cluster.\n'kDatacenter' indicates a KVM datacenter managed by the OVirt manager.\n'kCluster' indicates a KVM cluster managed by the OVirt manager.\n'kHost' indicates a host within the KVM environment.\n'kVirtualMachine' indicates a virtual machine in the KVM enironment.\n'kNetwork' represents a network used by the virtual machine entity.\n'kStorageDomain' represents a storage domain in the KVM environment."
              type: "string"
              enum: 
                - "kOVirtManager"
                - "kStandaloneHost"
                - "kDatacenter"
                - "kCluster"
                - "kHost"
                - "kVirtualMachine"
                - "kNetwork"
                - "kStorageDomain"
              x-go-name: "Type"
            uuid: 
              description: "Specifies the UUID of the Object. This is unique within the KVM\nenvironment."
              type: "string"
              x-go-name: "Uuid"
        name: 
          description: "Specifies a name of the Protection Source."
          type: "string"
          x-go-name: "Name"
        nasProtectionSource: 
          description: "Specifies details about a Generic NAS Protection Source\nwhen the environment is set to 'kGenericNas'."
          type: "object"
          title: "Generic NAS Protection Source."
          properties: 
            description: 
              description: "Specifies a description about the Protection Source."
              type: "string"
              x-go-name: "Description"
            mountPath: 
              description: "Specifies the mount path of this NAS. For example, for a NFS mount point,\nthis should be in the format of IP or hostname:/foo/bar."
              type: "string"
              x-go-name: "MountPath"
            name: 
              description: "Specifies the name of the NetApp Object."
              type: "string"
              x-go-name: "Name"
            protocol: 
              description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
              type: "string"
              enum: 
                - "kNfs3"
                - "kCifs1"
              x-go-name: "Protocol"
            type: 
              description: "Specifies the type of a Protection Source Object in a generic NAS Source\nsuch as 'kGroup', or 'kHost'.\nSpecifies the kind of NAS mount.\n'kGroup' indicates top level node that holds individual NAS hosts.\n'kHost' indicates a single NAS path that can be mounted."
              type: "string"
              enum: 
                - "kGroup"
                - "kHost"
              x-go-name: "Type"
        netappProtectionSource: 
          description: "Specifies details about a NetApp Protection Source\nwhen the environment is set to 'kNetapp'."
          type: "object"
          title: "NetApp Protection Source."
          properties: 
            clusterInfo: 
              description: "Specifies information about a NetApp cluster and is only valid for a\nNetApp Object of type kCluster."
              $ref: "#/definitions/NetappClusterInfo"
            isTopLevel: 
              description: "Specifies if this Object is a top level Object.\nBecause a top level Object can either be a NetApp cluster or a Vserver,\nthis cannot be determined only by type."
              type: "boolean"
              x-go-name: "IsTopLevel"
            name: 
              description: "Specifies the name of the NetApp Object."
              type: "string"
              x-go-name: "Name"
            type: 
              description: "Specifies the type of managed NetApp Object in a NetApp Protection Source\nsuch as 'kCluster', 'kVserver' or 'kVolume'."
              type: "string"
              enum: 
                - "kCluster"
                - "kVserver"
                - "kVolume"
              x-go-name: "Type"
            uuid: 
              description: "Specifies the globally unique ID of this Object assigned by the\nNetApp server."
              type: "string"
              x-go-name: "Uuid"
            volumeInfo: 
              description: "Specifies information about a NetApp volume and is only valid for a\nNetApp Object of type kVolume."
              $ref: "#/definitions/NetappVolumeInfo"
            vserverInfo: 
              description: "Specifies information about a NetApp Vserver and is only valid for a\nNetApp Object of type kVserver."
              $ref: "#/definitions/NetappVserverInfo"
        parentId: 
          description: "Specifies an id of the parent of the Protection Source."
          type: "integer"
          format: "int64"
          x-go-name: "ParentId"
        physicalProtectionSource: 
          description: "Specifies details about a Physical Protection Source\nwhen the environment is set to 'kPhysical'."
          type: "object"
          title: "Physical Protection Source."
          properties: 
            agents: 
              description: "Specifiles the agents running on the Physical Protection Source and the\nstatus information."
              type: "array"
              title: "Array of Agents on the Physical Protection Source."
              items: 
                $ref: "#/definitions/AgentInformation"
              x-go-name: "Agents"
            hostType: 
              description: "Specifies the environment type for the host.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
              type: "string"
              enum: 
                - "kLinux"
                - "kWindows"
              x-go-name: "HostType"
            id: 
              description: "Specifies a unique id of a Physical Protection Source.\nThe id is unique across Cohesity Clusters."
              type: "object"
              title: "Unique Global Id."
              properties: 
                clusterId: 
                  description: "Specifies the Cohesity Cluster id where the object was created."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ClusterId"
                clusterIncarnationId: 
                  description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ClusterIncarnationId"
                id: 
                  description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                  type: "integer"
                  format: "int64"
                  x-go-name: "Id"
            name: 
              description: "Specifies a human readable name of the Protection Source."
              type: "string"
              x-go-name: "Name"
            type: 
              description: "Specifies the type of managed Object in a Physical Protection Source.\n'kHost' indicates a single physical server.\n'kWindowsCluster' indicates a Microsoft Windows cluster."
              type: "string"
              enum: 
                - "kHost"
                - "kWindowsCluster"
              x-go-name: "Type"
            volumes: 
              description: "Specifies the volumes available on the physical host.\nThese fields are populated only for the kPhysicalHost type."
              type: "array"
              title: "Array of Physical Volumes."
              items: 
                $ref: "#/definitions/PhysicalVolume"
              x-go-name: "Volumes"
        pureProtectionSource: 
          description: "Specifies details about a Pure Protection Source\nwhen the environment is set to 'kPure'."
          type: "object"
          title: "Pure Protection Source."
          properties: 
            name: 
              description: "Specifies a human readable name of the Protection Source."
              type: "string"
              x-go-name: "Name"
            storageArray: 
              description: "Specifies a Pure Storage Array information. This is set only when\nthe type is kStorageArray."
              $ref: "#/definitions/PureStorageArray"
            type: 
              description: "Specifies the type of managed Object in a pure Protection Source like\na kStorageArray or kVolume.\nExamples of Pure Objects include 'kStorageArray' and 'kVolume'."
              type: "string"
              enum: 
                - "kStorageArray"
                - "kVolume"
              x-go-name: "Type"
            volume: 
              description: "Specifies a Pure Volume information within a storage array.\nThis is set only when the type is kVolume."
              $ref: "#/definitions/PureVolume"
        sqlProtectionSource: 
          description: "Specifies details about a SQL Protection Source\nwhen the environment is set to 'kSQL'."
          type: "object"
          title: "SQL Protection Source."
          properties: 
            IsAvailableForVssBackup: 
              description: "Specifies whether the database is marked as available for backup according\nto the SQL Server VSS writer. This may be false if either the state of\nthe databases is not online, or if the VSS writer is not online.\nThis field is set only for type 'kDatabase'."
              type: "boolean"
            createdTimestamp: 
              description: "Specifies the time when the database was created. It is displayed in the\ntimezone of the SQL server on which this database is running."
              type: "string"
              x-go-name: "CreatedTimestamp"
            databaseName: 
              description: "Specifies the database name of the SQL Protection Source, if the type\nis database."
              type: "string"
              x-go-name: "DatabaseName"
            dbAagEntityId: 
              description: "Specifies the AAG entity id if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
              type: "integer"
              format: "int64"
              x-go-name: "DbAagEntityId"
            dbAagName: 
              description: "Specifies the name of the AAG if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
              type: "string"
              x-go-name: "DbAagName"
            dbFiles: 
              description: "Specifies the last known information about the set of database files\non the host. This field is set only for type 'kDatabase'."
              type: "array"
              items: 
                $ref: "#/definitions/DbFileInfo"
              x-go-name: "DbFiles"
            id: 
              description: "Specifies an id that identifies an SQL Object."
              $ref: "#/definitions/SqlSourceId"
            name: 
              description: "Specifies the instance name of the SQL Protection Source"
              type: "string"
              x-go-name: "Name"
            ownerId: 
              description: "Specifies the id of the container VM for the SQL Protection Source."
              type: "integer"
              format: "int64"
              x-go-name: "OwnerId"
            recoveryModel: 
              description: "Specifies the Recovery Model for the database in SQL environment.\nOnly meaningful for the 'kDatabase' SQL Protection Source.\nSpecifies the Recovery Model set for the Microsoft SQL Server.\n'kSimpleRecoveryModel' indicates the Simple SQL Recovery Model which\ndoes not utilize log backups.\n'kFullRecoveryModel' indicates the Full SQL Recovery Model which\nrequires log backups and allows recovery to a single point in time.\n'kBulkLoggedRecoveryModel' indicates the Bulk Logged SQL Recovery Model\nwhich requires log backups and allows high-performance bulk copy operations."
              type: "string"
              enum: 
                - "kSimpleRecoveryModel"
                - "kFullRecoveryModel"
                - "kBulkLoggedRecoveryModel"
              x-go-name: "RecoveryModel"
            sqlServerDbState: 
              description: "The state of the database as returned by SQL Server."
              type: "integer"
              format: "int32"
              x-go-name: "SqlServerDbState"
            type: 
              description: "Specifies the type of the managed Object in a SQL Protection Source.\nExamples of SQL Objects include 'kInstance' and 'kDatabase'."
              type: "string"
              enum: 
                - "kInstance"
                - "kDatabase"
              x-go-name: "Type"
        viewProtectionSource: 
          description: "Specifies details about a View Protection Source\nwhen the environment is set to 'kView'."
          type: "object"
          title: "View Protection Source."
          properties: 
            id: 
              description: "Specifies a unique id of a Protection Source for a View.\nThe id is unique across Cohesity Clusters."
              type: "object"
              title: "Unique Global Id."
              properties: 
                clusterId: 
                  description: "Specifies the Cohesity Cluster id where the object was created."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ClusterId"
                clusterIncarnationId: 
                  description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ClusterIncarnationId"
                id: 
                  description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                  type: "integer"
                  format: "int64"
                  x-go-name: "Id"
            name: 
              description: "Specifies a human readable name of the Protection Source of a View."
              type: "string"
              x-go-name: "Name"
            type: 
              description: "Specifies the type of managed Object in a View Protection Source\nenvironment.\nExamples of View Objects include 'kViewBox' or 'kView'."
              type: "string"
              enum: 
                - "kViewBox"
                - "kView"
              x-go-name: "Type"
        vmWareProtectionSource: 
          description: "Specifies details about a VMware Protection Source\nwhen the environment is set to 'kVMware'."
          type: "object"
          title: "VMware Protection Source."
          properties: 
            agentId: 
              description: "Specifies the id of the persistent agent."
              type: "integer"
              format: "int64"
              x-go-name: "AgentId"
            agents: 
              description: "This is set only if the Virtual Machine has persistent agent."
              type: "array"
              title: "Specifies the list of agent information on the Virtual Machine."
              items: 
                $ref: "#/definitions/AgentInformation"
              x-go-name: "Agents"
            connectionState: 
              description: "Specifies the connection state of the Object and are only valid for\nESXi hosts ('kHostSystem') or Virtual Machines ('kVirtualMachine').\nThese enums are equivalent to the connection states documented in\nVMware's reference documentation.\nExamples of Cohesity connection states include 'kConnected',\n'kDisconnected', 'kInacccessible', etc."
              type: "string"
              enum: 
                - "kConnected"
                - "kDisconnected"
                - "kInacccessible"
                - "kInvalid"
                - "kOrphaned"
                - "kNotResponding"
              x-go-name: "ConnectionState"
            datastoreInfo: 
              description: "Specifies additional information of entities of type 'kDatastore'."
              $ref: "#/definitions/DatastoreInfo"
            folderType: 
              description: "Specifies the folder type for the 'kFolder' Object.\n'kVMFolder' indicates folder can hold VMs or vApps.\n'kHostFolder' indicates folder can hold hosts and compute resources.\n'kDatastoreFolder' indicates folder can hold datastores and storage pods.\n'kNetworkFolder' indicates folder can hold networks and switches.\n'kRootFolder' indicates folder can hold datacenters."
              type: "string"
              enum: 
                - "kVMFolder"
                - "kHostFolder"
                - "kDatastoreFolder"
                - "kNetworkFolder"
                - "kRootFolder"
              x-go-name: "FolderType"
            hasPersistentAgent: 
              description: "Set to true if a persistent agent is running on the Virtual Machine.\nThis is populated for entities of type 'kVirtualMachine'."
              type: "boolean"
              x-go-name: "HasPersistentAgent"
            hostType: 
              description: "Specifies the host type for the 'kVirtualMachine' Object.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
              type: "string"
              enum: 
                - "kLinux"
                - "kWindows"
              x-go-name: "HostType"
            id: 
              description: "Specifies the UUID of the VMware Protection Source."
              $ref: "#/definitions/VMwareObjectId"
            name: 
              description: "Specifies a human readable name of the Protection Source."
              type: "string"
              x-go-name: "Name"
            tagAttributes: 
              description: "Specifies the optional list of VM Tag attributes associated with this\nObject."
              type: "array"
              items: 
                $ref: "#/definitions/TagAttribute"
              x-go-name: "TagAttributes"
            toolsRunningStatus: 
              description: "Specifies the status of VMware Tools for the guest OS on the VM.\nThis is only valid for the 'kVirtualMachine' type.\n'kGuestToolsRunning' means the VMware tools are running on the guest OS.\n'kGuestToolsNotRunning' means the VMware tools are not running on the\nguest OS.\n'kUnknown' means the state of the VMware tools on the guest OS is not\nknown.\n'kGuestToolsExecutingScripts' means the guest OS is currently executing\nscripts using VMware tools."
              type: "string"
              enum: 
                - "kUnknown"
                - "kGuestToolsExecutingScripts"
                - "kGuestToolsNotRunning"
                - "kGuestToolsRunning"
              x-go-name: "VMwareToolsRunningStatus"
            type: 
              description: "Specifies the type of managed Object in a VMware Protection Source.\nExamples of VMware Objects include 'kVCenter', 'kFolder', 'kDatacenter',\n'kResourcePool', 'kDatastore', 'kVirtualMachine', etc."
              type: "string"
              enum: 
                - "kVCenter"
                - "kFolder"
                - "kDatacenter"
                - "kComputeResource"
                - "kClusterComputeResource"
                - "kResourcePool"
                - "kDatastore"
                - "kHostSystem"
                - "kVirtualMachine"
                - "kVirtualApp"
                - "kStandaloneHost"
                - "kStoragePod"
                - "kNetwork"
                - "kDistributedVirtualPortgroup"
                - "kTagCategory"
                - "kTag"
              x-go-name: "Type"
            virtualDisks: 
              description: "This is populated for entities of type 'kVirtualMachine'."
              type: "array"
              title: "Specifies an array of virtual disks that are part of the Virtual Machine."
              items: 
                $ref: "#/definitions/VirtualDiskInfo"
              x-go-name: "VirtualDisks"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionSourceNode: 
      description: "Many different node types are supported such as\n'kComputeResource' and 'kResourcePool'."
      type: "object"
      title: "Node in a Protection Sources Tree."
      properties: 
        applicationNodes: 
          description: "Specifies the child subtree used to store additional application-level\nObjects.\nDifferent environments use the subtree to store application-level\ninformation. For example for SQL Server, this subtree stores the\nSQL Server instances running on a VM."
          type: "array"
          title: "Array of Child Subtrees."
          items: 
            description: "Many different node types are supported such as\n'kComputeResource' and 'kResourcePool'."
            type: "object"
            title: "Node in a Protection Sources Tree. (ProtectionSourceNode)"
          x-go-name: "ApplicationNodes"
        logicalSize: 
          description: "Specifies the logical size of the data in bytes for the Object\non this node.\nPresence of this field indicates this node is a leaf node."
          type: "integer"
          format: "int64"
          x-go-name: "LogicalSize"
        nodes: 
          description: "Specifies children of the current node in the Protection Sources hierarchy.\nWhen representing Objects in memory, the entire Object subtree\nhierarchy is represented.\nYou can use this subtree to navigate down the Object hierarchy."
          type: "array"
          title: "Array of Child Nodes."
          items: 
            description: "Many different node types are supported such as\n'kComputeResource' and 'kResourcePool'."
            type: "object"
            title: "Node in a Protection Sources Tree. (ProtectionSourceNode)"
          x-go-name: "Nodes"
        protectedSourcesSummary: 
          description: "Specifies aggregated information about all the\nchild Objects of this node that are currently protected by\na Protection Job.\nThere is one entry for each environment that is being backed up.\nThe aggregated information for the Object hierarchy's environment will\nbe available at the 0th index of the vector."
          type: "array"
          title: "Array of Protected Objects."
          items: 
            $ref: "#/definitions/AggregatedSubtreeInfo"
          x-go-name: "ProtectedSourcesSummary"
        protectionSource: 
          description: "Specifies the Protection Source for the current node."
          type: "object"
          title: "Protection Source."
          properties: 
            acropolisProtectionSource: 
              description: "Specifies details about an Acropolis Protection Source\nwhen the environment is set to 'kAcropolis'."
              type: "object"
              title: "Acropolis Protection Source."
              properties: 
                clusterUuid: 
                  description: "Specifies the UUID of the Acropolis cluster instance to which this\nentity belongs to."
                  type: "string"
                  x-go-name: "ClusterUuid"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                mountPath: 
                  description: "Specifies whether the the VM is an agent VM. This is applicable to\nacropolis entity of type kVirtualMachine."
                  type: "boolean"
                  x-go-name: "IsAgentVm"
                name: 
                  description: "Specifies the name of the Acropolis Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of an Acropolis Protection Source Object such as\n'kPrismCentral', 'kHost', 'kNetwork', etc.\nSpecifies the type of an Acropolis source entity.\n'kPrismCentral' indicates a collection of multiple Nutanix clusters.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an Acropolis host.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kStorageContainer' represents a storage container object."
                  type: "string"
                  enum: 
                    - "kPrismCentral"
                    - "kStandaloneCluster"
                    - "kCluster"
                    - "kHost"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kStorageContainer"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Acropolis Object. This is unique within the\ncluster instance. Together with clusterUuid, this entity is unique\nwithin the Acropolis environment."
                  type: "string"
                  x-go-name: "Uuid"
            awsProtectionSource: 
              description: "Specifies details about an AWS Protection Source\nwhen the environment is set to 'kAWS'."
              type: "object"
              title: "AWS Protection Source."
              properties: 
                hostType: 
                  description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                ipAddresses: 
                  description: "Specifies the IP address of the entity of type 'kVirtualMachine'."
                  type: "string"
                  x-go-name: "IpAddress"
                name: 
                  description: "Specifies the name of the AWS Object set by the Cloud Provider."
                  type: "string"
                  x-go-name: "Name"
                ownerId: 
                  description: "Specifies the owner id of the resource in AWS environment. With type,\nname and ownerId gives a globally unique identity to the AWS entity."
                  type: "string"
                  x-go-name: "OwnerId"
                regionId: 
                  description: "Specifies the region Id of the entity if the entity is an EC2 instance."
                  type: "string"
                  x-go-name: "RegionId"
                resourceId: 
                  description: "Specifies the unique Id of the resource given by the cloud provider."
                  type: "string"
                  x-go-name: "ResourceId"
                type: 
                  description: "Specifies the type of an AWS Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an AWS source entity.\n'kIAMUser' indicates a unique user within an AWS account.\n'kRegion' indicates a geographical region in the global infrastructure.\n'kAvailabilityZone' indicates an availability zone within a region.\n'kEC2Instance' indicates a Virtual Machine running in AWS environment.\n'kVPC' indicates a virtual private cloud (VPC) network within AWS.\n'kSubnet' indicates a subnet inside the VPC.\n'kNetworkSecurityGroup' represents a network security group.\n'kInstanceType' represents various machine types.\n'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine."
                  type: "string"
                  enum: 
                    - "kIAMUser"
                    - "kRegion"
                    - "kAvailabilityZone"
                    - "kEC2Instance"
                    - "kVPC"
                    - "kSubnet"
                    - "kNetworkSecurityGroup"
                    - "kInstanceType"
                    - "kKeyPair"
                  x-go-name: "Type"
                userAccountId: 
                  description: "Specifies the account id derived from the ARN of the user."
                  type: "string"
                  x-go-name: "UserAccountId"
                userResourceName: 
                  description: "Specifies the Amazon Resource Name (ARN) of the user."
                  type: "string"
                  x-go-name: "UserResourceName"
            azureProtectionSource: 
              description: "Specifies details about an Azure Protection Source\nwhen the environment is set to 'kAzure'."
              type: "object"
              title: "Azure Protection Source."
              properties: 
                hostType: 
                  description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                ipAddresses: 
                  type: "array"
                  title: "Specifies a list of IP addresses for entities of type 'kVirtualMachine'."
                  items: 
                    type: "string"
                  x-go-name: "IpAddresses"
                location: 
                  description: "Specifies the physical location of the resource group."
                  type: "string"
                  x-go-name: "Location"
                memoryMbytes: 
                  description: "Specifies the amount of memory in MegaBytes of the Azure resource of\ntype 'kComputeOptions'."
                  type: "integer"
                  format: "int64"
                  x-go-name: "MemoryMbytes"
                name: 
                  description: "Specifies the name of the Azure Object set by the Cloud Provider.\nIf the provider did not set a name for the object, this field is not set."
                  type: "string"
                  x-go-name: "Name"
                numCores: 
                  description: "Specifies the number of CPU cores of the Azure resource of\ntype 'kComputeOptions'."
                  type: "integer"
                  format: "int32"
                  x-go-name: "NumCores"
                resourceId: 
                  description: "Specifies the unique Id of the resource in Azure environment."
                  type: "string"
                  x-go-name: "ResourceId"
                type: 
                  description: "Specifies the type of an Azure Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an Azure source entity.\n'kSubscription' indicates a billing unit within Azure account.\n'kResourceGroup' indicates a container that holds related resources.\n'kVirtualMachine' indicates a Virtual Machine in Azure environment.\n'kStorageAccount' represents a collection of storage containers.\n'kStorageKey' indicates a key required to access the storage account.\n'kStorageContainer' represents a storage container within a storage account.\n'kStorageBlob' represents a storage blog within a storage container.\n'kNetworkSecurityGroup' represents a network security group.\n'kVirtualNetwork' represents a virtual network.\n'kSubnet' represents a subnet within the virtual network.\n'kComputeOptions' indicates the number of CPU cores and memory size available for a type of a Virtual Machine."
                  type: "string"
                  enum: 
                    - "kSubscription"
                    - "kResourceGroup"
                    - "kVirtualMachine"
                    - "kStorageAccount"
                    - "kStorageKey"
                    - "kStorageContainer"
                    - "kStorageBlob"
                    - "kNetworkSecurityGroup"
                    - "kVirtualNetwork"
                    - "kSubnet"
                    - "kComputeOptions"
                  x-go-name: "Type"
            environment: 
              description: "Specifies the environment (such as 'kVMware' or 'kSQL') where the\nProtection Source exists. Depending on the environment, one of the\nfollowing Protection Sources are initialized.\n\nNOTE: kPuppeteer refers to Cohesity's Remote Adapter.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
              type: "string"
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetapp"
                - "kGenericNas"
                - "kHyperV"
                - "kAcropolis"
                - "kAzure"
              x-go-name: "Environment"
            hypervProtectionSource: 
              description: "Specifies details about a HyperV Protection Source\nwhen the environment is set to 'kHyperV'."
              type: "object"
              title: "HyperV Protection Source."
              properties: 
                agentInfo: 
                  description: "Specifies information about the agent running on the HyperV objects."
                  $ref: "#/definitions/AgentInformation"
                backupType: 
                  description: "Specifies the type of backup supported by the VM.\n'kRctBackup', 'kVssBackup'\nSpecifies the type of an HyperV datastore object.\n'kRctBackup' indicates backup is done using RCT/checkpoints.\n'kVssBackup' indicates backup is done using VSS."
                  type: "string"
                  enum: 
                    - "kRctBackup"
                    - "kVssBackup"
                  x-go-name: "BackupType"
                clusterName: 
                  description: "Specifies the cluster name for 'kHostCluster' objects."
                  type: "string"
                  x-go-name: "ClusterName"
                datastoreInfo: 
                  description: "Specifies additional information for 'kDatastore' objects."
                  $ref: "#/definitions/HypervDatastore"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                hostType: 
                  description: "Specifies host OS type for 'kVirtualMachine' objects.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                hypervUuid: 
                  description: "Specifies the UUID for 'kVirtualMachine' HyperV objects."
                  type: "string"
                  x-go-name: "HypervUuid"
                name: 
                  description: "Specifies the name of the HyperV Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of an HyperV Protection Source Object such as\n'kSCVMMServer', 'kStandaloneHost', 'kNetwork', etc.\noverrideDescription: true\nSpecifies the type of an HyperV Protection Source.\n'kSCVMMServer' indicates a collection of root folders clusters.\n'kStandaloneHost' indicates a single Nutanix cluster.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kHostGroup' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an HyperV host.\n'kHostCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kDatastore' represents a storage container object."
                  type: "string"
                  enum: 
                    - "kSCVMMServer"
                    - "kStandaloneHost"
                    - "kStandaloneCluster"
                    - "kHostGroup"
                    - "kHost"
                    - "kHostCluster"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kDatastore"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Object. This is unique within the HyperV\nenvironment."
                  type: "string"
                  x-go-name: "Uuid"
                vmInfo: 
                  description: "Specifies additional information for 'kVirtualMachine' objects."
                  $ref: "#/definitions/HypervVirtualMachine"
            id: 
              description: "Specifies an id of the Protection Source."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
            kvmProtectionSource: 
              description: "Specifies details about a KVM Protection Source\nwhen the environment is set to 'kKVM'."
              type: "object"
              title: "KVM Protection Source."
              properties: 
                agentError: 
                  description: "Specifies a message when the agent cannot be reached."
                  type: "string"
                  x-go-name: "AgentError"
                agentId: 
                  description: "Specifies the ID of the Agent with which this KVM entity is associated\nwhen the entity represents a Delegate host or KVM host."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AgentId"
                clusterId: 
                  description: "Specifies the cluster ID for 'kCluster' objects."
                  type: "string"
                  x-go-name: "ClusterId"
                datacenterId: 
                  description: "Specifies the ID of the 'kDatacenter' objects."
                  type: "string"
                  x-go-name: "DatacenterId"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                name: 
                  description: "Specifies the name of the KVM entity."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of KVM Protection Source entities such as\n'kDatacenter', 'kCluster', 'kVirtualMachine', etc.\nSpecifies the type of an KVM source entity.\n'kOVirtManager' indicates the root entity registerd with Cohesity cluster.\n'kStandaloneHost' indicates a host registered with Cohesity cluster.\n'kDatacenter' indicates a KVM datacenter managed by the OVirt manager.\n'kCluster' indicates a KVM cluster managed by the OVirt manager.\n'kHost' indicates a host within the KVM environment.\n'kVirtualMachine' indicates a virtual machine in the KVM enironment.\n'kNetwork' represents a network used by the virtual machine entity.\n'kStorageDomain' represents a storage domain in the KVM environment."
                  type: "string"
                  enum: 
                    - "kOVirtManager"
                    - "kStandaloneHost"
                    - "kDatacenter"
                    - "kCluster"
                    - "kHost"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kStorageDomain"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Object. This is unique within the KVM\nenvironment."
                  type: "string"
                  x-go-name: "Uuid"
            name: 
              description: "Specifies a name of the Protection Source."
              type: "string"
              x-go-name: "Name"
            nasProtectionSource: 
              description: "Specifies details about a Generic NAS Protection Source\nwhen the environment is set to 'kGenericNas'."
              type: "object"
              title: "Generic NAS Protection Source."
              properties: 
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                mountPath: 
                  description: "Specifies the mount path of this NAS. For example, for a NFS mount point,\nthis should be in the format of IP or hostname:/foo/bar."
                  type: "string"
                  x-go-name: "MountPath"
                name: 
                  description: "Specifies the name of the NetApp Object."
                  type: "string"
                  x-go-name: "Name"
                protocol: 
                  description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
                  type: "string"
                  enum: 
                    - "kNfs3"
                    - "kCifs1"
                  x-go-name: "Protocol"
                type: 
                  description: "Specifies the type of a Protection Source Object in a generic NAS Source\nsuch as 'kGroup', or 'kHost'.\nSpecifies the kind of NAS mount.\n'kGroup' indicates top level node that holds individual NAS hosts.\n'kHost' indicates a single NAS path that can be mounted."
                  type: "string"
                  enum: 
                    - "kGroup"
                    - "kHost"
                  x-go-name: "Type"
            netappProtectionSource: 
              description: "Specifies details about a NetApp Protection Source\nwhen the environment is set to 'kNetapp'."
              type: "object"
              title: "NetApp Protection Source."
              properties: 
                clusterInfo: 
                  description: "Specifies information about a NetApp cluster and is only valid for a\nNetApp Object of type kCluster."
                  $ref: "#/definitions/NetappClusterInfo"
                isTopLevel: 
                  description: "Specifies if this Object is a top level Object.\nBecause a top level Object can either be a NetApp cluster or a Vserver,\nthis cannot be determined only by type."
                  type: "boolean"
                  x-go-name: "IsTopLevel"
                name: 
                  description: "Specifies the name of the NetApp Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed NetApp Object in a NetApp Protection Source\nsuch as 'kCluster', 'kVserver' or 'kVolume'."
                  type: "string"
                  enum: 
                    - "kCluster"
                    - "kVserver"
                    - "kVolume"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the globally unique ID of this Object assigned by the\nNetApp server."
                  type: "string"
                  x-go-name: "Uuid"
                volumeInfo: 
                  description: "Specifies information about a NetApp volume and is only valid for a\nNetApp Object of type kVolume."
                  $ref: "#/definitions/NetappVolumeInfo"
                vserverInfo: 
                  description: "Specifies information about a NetApp Vserver and is only valid for a\nNetApp Object of type kVserver."
                  $ref: "#/definitions/NetappVserverInfo"
            parentId: 
              description: "Specifies an id of the parent of the Protection Source."
              type: "integer"
              format: "int64"
              x-go-name: "ParentId"
            physicalProtectionSource: 
              description: "Specifies details about a Physical Protection Source\nwhen the environment is set to 'kPhysical'."
              type: "object"
              title: "Physical Protection Source."
              properties: 
                agents: 
                  description: "Specifiles the agents running on the Physical Protection Source and the\nstatus information."
                  type: "array"
                  title: "Array of Agents on the Physical Protection Source."
                  items: 
                    $ref: "#/definitions/AgentInformation"
                  x-go-name: "Agents"
                hostType: 
                  description: "Specifies the environment type for the host.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                id: 
                  description: "Specifies a unique id of a Physical Protection Source.\nThe id is unique across Cohesity Clusters."
                  type: "object"
                  title: "Unique Global Id."
                  properties: 
                    clusterId: 
                      description: "Specifies the Cohesity Cluster id where the object was created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterId"
                    clusterIncarnationId: 
                      description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterIncarnationId"
                    id: 
                      description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                      type: "integer"
                      format: "int64"
                      x-go-name: "Id"
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed Object in a Physical Protection Source.\n'kHost' indicates a single physical server.\n'kWindowsCluster' indicates a Microsoft Windows cluster."
                  type: "string"
                  enum: 
                    - "kHost"
                    - "kWindowsCluster"
                  x-go-name: "Type"
                volumes: 
                  description: "Specifies the volumes available on the physical host.\nThese fields are populated only for the kPhysicalHost type."
                  type: "array"
                  title: "Array of Physical Volumes."
                  items: 
                    $ref: "#/definitions/PhysicalVolume"
                  x-go-name: "Volumes"
            pureProtectionSource: 
              description: "Specifies details about a Pure Protection Source\nwhen the environment is set to 'kPure'."
              type: "object"
              title: "Pure Protection Source."
              properties: 
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                storageArray: 
                  description: "Specifies a Pure Storage Array information. This is set only when\nthe type is kStorageArray."
                  $ref: "#/definitions/PureStorageArray"
                type: 
                  description: "Specifies the type of managed Object in a pure Protection Source like\na kStorageArray or kVolume.\nExamples of Pure Objects include 'kStorageArray' and 'kVolume'."
                  type: "string"
                  enum: 
                    - "kStorageArray"
                    - "kVolume"
                  x-go-name: "Type"
                volume: 
                  description: "Specifies a Pure Volume information within a storage array.\nThis is set only when the type is kVolume."
                  $ref: "#/definitions/PureVolume"
            sqlProtectionSource: 
              description: "Specifies details about a SQL Protection Source\nwhen the environment is set to 'kSQL'."
              type: "object"
              title: "SQL Protection Source."
              properties: 
                IsAvailableForVssBackup: 
                  description: "Specifies whether the database is marked as available for backup according\nto the SQL Server VSS writer. This may be false if either the state of\nthe databases is not online, or if the VSS writer is not online.\nThis field is set only for type 'kDatabase'."
                  type: "boolean"
                createdTimestamp: 
                  description: "Specifies the time when the database was created. It is displayed in the\ntimezone of the SQL server on which this database is running."
                  type: "string"
                  x-go-name: "CreatedTimestamp"
                databaseName: 
                  description: "Specifies the database name of the SQL Protection Source, if the type\nis database."
                  type: "string"
                  x-go-name: "DatabaseName"
                dbAagEntityId: 
                  description: "Specifies the AAG entity id if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
                  type: "integer"
                  format: "int64"
                  x-go-name: "DbAagEntityId"
                dbAagName: 
                  description: "Specifies the name of the AAG if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
                  type: "string"
                  x-go-name: "DbAagName"
                dbFiles: 
                  description: "Specifies the last known information about the set of database files\non the host. This field is set only for type 'kDatabase'."
                  type: "array"
                  items: 
                    $ref: "#/definitions/DbFileInfo"
                  x-go-name: "DbFiles"
                id: 
                  description: "Specifies an id that identifies an SQL Object."
                  $ref: "#/definitions/SqlSourceId"
                name: 
                  description: "Specifies the instance name of the SQL Protection Source"
                  type: "string"
                  x-go-name: "Name"
                ownerId: 
                  description: "Specifies the id of the container VM for the SQL Protection Source."
                  type: "integer"
                  format: "int64"
                  x-go-name: "OwnerId"
                recoveryModel: 
                  description: "Specifies the Recovery Model for the database in SQL environment.\nOnly meaningful for the 'kDatabase' SQL Protection Source.\nSpecifies the Recovery Model set for the Microsoft SQL Server.\n'kSimpleRecoveryModel' indicates the Simple SQL Recovery Model which\ndoes not utilize log backups.\n'kFullRecoveryModel' indicates the Full SQL Recovery Model which\nrequires log backups and allows recovery to a single point in time.\n'kBulkLoggedRecoveryModel' indicates the Bulk Logged SQL Recovery Model\nwhich requires log backups and allows high-performance bulk copy operations."
                  type: "string"
                  enum: 
                    - "kSimpleRecoveryModel"
                    - "kFullRecoveryModel"
                    - "kBulkLoggedRecoveryModel"
                  x-go-name: "RecoveryModel"
                sqlServerDbState: 
                  description: "The state of the database as returned by SQL Server."
                  type: "integer"
                  format: "int32"
                  x-go-name: "SqlServerDbState"
                type: 
                  description: "Specifies the type of the managed Object in a SQL Protection Source.\nExamples of SQL Objects include 'kInstance' and 'kDatabase'."
                  type: "string"
                  enum: 
                    - "kInstance"
                    - "kDatabase"
                  x-go-name: "Type"
            viewProtectionSource: 
              description: "Specifies details about a View Protection Source\nwhen the environment is set to 'kView'."
              type: "object"
              title: "View Protection Source."
              properties: 
                id: 
                  description: "Specifies a unique id of a Protection Source for a View.\nThe id is unique across Cohesity Clusters."
                  type: "object"
                  title: "Unique Global Id."
                  properties: 
                    clusterId: 
                      description: "Specifies the Cohesity Cluster id where the object was created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterId"
                    clusterIncarnationId: 
                      description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterIncarnationId"
                    id: 
                      description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                      type: "integer"
                      format: "int64"
                      x-go-name: "Id"
                name: 
                  description: "Specifies a human readable name of the Protection Source of a View."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed Object in a View Protection Source\nenvironment.\nExamples of View Objects include 'kViewBox' or 'kView'."
                  type: "string"
                  enum: 
                    - "kViewBox"
                    - "kView"
                  x-go-name: "Type"
            vmWareProtectionSource: 
              description: "Specifies details about a VMware Protection Source\nwhen the environment is set to 'kVMware'."
              type: "object"
              title: "VMware Protection Source."
              properties: 
                agentId: 
                  description: "Specifies the id of the persistent agent."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AgentId"
                agents: 
                  description: "This is set only if the Virtual Machine has persistent agent."
                  type: "array"
                  title: "Specifies the list of agent information on the Virtual Machine."
                  items: 
                    $ref: "#/definitions/AgentInformation"
                  x-go-name: "Agents"
                connectionState: 
                  description: "Specifies the connection state of the Object and are only valid for\nESXi hosts ('kHostSystem') or Virtual Machines ('kVirtualMachine').\nThese enums are equivalent to the connection states documented in\nVMware's reference documentation.\nExamples of Cohesity connection states include 'kConnected',\n'kDisconnected', 'kInacccessible', etc."
                  type: "string"
                  enum: 
                    - "kConnected"
                    - "kDisconnected"
                    - "kInacccessible"
                    - "kInvalid"
                    - "kOrphaned"
                    - "kNotResponding"
                  x-go-name: "ConnectionState"
                datastoreInfo: 
                  description: "Specifies additional information of entities of type 'kDatastore'."
                  $ref: "#/definitions/DatastoreInfo"
                folderType: 
                  description: "Specifies the folder type for the 'kFolder' Object.\n'kVMFolder' indicates folder can hold VMs or vApps.\n'kHostFolder' indicates folder can hold hosts and compute resources.\n'kDatastoreFolder' indicates folder can hold datastores and storage pods.\n'kNetworkFolder' indicates folder can hold networks and switches.\n'kRootFolder' indicates folder can hold datacenters."
                  type: "string"
                  enum: 
                    - "kVMFolder"
                    - "kHostFolder"
                    - "kDatastoreFolder"
                    - "kNetworkFolder"
                    - "kRootFolder"
                  x-go-name: "FolderType"
                hasPersistentAgent: 
                  description: "Set to true if a persistent agent is running on the Virtual Machine.\nThis is populated for entities of type 'kVirtualMachine'."
                  type: "boolean"
                  x-go-name: "HasPersistentAgent"
                hostType: 
                  description: "Specifies the host type for the 'kVirtualMachine' Object.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                id: 
                  description: "Specifies the UUID of the VMware Protection Source."
                  $ref: "#/definitions/VMwareObjectId"
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                tagAttributes: 
                  description: "Specifies the optional list of VM Tag attributes associated with this\nObject."
                  type: "array"
                  items: 
                    $ref: "#/definitions/TagAttribute"
                  x-go-name: "TagAttributes"
                toolsRunningStatus: 
                  description: "Specifies the status of VMware Tools for the guest OS on the VM.\nThis is only valid for the 'kVirtualMachine' type.\n'kGuestToolsRunning' means the VMware tools are running on the guest OS.\n'kGuestToolsNotRunning' means the VMware tools are not running on the\nguest OS.\n'kUnknown' means the state of the VMware tools on the guest OS is not\nknown.\n'kGuestToolsExecutingScripts' means the guest OS is currently executing\nscripts using VMware tools."
                  type: "string"
                  enum: 
                    - "kUnknown"
                    - "kGuestToolsExecutingScripts"
                    - "kGuestToolsNotRunning"
                    - "kGuestToolsRunning"
                  x-go-name: "VMwareToolsRunningStatus"
                type: 
                  description: "Specifies the type of managed Object in a VMware Protection Source.\nExamples of VMware Objects include 'kVCenter', 'kFolder', 'kDatacenter',\n'kResourcePool', 'kDatastore', 'kVirtualMachine', etc."
                  type: "string"
                  enum: 
                    - "kVCenter"
                    - "kFolder"
                    - "kDatacenter"
                    - "kComputeResource"
                    - "kClusterComputeResource"
                    - "kResourcePool"
                    - "kDatastore"
                    - "kHostSystem"
                    - "kVirtualMachine"
                    - "kVirtualApp"
                    - "kStandaloneHost"
                    - "kStoragePod"
                    - "kNetwork"
                    - "kDistributedVirtualPortgroup"
                    - "kTagCategory"
                    - "kTag"
                  x-go-name: "Type"
                virtualDisks: 
                  description: "This is populated for entities of type 'kVirtualMachine'."
                  type: "array"
                  title: "Specifies an array of virtual disks that are part of the Virtual Machine."
                  items: 
                    $ref: "#/definitions/VirtualDiskInfo"
                  x-go-name: "VirtualDisks"
        registrationInfo: 
          description: "Specifies registration information for a root node in a Protection\nSources tree. A root node represents a registered Source on the\nCohesity Cluster, such as a vCenter Server."
          type: "object"
          title: "Registered Source Info."
          properties: 
            accessInfo: 
              description: "Specifies the parameters required to establish a connection\nwith a particular environment."
              $ref: "#/definitions/ConnectorParams"
            authenticationErrorMessage: 
              description: "Specifies an authentication error message. This indicates the given\ncredentials are rejected and the registration of the source is not\nsuccessful."
              type: "string"
              x-go-name: "AuthenticationErrorMessage"
            authenticationStatus: 
              description: "Specifies the status of the authenticating to the Protection Source\nwhen registering it with Cohesity Cluster. If the status is 'kFinished'\nand there is no error, registration is successful.\nSpecifies the status of the authentication during the registration of a\nProtection Source.\n'kPending' indicates the authentication is in progress.\n'kScheduled' indicates the authentication is scheduled.\n'kFinished' indicates the authentication is completed."
              type: "string"
              enum: 
                - "kPending"
                - "kScheduled"
                - "kFinished"
              x-go-name: "AuthenticationStatus"
            environments: 
              description: "Specifies a list of applications environment that are registered\nwith this Protection Source such as 'kSQL'.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
              type: "array"
              items: 
                type: "string"
                enum: 
                  - "kVMware"
                  - "kSQL"
                  - "kView"
                  - "kPuppeteer"
                  - "kPhysical"
                  - "kPure"
                  - "kNetapp"
                  - "kGenericNas"
                  - "kHyperV"
                  - "kAcropolis"
                  - "kAzure"
              x-go-name: "Environments"
            minimumFreeSpaceGB: 
              description: "Specifies the minimum free space in GiB of the space expected to be\navailable on the datastore where the virtual disks of the VM being backed\nup. If the amount of free space(in GiB) is lower than the value given by\nthis field, backup will be aborted. Note that this field is applicable\nonly to 'kVMware' type of environments."
              type: "integer"
              format: "int64"
              x-go-name: "MinimumFreeSpaceGB"
            nasMountCredentials: 
              description: "Specifies the credentials required to mount directories on the NetApp\nserver if given."
              type: "object"
              title: "NAS Server Credentials."
              properties: 
                domain: 
                  description: "Specifies the domain in which this credential is valid."
                  type: "string"
                  x-go-name: "Domain"
                nasProtocol: 
                  description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
                  type: "string"
                  enum: 
                    - "kNfs3"
                    - "kCifs1"
                  x-go-name: "NasProtocol"
                password: 
                  description: "Specifies the password for the username to use for mounting the NAS."
                  type: "string"
                  x-go-name: "Password"
                username: 
                  description: "Specifies a username to use for mounting the NAS."
                  type: "string"
                  x-go-name: "Username"
            password: 
              description: "Specifies password of the username to access the target source."
              type: "string"
              x-go-name: "Password"
            refreshErrorMessage: 
              description: "Specifies a message if there was any error encountered during the last\nrebuild of the Protection Source tree. If there was no error during the\nlast rebuild, this field is reset."
              type: "string"
              x-go-name: "RefreshErrorMessage"
            refreshTimeUsecs: 
              description: "Specifies the Unix epoch time (in microseconds) when the Protection\nSource tree was most recently fetched and built."
              type: "integer"
              format: "int64"
              x-go-name: "RefreshTimeUsecs"
            registrationTimeUsecs: 
              description: "Specifies the Unix epoch time (in microseconds) when the Protection\nSource was registered."
              type: "integer"
              format: "int64"
              x-go-name: "RegistrationTimeUsecs"
            throttlingPolicy: 
              description: "Specifies the throttling policy that should be applied to all datastores\nunder this registered Protection Source."
              $ref: "#/definitions/ThrottlingPolicy"
            throttlingPolicyOverrides: 
              description: "Specifies a list of Throttling Policy for datastores that override the\ncommon throttling policy specified for the registered Protection Source.\nFor datastores not in this list, common policy will still apply."
              type: "array"
              title: "Array of Throttling Policy Overrides for Datastores."
              items: 
                $ref: "#/definitions/ThrottlingPolicyOverride"
              x-go-name: "ThrottlingPolicyOverrides"
            username: 
              description: "Specifies username to access the target source."
              type: "string"
              x-go-name: "Username"
            warningMessages: 
              description: "Though the registration may succeed, warning messages imply the\nhost environment requires some cleanup or fixing."
              type: "array"
              title: "Specifies a list of warnings encountered during registration."
              items: 
                type: "string"
              x-go-name: "WarningMessages"
        unprotectedSourcesSummary: 
          description: "Specifies aggregated information about all the\nchild Objects of this node that are not protected by any Protection Jobs.\nThe aggregated information for the Objects hierarchy's environment\nwill be available at the 0th index of the vector.\nNOTE: This list includes Objects that were protected at some point in the\npast but are no longer actively protected.\nSnapshots containing these Objects may even exist on the Cohesity Cluster\nand be available to recover from."
          type: "array"
          title: "Array of Unprotected Sources."
          items: 
            $ref: "#/definitions/AggregatedSubtreeInfo"
          x-go-name: "UnprotectedSourcesSummary"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionSourceSnapshotInformation: 
      description: "Specifies details about a Snapshot that backups up a leaf\nProtection Source Object."
      type: "object"
      title: "Protection Source Snapshot."
      properties: 
        copyTasks: 
          description: "Specifies a list of copy tasks (such as replication and\narchival tasks)."
          type: "array"
          title: "Array of Snapshot Copy Tasks."
          items: 
            $ref: "#/definitions/SnapshotCopyTask"
          x-go-name: "CopyTasks"
        jobId: 
          description: "Specifies the id of the Protection Job."
          type: "integer"
          format: "int64"
          x-go-name: "JobId"
        jobName: 
          description: "Specifies the name of the Protection Job."
          type: "string"
          x-go-name: "JobName"
        jobRunId: 
          description: "Specifies the id of the Job Run."
          type: "integer"
          format: "int64"
          x-go-name: "JobRunId"
        lastRunEndTimeUsecs: 
          description: "Specifies the end time of the last Job Run.\nThe time is specified in Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "LastRunEndTimeUsecs"
        lastRunStartTimeUsecs: 
          description: "Specifies the start time of the last Job Run.\nThe time is specified in Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "LastRunStartTimeUsecs"
        message: 
          description: "Specifies warning or error information when the Job Run is not\nsuccessful."
          type: "string"
          x-go-name: "Message"
        numBytesRead: 
          description: "Specifies the total number of bytes read."
          type: "integer"
          format: "int64"
          x-go-name: "NumBytesRead"
        numLogicalBytesProtected: 
          description: "Specifies the total number of logical bytes that are protected. The\nlogical size is when the data is fully hydrated or expanded."
          type: "integer"
          format: "int64"
          x-go-name: "NumLogicalBytesProtected"
        paginationCookie: 
          description: "Specifies an opaque string to pass into the next request to get\nthe next set of Snapshots for pagination purposes. If null, this\nis the last set of Snapshots or the number of Snapshots returned\nis equal to or less than the specified pageCount."
          type: "integer"
          format: "uint64"
          x-go-name: "PaginationCookie"
        runStatus: 
          description: "Specifies the type of the Job Run.\n'kSuccess' indicates that the Job Run was successful.\n'kRunning' indicates that the Job Run is currently running.\n'kWarning' indicates that the Job Run was successful but warnings were\nissued.\n'kCancelled' indicates that the Job Run was canceled.\n'kError' indicates the Job Run encountered an error and did not run to\ncompletion."
          type: "string"
          enum: 
            - "kSuccess"
            - "kRunning"
            - "kWarning"
            - "kCancelled"
            - "kError"
          x-go-name: "RunStatus"
        runType: 
          description: "Specifies the status of the Job Run.\n'kRegular' indicates an incremental (CBT) backup. Incremental backups\nutilizing CBT (if supported) are captured of the target protection\nobjects.\nThe first run of a kRegular schedule captures all the blocks.\n'kFull' indicates a full (no CBT) backup. A complete backup\n(all blocks) of the target protection objects are always captured and\nChange Block Tracking (CBT) is not utilized.\n'kLog' indicates a Database Log backup. Capture the database\ntransaction logs to allow rolling back to a specific point in time."
          type: "string"
          enum: 
            - "kRegular"
            - "kFull"
            - "kLog"
          x-go-name: "ScheduleType"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionSourceTreeInfo: 
      description: "Specifies the registration and protection information of a registered\nProtection Source Tree on the Cohesity Cluster.\n\nMany different Protection Source trees are supported such as\n'kVMware', 'kAcropolis', 'kPhysical' etc.,"
      type: "object"
      title: "Registration and Protection Information of a Protection Source Tree."
      properties: 
        registrationInfo: 
          description: "Specifies registration information for a root node in a Protection\nSources tree. A root node represents a registered Source on the\nCohesity Cluster, such as a vCenter Server."
          type: "object"
          title: "Registered Source Info."
          properties: 
            accessInfo: 
              description: "Specifies the parameters required to establish a connection\nwith a particular environment."
              $ref: "#/definitions/ConnectorParams"
            authenticationErrorMessage: 
              description: "Specifies an authentication error message. This indicates the given\ncredentials are rejected and the registration of the source is not\nsuccessful."
              type: "string"
              x-go-name: "AuthenticationErrorMessage"
            authenticationStatus: 
              description: "Specifies the status of the authenticating to the Protection Source\nwhen registering it with Cohesity Cluster. If the status is 'kFinished'\nand there is no error, registration is successful.\nSpecifies the status of the authentication during the registration of a\nProtection Source.\n'kPending' indicates the authentication is in progress.\n'kScheduled' indicates the authentication is scheduled.\n'kFinished' indicates the authentication is completed."
              type: "string"
              enum: 
                - "kPending"
                - "kScheduled"
                - "kFinished"
              x-go-name: "AuthenticationStatus"
            environments: 
              description: "Specifies a list of applications environment that are registered\nwith this Protection Source such as 'kSQL'.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
              type: "array"
              items: 
                type: "string"
                enum: 
                  - "kVMware"
                  - "kSQL"
                  - "kView"
                  - "kPuppeteer"
                  - "kPhysical"
                  - "kPure"
                  - "kNetapp"
                  - "kGenericNas"
                  - "kHyperV"
                  - "kAcropolis"
                  - "kAzure"
              x-go-name: "Environments"
            minimumFreeSpaceGB: 
              description: "Specifies the minimum free space in GiB of the space expected to be\navailable on the datastore where the virtual disks of the VM being backed\nup. If the amount of free space(in GiB) is lower than the value given by\nthis field, backup will be aborted. Note that this field is applicable\nonly to 'kVMware' type of environments."
              type: "integer"
              format: "int64"
              x-go-name: "MinimumFreeSpaceGB"
            nasMountCredentials: 
              description: "Specifies the credentials required to mount directories on the NetApp\nserver if given."
              type: "object"
              title: "NAS Server Credentials."
              properties: 
                domain: 
                  description: "Specifies the domain in which this credential is valid."
                  type: "string"
                  x-go-name: "Domain"
                nasProtocol: 
                  description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
                  type: "string"
                  enum: 
                    - "kNfs3"
                    - "kCifs1"
                  x-go-name: "NasProtocol"
                password: 
                  description: "Specifies the password for the username to use for mounting the NAS."
                  type: "string"
                  x-go-name: "Password"
                username: 
                  description: "Specifies a username to use for mounting the NAS."
                  type: "string"
                  x-go-name: "Username"
            password: 
              description: "Specifies password of the username to access the target source."
              type: "string"
              x-go-name: "Password"
            refreshErrorMessage: 
              description: "Specifies a message if there was any error encountered during the last\nrebuild of the Protection Source tree. If there was no error during the\nlast rebuild, this field is reset."
              type: "string"
              x-go-name: "RefreshErrorMessage"
            refreshTimeUsecs: 
              description: "Specifies the Unix epoch time (in microseconds) when the Protection\nSource tree was most recently fetched and built."
              type: "integer"
              format: "int64"
              x-go-name: "RefreshTimeUsecs"
            registrationTimeUsecs: 
              description: "Specifies the Unix epoch time (in microseconds) when the Protection\nSource was registered."
              type: "integer"
              format: "int64"
              x-go-name: "RegistrationTimeUsecs"
            throttlingPolicy: 
              description: "Specifies the throttling policy that should be applied to all datastores\nunder this registered Protection Source."
              $ref: "#/definitions/ThrottlingPolicy"
            throttlingPolicyOverrides: 
              description: "Specifies a list of Throttling Policy for datastores that override the\ncommon throttling policy specified for the registered Protection Source.\nFor datastores not in this list, common policy will still apply."
              type: "array"
              title: "Array of Throttling Policy Overrides for Datastores."
              items: 
                $ref: "#/definitions/ThrottlingPolicyOverride"
              x-go-name: "ThrottlingPolicyOverrides"
            username: 
              description: "Specifies username to access the target source."
              type: "string"
              x-go-name: "Username"
            warningMessages: 
              description: "Though the registration may succeed, warning messages imply the\nhost environment requires some cleanup or fixing."
              type: "array"
              title: "Specifies a list of warnings encountered during registration."
              items: 
                type: "string"
              x-go-name: "WarningMessages"
        rootNode: 
          description: "Specifies the Protection Source for the root node of the Protection\nSource tree."
          type: "object"
          title: "Protection Source."
          properties: 
            acropolisProtectionSource: 
              description: "Specifies details about an Acropolis Protection Source\nwhen the environment is set to 'kAcropolis'."
              type: "object"
              title: "Acropolis Protection Source."
              properties: 
                clusterUuid: 
                  description: "Specifies the UUID of the Acropolis cluster instance to which this\nentity belongs to."
                  type: "string"
                  x-go-name: "ClusterUuid"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                mountPath: 
                  description: "Specifies whether the the VM is an agent VM. This is applicable to\nacropolis entity of type kVirtualMachine."
                  type: "boolean"
                  x-go-name: "IsAgentVm"
                name: 
                  description: "Specifies the name of the Acropolis Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of an Acropolis Protection Source Object such as\n'kPrismCentral', 'kHost', 'kNetwork', etc.\nSpecifies the type of an Acropolis source entity.\n'kPrismCentral' indicates a collection of multiple Nutanix clusters.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an Acropolis host.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kStorageContainer' represents a storage container object."
                  type: "string"
                  enum: 
                    - "kPrismCentral"
                    - "kStandaloneCluster"
                    - "kCluster"
                    - "kHost"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kStorageContainer"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Acropolis Object. This is unique within the\ncluster instance. Together with clusterUuid, this entity is unique\nwithin the Acropolis environment."
                  type: "string"
                  x-go-name: "Uuid"
            awsProtectionSource: 
              description: "Specifies details about an AWS Protection Source\nwhen the environment is set to 'kAWS'."
              type: "object"
              title: "AWS Protection Source."
              properties: 
                hostType: 
                  description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                ipAddresses: 
                  description: "Specifies the IP address of the entity of type 'kVirtualMachine'."
                  type: "string"
                  x-go-name: "IpAddress"
                name: 
                  description: "Specifies the name of the AWS Object set by the Cloud Provider."
                  type: "string"
                  x-go-name: "Name"
                ownerId: 
                  description: "Specifies the owner id of the resource in AWS environment. With type,\nname and ownerId gives a globally unique identity to the AWS entity."
                  type: "string"
                  x-go-name: "OwnerId"
                regionId: 
                  description: "Specifies the region Id of the entity if the entity is an EC2 instance."
                  type: "string"
                  x-go-name: "RegionId"
                resourceId: 
                  description: "Specifies the unique Id of the resource given by the cloud provider."
                  type: "string"
                  x-go-name: "ResourceId"
                type: 
                  description: "Specifies the type of an AWS Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an AWS source entity.\n'kIAMUser' indicates a unique user within an AWS account.\n'kRegion' indicates a geographical region in the global infrastructure.\n'kAvailabilityZone' indicates an availability zone within a region.\n'kEC2Instance' indicates a Virtual Machine running in AWS environment.\n'kVPC' indicates a virtual private cloud (VPC) network within AWS.\n'kSubnet' indicates a subnet inside the VPC.\n'kNetworkSecurityGroup' represents a network security group.\n'kInstanceType' represents various machine types.\n'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine."
                  type: "string"
                  enum: 
                    - "kIAMUser"
                    - "kRegion"
                    - "kAvailabilityZone"
                    - "kEC2Instance"
                    - "kVPC"
                    - "kSubnet"
                    - "kNetworkSecurityGroup"
                    - "kInstanceType"
                    - "kKeyPair"
                  x-go-name: "Type"
                userAccountId: 
                  description: "Specifies the account id derived from the ARN of the user."
                  type: "string"
                  x-go-name: "UserAccountId"
                userResourceName: 
                  description: "Specifies the Amazon Resource Name (ARN) of the user."
                  type: "string"
                  x-go-name: "UserResourceName"
            azureProtectionSource: 
              description: "Specifies details about an Azure Protection Source\nwhen the environment is set to 'kAzure'."
              type: "object"
              title: "Azure Protection Source."
              properties: 
                hostType: 
                  description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                ipAddresses: 
                  type: "array"
                  title: "Specifies a list of IP addresses for entities of type 'kVirtualMachine'."
                  items: 
                    type: "string"
                  x-go-name: "IpAddresses"
                location: 
                  description: "Specifies the physical location of the resource group."
                  type: "string"
                  x-go-name: "Location"
                memoryMbytes: 
                  description: "Specifies the amount of memory in MegaBytes of the Azure resource of\ntype 'kComputeOptions'."
                  type: "integer"
                  format: "int64"
                  x-go-name: "MemoryMbytes"
                name: 
                  description: "Specifies the name of the Azure Object set by the Cloud Provider.\nIf the provider did not set a name for the object, this field is not set."
                  type: "string"
                  x-go-name: "Name"
                numCores: 
                  description: "Specifies the number of CPU cores of the Azure resource of\ntype 'kComputeOptions'."
                  type: "integer"
                  format: "int32"
                  x-go-name: "NumCores"
                resourceId: 
                  description: "Specifies the unique Id of the resource in Azure environment."
                  type: "string"
                  x-go-name: "ResourceId"
                type: 
                  description: "Specifies the type of an Azure Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an Azure source entity.\n'kSubscription' indicates a billing unit within Azure account.\n'kResourceGroup' indicates a container that holds related resources.\n'kVirtualMachine' indicates a Virtual Machine in Azure environment.\n'kStorageAccount' represents a collection of storage containers.\n'kStorageKey' indicates a key required to access the storage account.\n'kStorageContainer' represents a storage container within a storage account.\n'kStorageBlob' represents a storage blog within a storage container.\n'kNetworkSecurityGroup' represents a network security group.\n'kVirtualNetwork' represents a virtual network.\n'kSubnet' represents a subnet within the virtual network.\n'kComputeOptions' indicates the number of CPU cores and memory size available for a type of a Virtual Machine."
                  type: "string"
                  enum: 
                    - "kSubscription"
                    - "kResourceGroup"
                    - "kVirtualMachine"
                    - "kStorageAccount"
                    - "kStorageKey"
                    - "kStorageContainer"
                    - "kStorageBlob"
                    - "kNetworkSecurityGroup"
                    - "kVirtualNetwork"
                    - "kSubnet"
                    - "kComputeOptions"
                  x-go-name: "Type"
            environment: 
              description: "Specifies the environment (such as 'kVMware' or 'kSQL') where the\nProtection Source exists. Depending on the environment, one of the\nfollowing Protection Sources are initialized.\n\nNOTE: kPuppeteer refers to Cohesity's Remote Adapter.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
              type: "string"
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetapp"
                - "kGenericNas"
                - "kHyperV"
                - "kAcropolis"
                - "kAzure"
              x-go-name: "Environment"
            hypervProtectionSource: 
              description: "Specifies details about a HyperV Protection Source\nwhen the environment is set to 'kHyperV'."
              type: "object"
              title: "HyperV Protection Source."
              properties: 
                agentInfo: 
                  description: "Specifies information about the agent running on the HyperV objects."
                  $ref: "#/definitions/AgentInformation"
                backupType: 
                  description: "Specifies the type of backup supported by the VM.\n'kRctBackup', 'kVssBackup'\nSpecifies the type of an HyperV datastore object.\n'kRctBackup' indicates backup is done using RCT/checkpoints.\n'kVssBackup' indicates backup is done using VSS."
                  type: "string"
                  enum: 
                    - "kRctBackup"
                    - "kVssBackup"
                  x-go-name: "BackupType"
                clusterName: 
                  description: "Specifies the cluster name for 'kHostCluster' objects."
                  type: "string"
                  x-go-name: "ClusterName"
                datastoreInfo: 
                  description: "Specifies additional information for 'kDatastore' objects."
                  $ref: "#/definitions/HypervDatastore"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                hostType: 
                  description: "Specifies host OS type for 'kVirtualMachine' objects.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                hypervUuid: 
                  description: "Specifies the UUID for 'kVirtualMachine' HyperV objects."
                  type: "string"
                  x-go-name: "HypervUuid"
                name: 
                  description: "Specifies the name of the HyperV Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of an HyperV Protection Source Object such as\n'kSCVMMServer', 'kStandaloneHost', 'kNetwork', etc.\noverrideDescription: true\nSpecifies the type of an HyperV Protection Source.\n'kSCVMMServer' indicates a collection of root folders clusters.\n'kStandaloneHost' indicates a single Nutanix cluster.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kHostGroup' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an HyperV host.\n'kHostCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kDatastore' represents a storage container object."
                  type: "string"
                  enum: 
                    - "kSCVMMServer"
                    - "kStandaloneHost"
                    - "kStandaloneCluster"
                    - "kHostGroup"
                    - "kHost"
                    - "kHostCluster"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kDatastore"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Object. This is unique within the HyperV\nenvironment."
                  type: "string"
                  x-go-name: "Uuid"
                vmInfo: 
                  description: "Specifies additional information for 'kVirtualMachine' objects."
                  $ref: "#/definitions/HypervVirtualMachine"
            id: 
              description: "Specifies an id of the Protection Source."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
            kvmProtectionSource: 
              description: "Specifies details about a KVM Protection Source\nwhen the environment is set to 'kKVM'."
              type: "object"
              title: "KVM Protection Source."
              properties: 
                agentError: 
                  description: "Specifies a message when the agent cannot be reached."
                  type: "string"
                  x-go-name: "AgentError"
                agentId: 
                  description: "Specifies the ID of the Agent with which this KVM entity is associated\nwhen the entity represents a Delegate host or KVM host."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AgentId"
                clusterId: 
                  description: "Specifies the cluster ID for 'kCluster' objects."
                  type: "string"
                  x-go-name: "ClusterId"
                datacenterId: 
                  description: "Specifies the ID of the 'kDatacenter' objects."
                  type: "string"
                  x-go-name: "DatacenterId"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                name: 
                  description: "Specifies the name of the KVM entity."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of KVM Protection Source entities such as\n'kDatacenter', 'kCluster', 'kVirtualMachine', etc.\nSpecifies the type of an KVM source entity.\n'kOVirtManager' indicates the root entity registerd with Cohesity cluster.\n'kStandaloneHost' indicates a host registered with Cohesity cluster.\n'kDatacenter' indicates a KVM datacenter managed by the OVirt manager.\n'kCluster' indicates a KVM cluster managed by the OVirt manager.\n'kHost' indicates a host within the KVM environment.\n'kVirtualMachine' indicates a virtual machine in the KVM enironment.\n'kNetwork' represents a network used by the virtual machine entity.\n'kStorageDomain' represents a storage domain in the KVM environment."
                  type: "string"
                  enum: 
                    - "kOVirtManager"
                    - "kStandaloneHost"
                    - "kDatacenter"
                    - "kCluster"
                    - "kHost"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kStorageDomain"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Object. This is unique within the KVM\nenvironment."
                  type: "string"
                  x-go-name: "Uuid"
            name: 
              description: "Specifies a name of the Protection Source."
              type: "string"
              x-go-name: "Name"
            nasProtectionSource: 
              description: "Specifies details about a Generic NAS Protection Source\nwhen the environment is set to 'kGenericNas'."
              type: "object"
              title: "Generic NAS Protection Source."
              properties: 
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                mountPath: 
                  description: "Specifies the mount path of this NAS. For example, for a NFS mount point,\nthis should be in the format of IP or hostname:/foo/bar."
                  type: "string"
                  x-go-name: "MountPath"
                name: 
                  description: "Specifies the name of the NetApp Object."
                  type: "string"
                  x-go-name: "Name"
                protocol: 
                  description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
                  type: "string"
                  enum: 
                    - "kNfs3"
                    - "kCifs1"
                  x-go-name: "Protocol"
                type: 
                  description: "Specifies the type of a Protection Source Object in a generic NAS Source\nsuch as 'kGroup', or 'kHost'.\nSpecifies the kind of NAS mount.\n'kGroup' indicates top level node that holds individual NAS hosts.\n'kHost' indicates a single NAS path that can be mounted."
                  type: "string"
                  enum: 
                    - "kGroup"
                    - "kHost"
                  x-go-name: "Type"
            netappProtectionSource: 
              description: "Specifies details about a NetApp Protection Source\nwhen the environment is set to 'kNetapp'."
              type: "object"
              title: "NetApp Protection Source."
              properties: 
                clusterInfo: 
                  description: "Specifies information about a NetApp cluster and is only valid for a\nNetApp Object of type kCluster."
                  $ref: "#/definitions/NetappClusterInfo"
                isTopLevel: 
                  description: "Specifies if this Object is a top level Object.\nBecause a top level Object can either be a NetApp cluster or a Vserver,\nthis cannot be determined only by type."
                  type: "boolean"
                  x-go-name: "IsTopLevel"
                name: 
                  description: "Specifies the name of the NetApp Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed NetApp Object in a NetApp Protection Source\nsuch as 'kCluster', 'kVserver' or 'kVolume'."
                  type: "string"
                  enum: 
                    - "kCluster"
                    - "kVserver"
                    - "kVolume"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the globally unique ID of this Object assigned by the\nNetApp server."
                  type: "string"
                  x-go-name: "Uuid"
                volumeInfo: 
                  description: "Specifies information about a NetApp volume and is only valid for a\nNetApp Object of type kVolume."
                  $ref: "#/definitions/NetappVolumeInfo"
                vserverInfo: 
                  description: "Specifies information about a NetApp Vserver and is only valid for a\nNetApp Object of type kVserver."
                  $ref: "#/definitions/NetappVserverInfo"
            parentId: 
              description: "Specifies an id of the parent of the Protection Source."
              type: "integer"
              format: "int64"
              x-go-name: "ParentId"
            physicalProtectionSource: 
              description: "Specifies details about a Physical Protection Source\nwhen the environment is set to 'kPhysical'."
              type: "object"
              title: "Physical Protection Source."
              properties: 
                agents: 
                  description: "Specifiles the agents running on the Physical Protection Source and the\nstatus information."
                  type: "array"
                  title: "Array of Agents on the Physical Protection Source."
                  items: 
                    $ref: "#/definitions/AgentInformation"
                  x-go-name: "Agents"
                hostType: 
                  description: "Specifies the environment type for the host.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                id: 
                  description: "Specifies a unique id of a Physical Protection Source.\nThe id is unique across Cohesity Clusters."
                  type: "object"
                  title: "Unique Global Id."
                  properties: 
                    clusterId: 
                      description: "Specifies the Cohesity Cluster id where the object was created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterId"
                    clusterIncarnationId: 
                      description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterIncarnationId"
                    id: 
                      description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                      type: "integer"
                      format: "int64"
                      x-go-name: "Id"
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed Object in a Physical Protection Source.\n'kHost' indicates a single physical server.\n'kWindowsCluster' indicates a Microsoft Windows cluster."
                  type: "string"
                  enum: 
                    - "kHost"
                    - "kWindowsCluster"
                  x-go-name: "Type"
                volumes: 
                  description: "Specifies the volumes available on the physical host.\nThese fields are populated only for the kPhysicalHost type."
                  type: "array"
                  title: "Array of Physical Volumes."
                  items: 
                    $ref: "#/definitions/PhysicalVolume"
                  x-go-name: "Volumes"
            pureProtectionSource: 
              description: "Specifies details about a Pure Protection Source\nwhen the environment is set to 'kPure'."
              type: "object"
              title: "Pure Protection Source."
              properties: 
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                storageArray: 
                  description: "Specifies a Pure Storage Array information. This is set only when\nthe type is kStorageArray."
                  $ref: "#/definitions/PureStorageArray"
                type: 
                  description: "Specifies the type of managed Object in a pure Protection Source like\na kStorageArray or kVolume.\nExamples of Pure Objects include 'kStorageArray' and 'kVolume'."
                  type: "string"
                  enum: 
                    - "kStorageArray"
                    - "kVolume"
                  x-go-name: "Type"
                volume: 
                  description: "Specifies a Pure Volume information within a storage array.\nThis is set only when the type is kVolume."
                  $ref: "#/definitions/PureVolume"
            sqlProtectionSource: 
              description: "Specifies details about a SQL Protection Source\nwhen the environment is set to 'kSQL'."
              type: "object"
              title: "SQL Protection Source."
              properties: 
                IsAvailableForVssBackup: 
                  description: "Specifies whether the database is marked as available for backup according\nto the SQL Server VSS writer. This may be false if either the state of\nthe databases is not online, or if the VSS writer is not online.\nThis field is set only for type 'kDatabase'."
                  type: "boolean"
                createdTimestamp: 
                  description: "Specifies the time when the database was created. It is displayed in the\ntimezone of the SQL server on which this database is running."
                  type: "string"
                  x-go-name: "CreatedTimestamp"
                databaseName: 
                  description: "Specifies the database name of the SQL Protection Source, if the type\nis database."
                  type: "string"
                  x-go-name: "DatabaseName"
                dbAagEntityId: 
                  description: "Specifies the AAG entity id if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
                  type: "integer"
                  format: "int64"
                  x-go-name: "DbAagEntityId"
                dbAagName: 
                  description: "Specifies the name of the AAG if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
                  type: "string"
                  x-go-name: "DbAagName"
                dbFiles: 
                  description: "Specifies the last known information about the set of database files\non the host. This field is set only for type 'kDatabase'."
                  type: "array"
                  items: 
                    $ref: "#/definitions/DbFileInfo"
                  x-go-name: "DbFiles"
                id: 
                  description: "Specifies an id that identifies an SQL Object."
                  $ref: "#/definitions/SqlSourceId"
                name: 
                  description: "Specifies the instance name of the SQL Protection Source"
                  type: "string"
                  x-go-name: "Name"
                ownerId: 
                  description: "Specifies the id of the container VM for the SQL Protection Source."
                  type: "integer"
                  format: "int64"
                  x-go-name: "OwnerId"
                recoveryModel: 
                  description: "Specifies the Recovery Model for the database in SQL environment.\nOnly meaningful for the 'kDatabase' SQL Protection Source.\nSpecifies the Recovery Model set for the Microsoft SQL Server.\n'kSimpleRecoveryModel' indicates the Simple SQL Recovery Model which\ndoes not utilize log backups.\n'kFullRecoveryModel' indicates the Full SQL Recovery Model which\nrequires log backups and allows recovery to a single point in time.\n'kBulkLoggedRecoveryModel' indicates the Bulk Logged SQL Recovery Model\nwhich requires log backups and allows high-performance bulk copy operations."
                  type: "string"
                  enum: 
                    - "kSimpleRecoveryModel"
                    - "kFullRecoveryModel"
                    - "kBulkLoggedRecoveryModel"
                  x-go-name: "RecoveryModel"
                sqlServerDbState: 
                  description: "The state of the database as returned by SQL Server."
                  type: "integer"
                  format: "int32"
                  x-go-name: "SqlServerDbState"
                type: 
                  description: "Specifies the type of the managed Object in a SQL Protection Source.\nExamples of SQL Objects include 'kInstance' and 'kDatabase'."
                  type: "string"
                  enum: 
                    - "kInstance"
                    - "kDatabase"
                  x-go-name: "Type"
            viewProtectionSource: 
              description: "Specifies details about a View Protection Source\nwhen the environment is set to 'kView'."
              type: "object"
              title: "View Protection Source."
              properties: 
                id: 
                  description: "Specifies a unique id of a Protection Source for a View.\nThe id is unique across Cohesity Clusters."
                  type: "object"
                  title: "Unique Global Id."
                  properties: 
                    clusterId: 
                      description: "Specifies the Cohesity Cluster id where the object was created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterId"
                    clusterIncarnationId: 
                      description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterIncarnationId"
                    id: 
                      description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                      type: "integer"
                      format: "int64"
                      x-go-name: "Id"
                name: 
                  description: "Specifies a human readable name of the Protection Source of a View."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed Object in a View Protection Source\nenvironment.\nExamples of View Objects include 'kViewBox' or 'kView'."
                  type: "string"
                  enum: 
                    - "kViewBox"
                    - "kView"
                  x-go-name: "Type"
            vmWareProtectionSource: 
              description: "Specifies details about a VMware Protection Source\nwhen the environment is set to 'kVMware'."
              type: "object"
              title: "VMware Protection Source."
              properties: 
                agentId: 
                  description: "Specifies the id of the persistent agent."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AgentId"
                agents: 
                  description: "This is set only if the Virtual Machine has persistent agent."
                  type: "array"
                  title: "Specifies the list of agent information on the Virtual Machine."
                  items: 
                    $ref: "#/definitions/AgentInformation"
                  x-go-name: "Agents"
                connectionState: 
                  description: "Specifies the connection state of the Object and are only valid for\nESXi hosts ('kHostSystem') or Virtual Machines ('kVirtualMachine').\nThese enums are equivalent to the connection states documented in\nVMware's reference documentation.\nExamples of Cohesity connection states include 'kConnected',\n'kDisconnected', 'kInacccessible', etc."
                  type: "string"
                  enum: 
                    - "kConnected"
                    - "kDisconnected"
                    - "kInacccessible"
                    - "kInvalid"
                    - "kOrphaned"
                    - "kNotResponding"
                  x-go-name: "ConnectionState"
                datastoreInfo: 
                  description: "Specifies additional information of entities of type 'kDatastore'."
                  $ref: "#/definitions/DatastoreInfo"
                folderType: 
                  description: "Specifies the folder type for the 'kFolder' Object.\n'kVMFolder' indicates folder can hold VMs or vApps.\n'kHostFolder' indicates folder can hold hosts and compute resources.\n'kDatastoreFolder' indicates folder can hold datastores and storage pods.\n'kNetworkFolder' indicates folder can hold networks and switches.\n'kRootFolder' indicates folder can hold datacenters."
                  type: "string"
                  enum: 
                    - "kVMFolder"
                    - "kHostFolder"
                    - "kDatastoreFolder"
                    - "kNetworkFolder"
                    - "kRootFolder"
                  x-go-name: "FolderType"
                hasPersistentAgent: 
                  description: "Set to true if a persistent agent is running on the Virtual Machine.\nThis is populated for entities of type 'kVirtualMachine'."
                  type: "boolean"
                  x-go-name: "HasPersistentAgent"
                hostType: 
                  description: "Specifies the host type for the 'kVirtualMachine' Object.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                id: 
                  description: "Specifies the UUID of the VMware Protection Source."
                  $ref: "#/definitions/VMwareObjectId"
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                tagAttributes: 
                  description: "Specifies the optional list of VM Tag attributes associated with this\nObject."
                  type: "array"
                  items: 
                    $ref: "#/definitions/TagAttribute"
                  x-go-name: "TagAttributes"
                toolsRunningStatus: 
                  description: "Specifies the status of VMware Tools for the guest OS on the VM.\nThis is only valid for the 'kVirtualMachine' type.\n'kGuestToolsRunning' means the VMware tools are running on the guest OS.\n'kGuestToolsNotRunning' means the VMware tools are not running on the\nguest OS.\n'kUnknown' means the state of the VMware tools on the guest OS is not\nknown.\n'kGuestToolsExecutingScripts' means the guest OS is currently executing\nscripts using VMware tools."
                  type: "string"
                  enum: 
                    - "kUnknown"
                    - "kGuestToolsExecutingScripts"
                    - "kGuestToolsNotRunning"
                    - "kGuestToolsRunning"
                  x-go-name: "VMwareToolsRunningStatus"
                type: 
                  description: "Specifies the type of managed Object in a VMware Protection Source.\nExamples of VMware Objects include 'kVCenter', 'kFolder', 'kDatacenter',\n'kResourcePool', 'kDatastore', 'kVirtualMachine', etc."
                  type: "string"
                  enum: 
                    - "kVCenter"
                    - "kFolder"
                    - "kDatacenter"
                    - "kComputeResource"
                    - "kClusterComputeResource"
                    - "kResourcePool"
                    - "kDatastore"
                    - "kHostSystem"
                    - "kVirtualMachine"
                    - "kVirtualApp"
                    - "kStandaloneHost"
                    - "kStoragePod"
                    - "kNetwork"
                    - "kDistributedVirtualPortgroup"
                    - "kTagCategory"
                    - "kTag"
                  x-go-name: "Type"
                virtualDisks: 
                  description: "This is populated for entities of type 'kVirtualMachine'."
                  type: "array"
                  title: "Specifies an array of virtual disks that are part of the Virtual Machine."
                  items: 
                    $ref: "#/definitions/VirtualDiskInfo"
                  x-go-name: "VirtualDisks"
        stats: 
          description: "Specifies the stats of protection for a Protection Source Tree."
          type: "object"
          title: "Protection Summary Information of a registered Protection Source tree or\nthe Cohesity Cluster."
          properties: 
            protectedCount: 
              description: "Specifies the number of objects that are protected under the given\nentity."
              type: "integer"
              format: "int64"
              x-go-name: "ProtectedCount"
            protectedSize: 
              description: "Specifies the total size of the protected objects under the given entity."
              type: "integer"
              format: "int64"
              x-go-name: "ProtectedSize"
            unprotectedCount: 
              description: "Specifies the number of objects that are not protected under the given\nentity."
              type: "integer"
              format: "int64"
              x-go-name: "UnprotectedCount"
            unprotectedSize: 
              description: "Specifies the total size of the unprotected objects under the given\nentity."
              type: "integer"
              format: "int64"
              x-go-name: "UnprotectedSize"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionSourcesJobRunsReportElement: 
      description: "Specifies a Protection Source and the Snapshots that back it up."
      type: "object"
      title: "Protection Source and Snapshots."
      properties: 
        protectionSource: 
          description: "Specifies the leaf Protection Source Object such as a VM."
          type: "object"
          title: "Protection Source."
          properties: 
            acropolisProtectionSource: 
              description: "Specifies details about an Acropolis Protection Source\nwhen the environment is set to 'kAcropolis'."
              type: "object"
              title: "Acropolis Protection Source."
              properties: 
                clusterUuid: 
                  description: "Specifies the UUID of the Acropolis cluster instance to which this\nentity belongs to."
                  type: "string"
                  x-go-name: "ClusterUuid"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                mountPath: 
                  description: "Specifies whether the the VM is an agent VM. This is applicable to\nacropolis entity of type kVirtualMachine."
                  type: "boolean"
                  x-go-name: "IsAgentVm"
                name: 
                  description: "Specifies the name of the Acropolis Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of an Acropolis Protection Source Object such as\n'kPrismCentral', 'kHost', 'kNetwork', etc.\nSpecifies the type of an Acropolis source entity.\n'kPrismCentral' indicates a collection of multiple Nutanix clusters.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an Acropolis host.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kStorageContainer' represents a storage container object."
                  type: "string"
                  enum: 
                    - "kPrismCentral"
                    - "kStandaloneCluster"
                    - "kCluster"
                    - "kHost"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kStorageContainer"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Acropolis Object. This is unique within the\ncluster instance. Together with clusterUuid, this entity is unique\nwithin the Acropolis environment."
                  type: "string"
                  x-go-name: "Uuid"
            awsProtectionSource: 
              description: "Specifies details about an AWS Protection Source\nwhen the environment is set to 'kAWS'."
              type: "object"
              title: "AWS Protection Source."
              properties: 
                hostType: 
                  description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                ipAddresses: 
                  description: "Specifies the IP address of the entity of type 'kVirtualMachine'."
                  type: "string"
                  x-go-name: "IpAddress"
                name: 
                  description: "Specifies the name of the AWS Object set by the Cloud Provider."
                  type: "string"
                  x-go-name: "Name"
                ownerId: 
                  description: "Specifies the owner id of the resource in AWS environment. With type,\nname and ownerId gives a globally unique identity to the AWS entity."
                  type: "string"
                  x-go-name: "OwnerId"
                regionId: 
                  description: "Specifies the region Id of the entity if the entity is an EC2 instance."
                  type: "string"
                  x-go-name: "RegionId"
                resourceId: 
                  description: "Specifies the unique Id of the resource given by the cloud provider."
                  type: "string"
                  x-go-name: "ResourceId"
                type: 
                  description: "Specifies the type of an AWS Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an AWS source entity.\n'kIAMUser' indicates a unique user within an AWS account.\n'kRegion' indicates a geographical region in the global infrastructure.\n'kAvailabilityZone' indicates an availability zone within a region.\n'kEC2Instance' indicates a Virtual Machine running in AWS environment.\n'kVPC' indicates a virtual private cloud (VPC) network within AWS.\n'kSubnet' indicates a subnet inside the VPC.\n'kNetworkSecurityGroup' represents a network security group.\n'kInstanceType' represents various machine types.\n'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine."
                  type: "string"
                  enum: 
                    - "kIAMUser"
                    - "kRegion"
                    - "kAvailabilityZone"
                    - "kEC2Instance"
                    - "kVPC"
                    - "kSubnet"
                    - "kNetworkSecurityGroup"
                    - "kInstanceType"
                    - "kKeyPair"
                  x-go-name: "Type"
                userAccountId: 
                  description: "Specifies the account id derived from the ARN of the user."
                  type: "string"
                  x-go-name: "UserAccountId"
                userResourceName: 
                  description: "Specifies the Amazon Resource Name (ARN) of the user."
                  type: "string"
                  x-go-name: "UserResourceName"
            azureProtectionSource: 
              description: "Specifies details about an Azure Protection Source\nwhen the environment is set to 'kAzure'."
              type: "object"
              title: "Azure Protection Source."
              properties: 
                hostType: 
                  description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                ipAddresses: 
                  type: "array"
                  title: "Specifies a list of IP addresses for entities of type 'kVirtualMachine'."
                  items: 
                    type: "string"
                  x-go-name: "IpAddresses"
                location: 
                  description: "Specifies the physical location of the resource group."
                  type: "string"
                  x-go-name: "Location"
                memoryMbytes: 
                  description: "Specifies the amount of memory in MegaBytes of the Azure resource of\ntype 'kComputeOptions'."
                  type: "integer"
                  format: "int64"
                  x-go-name: "MemoryMbytes"
                name: 
                  description: "Specifies the name of the Azure Object set by the Cloud Provider.\nIf the provider did not set a name for the object, this field is not set."
                  type: "string"
                  x-go-name: "Name"
                numCores: 
                  description: "Specifies the number of CPU cores of the Azure resource of\ntype 'kComputeOptions'."
                  type: "integer"
                  format: "int32"
                  x-go-name: "NumCores"
                resourceId: 
                  description: "Specifies the unique Id of the resource in Azure environment."
                  type: "string"
                  x-go-name: "ResourceId"
                type: 
                  description: "Specifies the type of an Azure Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an Azure source entity.\n'kSubscription' indicates a billing unit within Azure account.\n'kResourceGroup' indicates a container that holds related resources.\n'kVirtualMachine' indicates a Virtual Machine in Azure environment.\n'kStorageAccount' represents a collection of storage containers.\n'kStorageKey' indicates a key required to access the storage account.\n'kStorageContainer' represents a storage container within a storage account.\n'kStorageBlob' represents a storage blog within a storage container.\n'kNetworkSecurityGroup' represents a network security group.\n'kVirtualNetwork' represents a virtual network.\n'kSubnet' represents a subnet within the virtual network.\n'kComputeOptions' indicates the number of CPU cores and memory size available for a type of a Virtual Machine."
                  type: "string"
                  enum: 
                    - "kSubscription"
                    - "kResourceGroup"
                    - "kVirtualMachine"
                    - "kStorageAccount"
                    - "kStorageKey"
                    - "kStorageContainer"
                    - "kStorageBlob"
                    - "kNetworkSecurityGroup"
                    - "kVirtualNetwork"
                    - "kSubnet"
                    - "kComputeOptions"
                  x-go-name: "Type"
            environment: 
              description: "Specifies the environment (such as 'kVMware' or 'kSQL') where the\nProtection Source exists. Depending on the environment, one of the\nfollowing Protection Sources are initialized.\n\nNOTE: kPuppeteer refers to Cohesity's Remote Adapter.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
              type: "string"
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetapp"
                - "kGenericNas"
                - "kHyperV"
                - "kAcropolis"
                - "kAzure"
              x-go-name: "Environment"
            hypervProtectionSource: 
              description: "Specifies details about a HyperV Protection Source\nwhen the environment is set to 'kHyperV'."
              type: "object"
              title: "HyperV Protection Source."
              properties: 
                agentInfo: 
                  description: "Specifies information about the agent running on the HyperV objects."
                  $ref: "#/definitions/AgentInformation"
                backupType: 
                  description: "Specifies the type of backup supported by the VM.\n'kRctBackup', 'kVssBackup'\nSpecifies the type of an HyperV datastore object.\n'kRctBackup' indicates backup is done using RCT/checkpoints.\n'kVssBackup' indicates backup is done using VSS."
                  type: "string"
                  enum: 
                    - "kRctBackup"
                    - "kVssBackup"
                  x-go-name: "BackupType"
                clusterName: 
                  description: "Specifies the cluster name for 'kHostCluster' objects."
                  type: "string"
                  x-go-name: "ClusterName"
                datastoreInfo: 
                  description: "Specifies additional information for 'kDatastore' objects."
                  $ref: "#/definitions/HypervDatastore"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                hostType: 
                  description: "Specifies host OS type for 'kVirtualMachine' objects.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                hypervUuid: 
                  description: "Specifies the UUID for 'kVirtualMachine' HyperV objects."
                  type: "string"
                  x-go-name: "HypervUuid"
                name: 
                  description: "Specifies the name of the HyperV Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of an HyperV Protection Source Object such as\n'kSCVMMServer', 'kStandaloneHost', 'kNetwork', etc.\noverrideDescription: true\nSpecifies the type of an HyperV Protection Source.\n'kSCVMMServer' indicates a collection of root folders clusters.\n'kStandaloneHost' indicates a single Nutanix cluster.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kHostGroup' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an HyperV host.\n'kHostCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kDatastore' represents a storage container object."
                  type: "string"
                  enum: 
                    - "kSCVMMServer"
                    - "kStandaloneHost"
                    - "kStandaloneCluster"
                    - "kHostGroup"
                    - "kHost"
                    - "kHostCluster"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kDatastore"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Object. This is unique within the HyperV\nenvironment."
                  type: "string"
                  x-go-name: "Uuid"
                vmInfo: 
                  description: "Specifies additional information for 'kVirtualMachine' objects."
                  $ref: "#/definitions/HypervVirtualMachine"
            id: 
              description: "Specifies an id of the Protection Source."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
            kvmProtectionSource: 
              description: "Specifies details about a KVM Protection Source\nwhen the environment is set to 'kKVM'."
              type: "object"
              title: "KVM Protection Source."
              properties: 
                agentError: 
                  description: "Specifies a message when the agent cannot be reached."
                  type: "string"
                  x-go-name: "AgentError"
                agentId: 
                  description: "Specifies the ID of the Agent with which this KVM entity is associated\nwhen the entity represents a Delegate host or KVM host."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AgentId"
                clusterId: 
                  description: "Specifies the cluster ID for 'kCluster' objects."
                  type: "string"
                  x-go-name: "ClusterId"
                datacenterId: 
                  description: "Specifies the ID of the 'kDatacenter' objects."
                  type: "string"
                  x-go-name: "DatacenterId"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                name: 
                  description: "Specifies the name of the KVM entity."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of KVM Protection Source entities such as\n'kDatacenter', 'kCluster', 'kVirtualMachine', etc.\nSpecifies the type of an KVM source entity.\n'kOVirtManager' indicates the root entity registerd with Cohesity cluster.\n'kStandaloneHost' indicates a host registered with Cohesity cluster.\n'kDatacenter' indicates a KVM datacenter managed by the OVirt manager.\n'kCluster' indicates a KVM cluster managed by the OVirt manager.\n'kHost' indicates a host within the KVM environment.\n'kVirtualMachine' indicates a virtual machine in the KVM enironment.\n'kNetwork' represents a network used by the virtual machine entity.\n'kStorageDomain' represents a storage domain in the KVM environment."
                  type: "string"
                  enum: 
                    - "kOVirtManager"
                    - "kStandaloneHost"
                    - "kDatacenter"
                    - "kCluster"
                    - "kHost"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kStorageDomain"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Object. This is unique within the KVM\nenvironment."
                  type: "string"
                  x-go-name: "Uuid"
            name: 
              description: "Specifies a name of the Protection Source."
              type: "string"
              x-go-name: "Name"
            nasProtectionSource: 
              description: "Specifies details about a Generic NAS Protection Source\nwhen the environment is set to 'kGenericNas'."
              type: "object"
              title: "Generic NAS Protection Source."
              properties: 
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                mountPath: 
                  description: "Specifies the mount path of this NAS. For example, for a NFS mount point,\nthis should be in the format of IP or hostname:/foo/bar."
                  type: "string"
                  x-go-name: "MountPath"
                name: 
                  description: "Specifies the name of the NetApp Object."
                  type: "string"
                  x-go-name: "Name"
                protocol: 
                  description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
                  type: "string"
                  enum: 
                    - "kNfs3"
                    - "kCifs1"
                  x-go-name: "Protocol"
                type: 
                  description: "Specifies the type of a Protection Source Object in a generic NAS Source\nsuch as 'kGroup', or 'kHost'.\nSpecifies the kind of NAS mount.\n'kGroup' indicates top level node that holds individual NAS hosts.\n'kHost' indicates a single NAS path that can be mounted."
                  type: "string"
                  enum: 
                    - "kGroup"
                    - "kHost"
                  x-go-name: "Type"
            netappProtectionSource: 
              description: "Specifies details about a NetApp Protection Source\nwhen the environment is set to 'kNetapp'."
              type: "object"
              title: "NetApp Protection Source."
              properties: 
                clusterInfo: 
                  description: "Specifies information about a NetApp cluster and is only valid for a\nNetApp Object of type kCluster."
                  $ref: "#/definitions/NetappClusterInfo"
                isTopLevel: 
                  description: "Specifies if this Object is a top level Object.\nBecause a top level Object can either be a NetApp cluster or a Vserver,\nthis cannot be determined only by type."
                  type: "boolean"
                  x-go-name: "IsTopLevel"
                name: 
                  description: "Specifies the name of the NetApp Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed NetApp Object in a NetApp Protection Source\nsuch as 'kCluster', 'kVserver' or 'kVolume'."
                  type: "string"
                  enum: 
                    - "kCluster"
                    - "kVserver"
                    - "kVolume"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the globally unique ID of this Object assigned by the\nNetApp server."
                  type: "string"
                  x-go-name: "Uuid"
                volumeInfo: 
                  description: "Specifies information about a NetApp volume and is only valid for a\nNetApp Object of type kVolume."
                  $ref: "#/definitions/NetappVolumeInfo"
                vserverInfo: 
                  description: "Specifies information about a NetApp Vserver and is only valid for a\nNetApp Object of type kVserver."
                  $ref: "#/definitions/NetappVserverInfo"
            parentId: 
              description: "Specifies an id of the parent of the Protection Source."
              type: "integer"
              format: "int64"
              x-go-name: "ParentId"
            physicalProtectionSource: 
              description: "Specifies details about a Physical Protection Source\nwhen the environment is set to 'kPhysical'."
              type: "object"
              title: "Physical Protection Source."
              properties: 
                agents: 
                  description: "Specifiles the agents running on the Physical Protection Source and the\nstatus information."
                  type: "array"
                  title: "Array of Agents on the Physical Protection Source."
                  items: 
                    $ref: "#/definitions/AgentInformation"
                  x-go-name: "Agents"
                hostType: 
                  description: "Specifies the environment type for the host.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                id: 
                  description: "Specifies a unique id of a Physical Protection Source.\nThe id is unique across Cohesity Clusters."
                  type: "object"
                  title: "Unique Global Id."
                  properties: 
                    clusterId: 
                      description: "Specifies the Cohesity Cluster id where the object was created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterId"
                    clusterIncarnationId: 
                      description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterIncarnationId"
                    id: 
                      description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                      type: "integer"
                      format: "int64"
                      x-go-name: "Id"
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed Object in a Physical Protection Source.\n'kHost' indicates a single physical server.\n'kWindowsCluster' indicates a Microsoft Windows cluster."
                  type: "string"
                  enum: 
                    - "kHost"
                    - "kWindowsCluster"
                  x-go-name: "Type"
                volumes: 
                  description: "Specifies the volumes available on the physical host.\nThese fields are populated only for the kPhysicalHost type."
                  type: "array"
                  title: "Array of Physical Volumes."
                  items: 
                    $ref: "#/definitions/PhysicalVolume"
                  x-go-name: "Volumes"
            pureProtectionSource: 
              description: "Specifies details about a Pure Protection Source\nwhen the environment is set to 'kPure'."
              type: "object"
              title: "Pure Protection Source."
              properties: 
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                storageArray: 
                  description: "Specifies a Pure Storage Array information. This is set only when\nthe type is kStorageArray."
                  $ref: "#/definitions/PureStorageArray"
                type: 
                  description: "Specifies the type of managed Object in a pure Protection Source like\na kStorageArray or kVolume.\nExamples of Pure Objects include 'kStorageArray' and 'kVolume'."
                  type: "string"
                  enum: 
                    - "kStorageArray"
                    - "kVolume"
                  x-go-name: "Type"
                volume: 
                  description: "Specifies a Pure Volume information within a storage array.\nThis is set only when the type is kVolume."
                  $ref: "#/definitions/PureVolume"
            sqlProtectionSource: 
              description: "Specifies details about a SQL Protection Source\nwhen the environment is set to 'kSQL'."
              type: "object"
              title: "SQL Protection Source."
              properties: 
                IsAvailableForVssBackup: 
                  description: "Specifies whether the database is marked as available for backup according\nto the SQL Server VSS writer. This may be false if either the state of\nthe databases is not online, or if the VSS writer is not online.\nThis field is set only for type 'kDatabase'."
                  type: "boolean"
                createdTimestamp: 
                  description: "Specifies the time when the database was created. It is displayed in the\ntimezone of the SQL server on which this database is running."
                  type: "string"
                  x-go-name: "CreatedTimestamp"
                databaseName: 
                  description: "Specifies the database name of the SQL Protection Source, if the type\nis database."
                  type: "string"
                  x-go-name: "DatabaseName"
                dbAagEntityId: 
                  description: "Specifies the AAG entity id if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
                  type: "integer"
                  format: "int64"
                  x-go-name: "DbAagEntityId"
                dbAagName: 
                  description: "Specifies the name of the AAG if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
                  type: "string"
                  x-go-name: "DbAagName"
                dbFiles: 
                  description: "Specifies the last known information about the set of database files\non the host. This field is set only for type 'kDatabase'."
                  type: "array"
                  items: 
                    $ref: "#/definitions/DbFileInfo"
                  x-go-name: "DbFiles"
                id: 
                  description: "Specifies an id that identifies an SQL Object."
                  $ref: "#/definitions/SqlSourceId"
                name: 
                  description: "Specifies the instance name of the SQL Protection Source"
                  type: "string"
                  x-go-name: "Name"
                ownerId: 
                  description: "Specifies the id of the container VM for the SQL Protection Source."
                  type: "integer"
                  format: "int64"
                  x-go-name: "OwnerId"
                recoveryModel: 
                  description: "Specifies the Recovery Model for the database in SQL environment.\nOnly meaningful for the 'kDatabase' SQL Protection Source.\nSpecifies the Recovery Model set for the Microsoft SQL Server.\n'kSimpleRecoveryModel' indicates the Simple SQL Recovery Model which\ndoes not utilize log backups.\n'kFullRecoveryModel' indicates the Full SQL Recovery Model which\nrequires log backups and allows recovery to a single point in time.\n'kBulkLoggedRecoveryModel' indicates the Bulk Logged SQL Recovery Model\nwhich requires log backups and allows high-performance bulk copy operations."
                  type: "string"
                  enum: 
                    - "kSimpleRecoveryModel"
                    - "kFullRecoveryModel"
                    - "kBulkLoggedRecoveryModel"
                  x-go-name: "RecoveryModel"
                sqlServerDbState: 
                  description: "The state of the database as returned by SQL Server."
                  type: "integer"
                  format: "int32"
                  x-go-name: "SqlServerDbState"
                type: 
                  description: "Specifies the type of the managed Object in a SQL Protection Source.\nExamples of SQL Objects include 'kInstance' and 'kDatabase'."
                  type: "string"
                  enum: 
                    - "kInstance"
                    - "kDatabase"
                  x-go-name: "Type"
            viewProtectionSource: 
              description: "Specifies details about a View Protection Source\nwhen the environment is set to 'kView'."
              type: "object"
              title: "View Protection Source."
              properties: 
                id: 
                  description: "Specifies a unique id of a Protection Source for a View.\nThe id is unique across Cohesity Clusters."
                  type: "object"
                  title: "Unique Global Id."
                  properties: 
                    clusterId: 
                      description: "Specifies the Cohesity Cluster id where the object was created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterId"
                    clusterIncarnationId: 
                      description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterIncarnationId"
                    id: 
                      description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                      type: "integer"
                      format: "int64"
                      x-go-name: "Id"
                name: 
                  description: "Specifies a human readable name of the Protection Source of a View."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed Object in a View Protection Source\nenvironment.\nExamples of View Objects include 'kViewBox' or 'kView'."
                  type: "string"
                  enum: 
                    - "kViewBox"
                    - "kView"
                  x-go-name: "Type"
            vmWareProtectionSource: 
              description: "Specifies details about a VMware Protection Source\nwhen the environment is set to 'kVMware'."
              type: "object"
              title: "VMware Protection Source."
              properties: 
                agentId: 
                  description: "Specifies the id of the persistent agent."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AgentId"
                agents: 
                  description: "This is set only if the Virtual Machine has persistent agent."
                  type: "array"
                  title: "Specifies the list of agent information on the Virtual Machine."
                  items: 
                    $ref: "#/definitions/AgentInformation"
                  x-go-name: "Agents"
                connectionState: 
                  description: "Specifies the connection state of the Object and are only valid for\nESXi hosts ('kHostSystem') or Virtual Machines ('kVirtualMachine').\nThese enums are equivalent to the connection states documented in\nVMware's reference documentation.\nExamples of Cohesity connection states include 'kConnected',\n'kDisconnected', 'kInacccessible', etc."
                  type: "string"
                  enum: 
                    - "kConnected"
                    - "kDisconnected"
                    - "kInacccessible"
                    - "kInvalid"
                    - "kOrphaned"
                    - "kNotResponding"
                  x-go-name: "ConnectionState"
                datastoreInfo: 
                  description: "Specifies additional information of entities of type 'kDatastore'."
                  $ref: "#/definitions/DatastoreInfo"
                folderType: 
                  description: "Specifies the folder type for the 'kFolder' Object.\n'kVMFolder' indicates folder can hold VMs or vApps.\n'kHostFolder' indicates folder can hold hosts and compute resources.\n'kDatastoreFolder' indicates folder can hold datastores and storage pods.\n'kNetworkFolder' indicates folder can hold networks and switches.\n'kRootFolder' indicates folder can hold datacenters."
                  type: "string"
                  enum: 
                    - "kVMFolder"
                    - "kHostFolder"
                    - "kDatastoreFolder"
                    - "kNetworkFolder"
                    - "kRootFolder"
                  x-go-name: "FolderType"
                hasPersistentAgent: 
                  description: "Set to true if a persistent agent is running on the Virtual Machine.\nThis is populated for entities of type 'kVirtualMachine'."
                  type: "boolean"
                  x-go-name: "HasPersistentAgent"
                hostType: 
                  description: "Specifies the host type for the 'kVirtualMachine' Object.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                id: 
                  description: "Specifies the UUID of the VMware Protection Source."
                  $ref: "#/definitions/VMwareObjectId"
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                tagAttributes: 
                  description: "Specifies the optional list of VM Tag attributes associated with this\nObject."
                  type: "array"
                  items: 
                    $ref: "#/definitions/TagAttribute"
                  x-go-name: "TagAttributes"
                toolsRunningStatus: 
                  description: "Specifies the status of VMware Tools for the guest OS on the VM.\nThis is only valid for the 'kVirtualMachine' type.\n'kGuestToolsRunning' means the VMware tools are running on the guest OS.\n'kGuestToolsNotRunning' means the VMware tools are not running on the\nguest OS.\n'kUnknown' means the state of the VMware tools on the guest OS is not\nknown.\n'kGuestToolsExecutingScripts' means the guest OS is currently executing\nscripts using VMware tools."
                  type: "string"
                  enum: 
                    - "kUnknown"
                    - "kGuestToolsExecutingScripts"
                    - "kGuestToolsNotRunning"
                    - "kGuestToolsRunning"
                  x-go-name: "VMwareToolsRunningStatus"
                type: 
                  description: "Specifies the type of managed Object in a VMware Protection Source.\nExamples of VMware Objects include 'kVCenter', 'kFolder', 'kDatacenter',\n'kResourcePool', 'kDatastore', 'kVirtualMachine', etc."
                  type: "string"
                  enum: 
                    - "kVCenter"
                    - "kFolder"
                    - "kDatacenter"
                    - "kComputeResource"
                    - "kClusterComputeResource"
                    - "kResourcePool"
                    - "kDatastore"
                    - "kHostSystem"
                    - "kVirtualMachine"
                    - "kVirtualApp"
                    - "kStandaloneHost"
                    - "kStoragePod"
                    - "kNetwork"
                    - "kDistributedVirtualPortgroup"
                    - "kTagCategory"
                    - "kTag"
                  x-go-name: "Type"
                virtualDisks: 
                  description: "This is populated for entities of type 'kVirtualMachine'."
                  type: "array"
                  title: "Specifies an array of virtual disks that are part of the Virtual Machine."
                  items: 
                    $ref: "#/definitions/VirtualDiskInfo"
                  x-go-name: "VirtualDisks"
        snapshotsInfo: 
          description: "Specifies the Snapshots that contain backups of the Protection Source\nObject."
          type: "array"
          title: "Array of Snapshots"
          items: 
            $ref: "#/definitions/ProtectionSourceSnapshotInformation"
          x-go-name: "SnapshotsInfo"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionSourcesSummaryStats: 
      description: "Specifies Job Run (Snapshot) summary statistics about the specified\nleaf Protection Source Object (such as a VM)."
      type: "object"
      title: "Protection Sources Summary Statistics."
      properties: 
        firstFailedRunTimeUsecs: 
          description: "Specifies the start time of the first failed Job Run protecting this\nProtection Source Object.\nThe time is specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "FirstFailedRunTimeUsecs"
        firstSuccessfulRunTimeUsecs: 
          description: "Specifies the start time of the first successful Job Run protecting this\nProtection Source Object.\nThe time is specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "FirstSuccessfulRunTimeUsecs"
        lastFailedRunTimeUsecs: 
          description: "Specifies the start time of the last failed Job Run protecting this\nProtection Source Object.\nThe time is specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "LastFailedRunTimeUsecs"
        lastRunEndTimeUsecs: 
          description: "Specifies the end time of the last Job Run protecting this\nProtection Source Object.\nThe time is specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "LastRunEndTimeUsecs"
        lastRunErrorMsg: 
          description: "Specifies the error message associated with last run, if the last run\nhas failed."
          type: "string"
          x-go-name: "LastRunErrorMsg"
        lastRunStartTimeUsecs: 
          description: "Specifies the start time of the last Job Run protecting this\nProtection Source Object.\nThe time is specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "LastRunStartTimeUsecs"
        lastRunStatus: 
          description: "Specifies the Job Run status of the last Job Run protecting\nthis Protection Source Object.\n'kSuccess' indicates that the Job Run was successful.\n'kRunning' indicates that the Job Run is currently running.\n'kWarning' indicates that the Job Run was successful but warnings were\nissued.\n'kCancelled' indicates that the Job Run was canceled.\n'kError' indicates the Job Run encountered an error and did not run to\ncompletion."
          type: "string"
          enum: 
            - "kSuccess"
            - "kRunning"
            - "kWarning"
            - "kCancelled"
            - "kError"
          x-go-name: "LastRunStatus"
        lastRunType: 
          description: "Specifies the Job Run type of the last Job Run protecting\nthis Protection Source Object.\n'kRegular' indicates an incremental (CBT) backup. Incremental backups\nutilizing CBT (if supported) are captured of the target protection\nobjects.\nThe first run of a kRegular schedule captures all the blocks.\n'kFull' indicates a full (no CBT) backup. A complete backup\n(all blocks) of the target protection objects are always captured and\nChange Block Tracking (CBT) is not utilized.\n'kLog' indicates a Database Log backup. Capture the database\ntransaction logs to allow rolling back to a specific point in time."
          type: "string"
          enum: 
            - "kRegular"
            - "kFull"
            - "kLog"
          x-go-name: "LastRunType"
        lastSuccessfulRunTimeUsecs: 
          description: "Specifies the start time of the last successful Job Run protecting this\nProtection Source Object.\nThe time is specified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "LastSuccessfulRunTimeUsecs"
        numDataReadBytes: 
          description: "Specifies the total number of bytes read while protecting this\nProtection Source Object."
          type: "integer"
          format: "int64"
          x-go-name: "NumDataReadBytes"
        numErrors: 
          description: "Specifies the total number of errors reported during Job Runs\nof this Protection Source Object."
          type: "integer"
          format: "int32"
          x-go-name: "NumErrors"
        numLogicalBytesProtected: 
          description: "Specifies the total logical bytes protected for this\nProtection Source Object.\nThe logical size is when the data is fully hydrated or expanded."
          type: "integer"
          format: "int64"
          x-go-name: "NumLogicalBytesProtected"
        numSnapshots: 
          description: "Specifies the total number of Snapshots that are backing up this\nProtection Source Object."
          type: "integer"
          format: "int32"
          x-go-name: "NumSnapshots"
        numSuccessRuns: 
          description: "Specifies the total number of successful Job Runs protecting this\nProtection Source Object."
          type: "integer"
          format: "int32"
          x-go-name: "NumSuccessRuns"
        numWarnings: 
          description: "Specifies the total number of warnings reported during Job Runs\nof this Protection Source Object."
          type: "integer"
          format: "int32"
          x-go-name: "NumWarnings"
        protectionSource: 
          description: "Specifies the leaf Protection Source Object (such as VM).\nSnapshot summary statistics are reported for this Protection Source\nObject."
          type: "object"
          title: "Protection Source."
          properties: 
            acropolisProtectionSource: 
              description: "Specifies details about an Acropolis Protection Source\nwhen the environment is set to 'kAcropolis'."
              type: "object"
              title: "Acropolis Protection Source."
              properties: 
                clusterUuid: 
                  description: "Specifies the UUID of the Acropolis cluster instance to which this\nentity belongs to."
                  type: "string"
                  x-go-name: "ClusterUuid"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                mountPath: 
                  description: "Specifies whether the the VM is an agent VM. This is applicable to\nacropolis entity of type kVirtualMachine."
                  type: "boolean"
                  x-go-name: "IsAgentVm"
                name: 
                  description: "Specifies the name of the Acropolis Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of an Acropolis Protection Source Object such as\n'kPrismCentral', 'kHost', 'kNetwork', etc.\nSpecifies the type of an Acropolis source entity.\n'kPrismCentral' indicates a collection of multiple Nutanix clusters.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an Acropolis host.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kStorageContainer' represents a storage container object."
                  type: "string"
                  enum: 
                    - "kPrismCentral"
                    - "kStandaloneCluster"
                    - "kCluster"
                    - "kHost"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kStorageContainer"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Acropolis Object. This is unique within the\ncluster instance. Together with clusterUuid, this entity is unique\nwithin the Acropolis environment."
                  type: "string"
                  x-go-name: "Uuid"
            awsProtectionSource: 
              description: "Specifies details about an AWS Protection Source\nwhen the environment is set to 'kAWS'."
              type: "object"
              title: "AWS Protection Source."
              properties: 
                hostType: 
                  description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                ipAddresses: 
                  description: "Specifies the IP address of the entity of type 'kVirtualMachine'."
                  type: "string"
                  x-go-name: "IpAddress"
                name: 
                  description: "Specifies the name of the AWS Object set by the Cloud Provider."
                  type: "string"
                  x-go-name: "Name"
                ownerId: 
                  description: "Specifies the owner id of the resource in AWS environment. With type,\nname and ownerId gives a globally unique identity to the AWS entity."
                  type: "string"
                  x-go-name: "OwnerId"
                regionId: 
                  description: "Specifies the region Id of the entity if the entity is an EC2 instance."
                  type: "string"
                  x-go-name: "RegionId"
                resourceId: 
                  description: "Specifies the unique Id of the resource given by the cloud provider."
                  type: "string"
                  x-go-name: "ResourceId"
                type: 
                  description: "Specifies the type of an AWS Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an AWS source entity.\n'kIAMUser' indicates a unique user within an AWS account.\n'kRegion' indicates a geographical region in the global infrastructure.\n'kAvailabilityZone' indicates an availability zone within a region.\n'kEC2Instance' indicates a Virtual Machine running in AWS environment.\n'kVPC' indicates a virtual private cloud (VPC) network within AWS.\n'kSubnet' indicates a subnet inside the VPC.\n'kNetworkSecurityGroup' represents a network security group.\n'kInstanceType' represents various machine types.\n'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine."
                  type: "string"
                  enum: 
                    - "kIAMUser"
                    - "kRegion"
                    - "kAvailabilityZone"
                    - "kEC2Instance"
                    - "kVPC"
                    - "kSubnet"
                    - "kNetworkSecurityGroup"
                    - "kInstanceType"
                    - "kKeyPair"
                  x-go-name: "Type"
                userAccountId: 
                  description: "Specifies the account id derived from the ARN of the user."
                  type: "string"
                  x-go-name: "UserAccountId"
                userResourceName: 
                  description: "Specifies the Amazon Resource Name (ARN) of the user."
                  type: "string"
                  x-go-name: "UserResourceName"
            azureProtectionSource: 
              description: "Specifies details about an Azure Protection Source\nwhen the environment is set to 'kAzure'."
              type: "object"
              title: "Azure Protection Source."
              properties: 
                hostType: 
                  description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                ipAddresses: 
                  type: "array"
                  title: "Specifies a list of IP addresses for entities of type 'kVirtualMachine'."
                  items: 
                    type: "string"
                  x-go-name: "IpAddresses"
                location: 
                  description: "Specifies the physical location of the resource group."
                  type: "string"
                  x-go-name: "Location"
                memoryMbytes: 
                  description: "Specifies the amount of memory in MegaBytes of the Azure resource of\ntype 'kComputeOptions'."
                  type: "integer"
                  format: "int64"
                  x-go-name: "MemoryMbytes"
                name: 
                  description: "Specifies the name of the Azure Object set by the Cloud Provider.\nIf the provider did not set a name for the object, this field is not set."
                  type: "string"
                  x-go-name: "Name"
                numCores: 
                  description: "Specifies the number of CPU cores of the Azure resource of\ntype 'kComputeOptions'."
                  type: "integer"
                  format: "int32"
                  x-go-name: "NumCores"
                resourceId: 
                  description: "Specifies the unique Id of the resource in Azure environment."
                  type: "string"
                  x-go-name: "ResourceId"
                type: 
                  description: "Specifies the type of an Azure Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an Azure source entity.\n'kSubscription' indicates a billing unit within Azure account.\n'kResourceGroup' indicates a container that holds related resources.\n'kVirtualMachine' indicates a Virtual Machine in Azure environment.\n'kStorageAccount' represents a collection of storage containers.\n'kStorageKey' indicates a key required to access the storage account.\n'kStorageContainer' represents a storage container within a storage account.\n'kStorageBlob' represents a storage blog within a storage container.\n'kNetworkSecurityGroup' represents a network security group.\n'kVirtualNetwork' represents a virtual network.\n'kSubnet' represents a subnet within the virtual network.\n'kComputeOptions' indicates the number of CPU cores and memory size available for a type of a Virtual Machine."
                  type: "string"
                  enum: 
                    - "kSubscription"
                    - "kResourceGroup"
                    - "kVirtualMachine"
                    - "kStorageAccount"
                    - "kStorageKey"
                    - "kStorageContainer"
                    - "kStorageBlob"
                    - "kNetworkSecurityGroup"
                    - "kVirtualNetwork"
                    - "kSubnet"
                    - "kComputeOptions"
                  x-go-name: "Type"
            environment: 
              description: "Specifies the environment (such as 'kVMware' or 'kSQL') where the\nProtection Source exists. Depending on the environment, one of the\nfollowing Protection Sources are initialized.\n\nNOTE: kPuppeteer refers to Cohesity's Remote Adapter.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
              type: "string"
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetapp"
                - "kGenericNas"
                - "kHyperV"
                - "kAcropolis"
                - "kAzure"
              x-go-name: "Environment"
            hypervProtectionSource: 
              description: "Specifies details about a HyperV Protection Source\nwhen the environment is set to 'kHyperV'."
              type: "object"
              title: "HyperV Protection Source."
              properties: 
                agentInfo: 
                  description: "Specifies information about the agent running on the HyperV objects."
                  $ref: "#/definitions/AgentInformation"
                backupType: 
                  description: "Specifies the type of backup supported by the VM.\n'kRctBackup', 'kVssBackup'\nSpecifies the type of an HyperV datastore object.\n'kRctBackup' indicates backup is done using RCT/checkpoints.\n'kVssBackup' indicates backup is done using VSS."
                  type: "string"
                  enum: 
                    - "kRctBackup"
                    - "kVssBackup"
                  x-go-name: "BackupType"
                clusterName: 
                  description: "Specifies the cluster name for 'kHostCluster' objects."
                  type: "string"
                  x-go-name: "ClusterName"
                datastoreInfo: 
                  description: "Specifies additional information for 'kDatastore' objects."
                  $ref: "#/definitions/HypervDatastore"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                hostType: 
                  description: "Specifies host OS type for 'kVirtualMachine' objects.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                hypervUuid: 
                  description: "Specifies the UUID for 'kVirtualMachine' HyperV objects."
                  type: "string"
                  x-go-name: "HypervUuid"
                name: 
                  description: "Specifies the name of the HyperV Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of an HyperV Protection Source Object such as\n'kSCVMMServer', 'kStandaloneHost', 'kNetwork', etc.\noverrideDescription: true\nSpecifies the type of an HyperV Protection Source.\n'kSCVMMServer' indicates a collection of root folders clusters.\n'kStandaloneHost' indicates a single Nutanix cluster.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kHostGroup' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an HyperV host.\n'kHostCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kDatastore' represents a storage container object."
                  type: "string"
                  enum: 
                    - "kSCVMMServer"
                    - "kStandaloneHost"
                    - "kStandaloneCluster"
                    - "kHostGroup"
                    - "kHost"
                    - "kHostCluster"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kDatastore"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Object. This is unique within the HyperV\nenvironment."
                  type: "string"
                  x-go-name: "Uuid"
                vmInfo: 
                  description: "Specifies additional information for 'kVirtualMachine' objects."
                  $ref: "#/definitions/HypervVirtualMachine"
            id: 
              description: "Specifies an id of the Protection Source."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
            kvmProtectionSource: 
              description: "Specifies details about a KVM Protection Source\nwhen the environment is set to 'kKVM'."
              type: "object"
              title: "KVM Protection Source."
              properties: 
                agentError: 
                  description: "Specifies a message when the agent cannot be reached."
                  type: "string"
                  x-go-name: "AgentError"
                agentId: 
                  description: "Specifies the ID of the Agent with which this KVM entity is associated\nwhen the entity represents a Delegate host or KVM host."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AgentId"
                clusterId: 
                  description: "Specifies the cluster ID for 'kCluster' objects."
                  type: "string"
                  x-go-name: "ClusterId"
                datacenterId: 
                  description: "Specifies the ID of the 'kDatacenter' objects."
                  type: "string"
                  x-go-name: "DatacenterId"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                name: 
                  description: "Specifies the name of the KVM entity."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of KVM Protection Source entities such as\n'kDatacenter', 'kCluster', 'kVirtualMachine', etc.\nSpecifies the type of an KVM source entity.\n'kOVirtManager' indicates the root entity registerd with Cohesity cluster.\n'kStandaloneHost' indicates a host registered with Cohesity cluster.\n'kDatacenter' indicates a KVM datacenter managed by the OVirt manager.\n'kCluster' indicates a KVM cluster managed by the OVirt manager.\n'kHost' indicates a host within the KVM environment.\n'kVirtualMachine' indicates a virtual machine in the KVM enironment.\n'kNetwork' represents a network used by the virtual machine entity.\n'kStorageDomain' represents a storage domain in the KVM environment."
                  type: "string"
                  enum: 
                    - "kOVirtManager"
                    - "kStandaloneHost"
                    - "kDatacenter"
                    - "kCluster"
                    - "kHost"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kStorageDomain"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Object. This is unique within the KVM\nenvironment."
                  type: "string"
                  x-go-name: "Uuid"
            name: 
              description: "Specifies a name of the Protection Source."
              type: "string"
              x-go-name: "Name"
            nasProtectionSource: 
              description: "Specifies details about a Generic NAS Protection Source\nwhen the environment is set to 'kGenericNas'."
              type: "object"
              title: "Generic NAS Protection Source."
              properties: 
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                mountPath: 
                  description: "Specifies the mount path of this NAS. For example, for a NFS mount point,\nthis should be in the format of IP or hostname:/foo/bar."
                  type: "string"
                  x-go-name: "MountPath"
                name: 
                  description: "Specifies the name of the NetApp Object."
                  type: "string"
                  x-go-name: "Name"
                protocol: 
                  description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
                  type: "string"
                  enum: 
                    - "kNfs3"
                    - "kCifs1"
                  x-go-name: "Protocol"
                type: 
                  description: "Specifies the type of a Protection Source Object in a generic NAS Source\nsuch as 'kGroup', or 'kHost'.\nSpecifies the kind of NAS mount.\n'kGroup' indicates top level node that holds individual NAS hosts.\n'kHost' indicates a single NAS path that can be mounted."
                  type: "string"
                  enum: 
                    - "kGroup"
                    - "kHost"
                  x-go-name: "Type"
            netappProtectionSource: 
              description: "Specifies details about a NetApp Protection Source\nwhen the environment is set to 'kNetapp'."
              type: "object"
              title: "NetApp Protection Source."
              properties: 
                clusterInfo: 
                  description: "Specifies information about a NetApp cluster and is only valid for a\nNetApp Object of type kCluster."
                  $ref: "#/definitions/NetappClusterInfo"
                isTopLevel: 
                  description: "Specifies if this Object is a top level Object.\nBecause a top level Object can either be a NetApp cluster or a Vserver,\nthis cannot be determined only by type."
                  type: "boolean"
                  x-go-name: "IsTopLevel"
                name: 
                  description: "Specifies the name of the NetApp Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed NetApp Object in a NetApp Protection Source\nsuch as 'kCluster', 'kVserver' or 'kVolume'."
                  type: "string"
                  enum: 
                    - "kCluster"
                    - "kVserver"
                    - "kVolume"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the globally unique ID of this Object assigned by the\nNetApp server."
                  type: "string"
                  x-go-name: "Uuid"
                volumeInfo: 
                  description: "Specifies information about a NetApp volume and is only valid for a\nNetApp Object of type kVolume."
                  $ref: "#/definitions/NetappVolumeInfo"
                vserverInfo: 
                  description: "Specifies information about a NetApp Vserver and is only valid for a\nNetApp Object of type kVserver."
                  $ref: "#/definitions/NetappVserverInfo"
            parentId: 
              description: "Specifies an id of the parent of the Protection Source."
              type: "integer"
              format: "int64"
              x-go-name: "ParentId"
            physicalProtectionSource: 
              description: "Specifies details about a Physical Protection Source\nwhen the environment is set to 'kPhysical'."
              type: "object"
              title: "Physical Protection Source."
              properties: 
                agents: 
                  description: "Specifiles the agents running on the Physical Protection Source and the\nstatus information."
                  type: "array"
                  title: "Array of Agents on the Physical Protection Source."
                  items: 
                    $ref: "#/definitions/AgentInformation"
                  x-go-name: "Agents"
                hostType: 
                  description: "Specifies the environment type for the host.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                id: 
                  description: "Specifies a unique id of a Physical Protection Source.\nThe id is unique across Cohesity Clusters."
                  type: "object"
                  title: "Unique Global Id."
                  properties: 
                    clusterId: 
                      description: "Specifies the Cohesity Cluster id where the object was created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterId"
                    clusterIncarnationId: 
                      description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterIncarnationId"
                    id: 
                      description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                      type: "integer"
                      format: "int64"
                      x-go-name: "Id"
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed Object in a Physical Protection Source.\n'kHost' indicates a single physical server.\n'kWindowsCluster' indicates a Microsoft Windows cluster."
                  type: "string"
                  enum: 
                    - "kHost"
                    - "kWindowsCluster"
                  x-go-name: "Type"
                volumes: 
                  description: "Specifies the volumes available on the physical host.\nThese fields are populated only for the kPhysicalHost type."
                  type: "array"
                  title: "Array of Physical Volumes."
                  items: 
                    $ref: "#/definitions/PhysicalVolume"
                  x-go-name: "Volumes"
            pureProtectionSource: 
              description: "Specifies details about a Pure Protection Source\nwhen the environment is set to 'kPure'."
              type: "object"
              title: "Pure Protection Source."
              properties: 
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                storageArray: 
                  description: "Specifies a Pure Storage Array information. This is set only when\nthe type is kStorageArray."
                  $ref: "#/definitions/PureStorageArray"
                type: 
                  description: "Specifies the type of managed Object in a pure Protection Source like\na kStorageArray or kVolume.\nExamples of Pure Objects include 'kStorageArray' and 'kVolume'."
                  type: "string"
                  enum: 
                    - "kStorageArray"
                    - "kVolume"
                  x-go-name: "Type"
                volume: 
                  description: "Specifies a Pure Volume information within a storage array.\nThis is set only when the type is kVolume."
                  $ref: "#/definitions/PureVolume"
            sqlProtectionSource: 
              description: "Specifies details about a SQL Protection Source\nwhen the environment is set to 'kSQL'."
              type: "object"
              title: "SQL Protection Source."
              properties: 
                IsAvailableForVssBackup: 
                  description: "Specifies whether the database is marked as available for backup according\nto the SQL Server VSS writer. This may be false if either the state of\nthe databases is not online, or if the VSS writer is not online.\nThis field is set only for type 'kDatabase'."
                  type: "boolean"
                createdTimestamp: 
                  description: "Specifies the time when the database was created. It is displayed in the\ntimezone of the SQL server on which this database is running."
                  type: "string"
                  x-go-name: "CreatedTimestamp"
                databaseName: 
                  description: "Specifies the database name of the SQL Protection Source, if the type\nis database."
                  type: "string"
                  x-go-name: "DatabaseName"
                dbAagEntityId: 
                  description: "Specifies the AAG entity id if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
                  type: "integer"
                  format: "int64"
                  x-go-name: "DbAagEntityId"
                dbAagName: 
                  description: "Specifies the name of the AAG if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
                  type: "string"
                  x-go-name: "DbAagName"
                dbFiles: 
                  description: "Specifies the last known information about the set of database files\non the host. This field is set only for type 'kDatabase'."
                  type: "array"
                  items: 
                    $ref: "#/definitions/DbFileInfo"
                  x-go-name: "DbFiles"
                id: 
                  description: "Specifies an id that identifies an SQL Object."
                  $ref: "#/definitions/SqlSourceId"
                name: 
                  description: "Specifies the instance name of the SQL Protection Source"
                  type: "string"
                  x-go-name: "Name"
                ownerId: 
                  description: "Specifies the id of the container VM for the SQL Protection Source."
                  type: "integer"
                  format: "int64"
                  x-go-name: "OwnerId"
                recoveryModel: 
                  description: "Specifies the Recovery Model for the database in SQL environment.\nOnly meaningful for the 'kDatabase' SQL Protection Source.\nSpecifies the Recovery Model set for the Microsoft SQL Server.\n'kSimpleRecoveryModel' indicates the Simple SQL Recovery Model which\ndoes not utilize log backups.\n'kFullRecoveryModel' indicates the Full SQL Recovery Model which\nrequires log backups and allows recovery to a single point in time.\n'kBulkLoggedRecoveryModel' indicates the Bulk Logged SQL Recovery Model\nwhich requires log backups and allows high-performance bulk copy operations."
                  type: "string"
                  enum: 
                    - "kSimpleRecoveryModel"
                    - "kFullRecoveryModel"
                    - "kBulkLoggedRecoveryModel"
                  x-go-name: "RecoveryModel"
                sqlServerDbState: 
                  description: "The state of the database as returned by SQL Server."
                  type: "integer"
                  format: "int32"
                  x-go-name: "SqlServerDbState"
                type: 
                  description: "Specifies the type of the managed Object in a SQL Protection Source.\nExamples of SQL Objects include 'kInstance' and 'kDatabase'."
                  type: "string"
                  enum: 
                    - "kInstance"
                    - "kDatabase"
                  x-go-name: "Type"
            viewProtectionSource: 
              description: "Specifies details about a View Protection Source\nwhen the environment is set to 'kView'."
              type: "object"
              title: "View Protection Source."
              properties: 
                id: 
                  description: "Specifies a unique id of a Protection Source for a View.\nThe id is unique across Cohesity Clusters."
                  type: "object"
                  title: "Unique Global Id."
                  properties: 
                    clusterId: 
                      description: "Specifies the Cohesity Cluster id where the object was created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterId"
                    clusterIncarnationId: 
                      description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterIncarnationId"
                    id: 
                      description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                      type: "integer"
                      format: "int64"
                      x-go-name: "Id"
                name: 
                  description: "Specifies a human readable name of the Protection Source of a View."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed Object in a View Protection Source\nenvironment.\nExamples of View Objects include 'kViewBox' or 'kView'."
                  type: "string"
                  enum: 
                    - "kViewBox"
                    - "kView"
                  x-go-name: "Type"
            vmWareProtectionSource: 
              description: "Specifies details about a VMware Protection Source\nwhen the environment is set to 'kVMware'."
              type: "object"
              title: "VMware Protection Source."
              properties: 
                agentId: 
                  description: "Specifies the id of the persistent agent."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AgentId"
                agents: 
                  description: "This is set only if the Virtual Machine has persistent agent."
                  type: "array"
                  title: "Specifies the list of agent information on the Virtual Machine."
                  items: 
                    $ref: "#/definitions/AgentInformation"
                  x-go-name: "Agents"
                connectionState: 
                  description: "Specifies the connection state of the Object and are only valid for\nESXi hosts ('kHostSystem') or Virtual Machines ('kVirtualMachine').\nThese enums are equivalent to the connection states documented in\nVMware's reference documentation.\nExamples of Cohesity connection states include 'kConnected',\n'kDisconnected', 'kInacccessible', etc."
                  type: "string"
                  enum: 
                    - "kConnected"
                    - "kDisconnected"
                    - "kInacccessible"
                    - "kInvalid"
                    - "kOrphaned"
                    - "kNotResponding"
                  x-go-name: "ConnectionState"
                datastoreInfo: 
                  description: "Specifies additional information of entities of type 'kDatastore'."
                  $ref: "#/definitions/DatastoreInfo"
                folderType: 
                  description: "Specifies the folder type for the 'kFolder' Object.\n'kVMFolder' indicates folder can hold VMs or vApps.\n'kHostFolder' indicates folder can hold hosts and compute resources.\n'kDatastoreFolder' indicates folder can hold datastores and storage pods.\n'kNetworkFolder' indicates folder can hold networks and switches.\n'kRootFolder' indicates folder can hold datacenters."
                  type: "string"
                  enum: 
                    - "kVMFolder"
                    - "kHostFolder"
                    - "kDatastoreFolder"
                    - "kNetworkFolder"
                    - "kRootFolder"
                  x-go-name: "FolderType"
                hasPersistentAgent: 
                  description: "Set to true if a persistent agent is running on the Virtual Machine.\nThis is populated for entities of type 'kVirtualMachine'."
                  type: "boolean"
                  x-go-name: "HasPersistentAgent"
                hostType: 
                  description: "Specifies the host type for the 'kVirtualMachine' Object.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                id: 
                  description: "Specifies the UUID of the VMware Protection Source."
                  $ref: "#/definitions/VMwareObjectId"
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                tagAttributes: 
                  description: "Specifies the optional list of VM Tag attributes associated with this\nObject."
                  type: "array"
                  items: 
                    $ref: "#/definitions/TagAttribute"
                  x-go-name: "TagAttributes"
                toolsRunningStatus: 
                  description: "Specifies the status of VMware Tools for the guest OS on the VM.\nThis is only valid for the 'kVirtualMachine' type.\n'kGuestToolsRunning' means the VMware tools are running on the guest OS.\n'kGuestToolsNotRunning' means the VMware tools are not running on the\nguest OS.\n'kUnknown' means the state of the VMware tools on the guest OS is not\nknown.\n'kGuestToolsExecutingScripts' means the guest OS is currently executing\nscripts using VMware tools."
                  type: "string"
                  enum: 
                    - "kUnknown"
                    - "kGuestToolsExecutingScripts"
                    - "kGuestToolsNotRunning"
                    - "kGuestToolsRunning"
                  x-go-name: "VMwareToolsRunningStatus"
                type: 
                  description: "Specifies the type of managed Object in a VMware Protection Source.\nExamples of VMware Objects include 'kVCenter', 'kFolder', 'kDatacenter',\n'kResourcePool', 'kDatastore', 'kVirtualMachine', etc."
                  type: "string"
                  enum: 
                    - "kVCenter"
                    - "kFolder"
                    - "kDatacenter"
                    - "kComputeResource"
                    - "kClusterComputeResource"
                    - "kResourcePool"
                    - "kDatastore"
                    - "kHostSystem"
                    - "kVirtualMachine"
                    - "kVirtualApp"
                    - "kStandaloneHost"
                    - "kStoragePod"
                    - "kNetwork"
                    - "kDistributedVirtualPortgroup"
                    - "kTagCategory"
                    - "kTag"
                  x-go-name: "Type"
                virtualDisks: 
                  description: "This is populated for entities of type 'kVirtualMachine'."
                  type: "array"
                  title: "Specifies an array of virtual disks that are part of the Virtual Machine."
                  items: 
                    $ref: "#/definitions/VirtualDiskInfo"
                  x-go-name: "VirtualDisks"
        registeredSource: 
          description: "Specifies the name of the Registered Source that is the top level\nparent of the specified Protection Source Object."
          type: "string"
          x-go-name: "RegisteredSourceName"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionStats: 
      type: "object"
      title: "Protection Statistics."
      properties: 
        numFailed: 
          description: "Number of Failed Objects."
          type: "integer"
          format: "int32"
          x-go-name: "NumFailed"
        numObjects: 
          description: "Number of Objects."
          type: "integer"
          format: "int32"
          x-go-name: "NumObjects"
        sizeBytes: 
          description: "Size in Bytes."
          type: "integer"
          format: "int64"
          x-go-name: "SizeBytes"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionSummary: 
      description: "Specifies the number of protected and unprotected objects, and their sizes\ninformation of the given entity."
      type: "object"
      title: "Protection Summary Information of a registered Protection Source tree or\nthe Cohesity Cluster."
      properties: 
        protectedCount: 
          description: "Specifies the number of objects that are protected under the given\nentity."
          type: "integer"
          format: "int64"
          x-go-name: "ProtectedCount"
        protectedSize: 
          description: "Specifies the total size of the protected objects under the given entity."
          type: "integer"
          format: "int64"
          x-go-name: "ProtectedSize"
        unprotectedCount: 
          description: "Specifies the number of objects that are not protected under the given\nentity."
          type: "integer"
          format: "int64"
          x-go-name: "UnprotectedCount"
        unprotectedSize: 
          description: "Specifies the total size of the unprotected objects under the given\nentity."
          type: "integer"
          format: "int64"
          x-go-name: "UnprotectedSize"
      x-go-package: "cohesity/iris/server/data/public"
    ProtectionTile: 
      type: "object"
      title: "Protection information and statistics."
      properties: 
        lastDayArchival: 
          description: "Statistics related to archival for last 24 hours."
          $ref: "#/definitions/ProtectionStats"
        lastDayBackup: 
          description: "Statistics related to Back for last 24 hours."
          $ref: "#/definitions/ProtectionStats"
        lastDayReplicationIn: 
          description: "Statistics related to incoming replication for last 24 hours."
          $ref: "#/definitions/ProtectionStats"
        lastDayReplicationOut: 
          description: "Statistics related to outgoing replication for last 24 hours."
          $ref: "#/definitions/ProtectionStats"
      x-go-package: "cohesity/iris/server/data/public"
    PureEnvJobParameters: 
      description: "Specifies job parameters applicable for all 'kPure' Environment type\nProtection Sources in a Protection Job."
      type: "object"
      title: "Protection Job parameters applicable to 'kPure' Environment type."
      properties: 
        maxSnapshotsOnPrimary: 
          description: "Specifies how many recent snapshots of each backed up entity to retain on\nthe primary environment. If not specified, then snapshots will not be\nbe deleted from the primary environment."
          type: "integer"
          format: "int64"
          x-go-name: "MaxSnapshotsOnPrimary"
      x-go-package: "cohesity/iris/server/data/public"
    PureProtectionSource: 
      description: "Specifies a Protection Source in a Pure environment."
      type: "object"
      title: "Pure Protection Source."
      properties: 
        name: 
          description: "Specifies a human readable name of the Protection Source."
          type: "string"
          x-go-name: "Name"
        storageArray: 
          description: "Specifies a Pure Storage Array information. This is set only when\nthe type is kStorageArray."
          $ref: "#/definitions/PureStorageArray"
        type: 
          description: "Specifies the type of managed Object in a pure Protection Source like\na kStorageArray or kVolume.\nExamples of Pure Objects include 'kStorageArray' and 'kVolume'."
          type: "string"
          enum: 
            - "kStorageArray"
            - "kVolume"
          x-go-name: "Type"
        volume: 
          description: "Specifies a Pure Volume information within a storage array.\nThis is set only when the type is kVolume."
          $ref: "#/definitions/PureVolume"
      x-go-package: "cohesity/iris/server/data/public"
    PureStorageArray: 
      type: "object"
      title: "Specifies a Pure Storage Array."
      properties: 
        id: 
          description: "Specifies a unique id of a Pure Storage Array.\nThe id is unique across Cohesity Clusters."
          type: "string"
          x-go-name: "Id"
        ports: 
          type: "array"
          title: "Specifies the SAN ports of the Pure Storage Array."
          items: 
            $ref: "#/definitions/IscsiSanPort"
          x-go-name: "Ports"
        revision: 
          description: "Specifies the revision of the Pure Storage Array."
          type: "string"
          x-go-name: "Revision"
        version: 
          description: "Specifies the version of the Pure Storage Array."
          type: "string"
          x-go-name: "Version"
      x-go-package: "cohesity/iris/server/data/public"
    PureVolume: 
      type: "object"
      title: "Specifies a Pure Volume in a Pure Storage Array."
      properties: 
        createdTime: 
          description: "Specifies the created time (e.g., \"2015-07-21T17:59:41Z\") of the volume."
          type: "string"
          x-go-name: "CreatedTime"
        parentVolume: 
          description: "Specifies the name of the source volume, if this volume was\ncopied or cloned from it."
          type: "string"
          x-go-name: "ParentVolume"
        serialNumber: 
          description: "Specifies the serial number of the volume."
          type: "string"
          x-go-name: "SerialNumber"
        sizeBytes: 
          description: "Specifies the provisioned size in bytes of the volume."
          type: "integer"
          format: "int64"
          x-go-name: "SizeBytes"
        usedBytes: 
          description: "Specifies the total space actually used by the volume."
          type: "integer"
          format: "int64"
          x-go-name: "UsedBytes"
      x-go-package: "cohesity/iris/server/data/public"
    QStarServerCredentials: 
      description: "Specifies the server credentials to connect to a QStar service\nto manage the media Vault."
      type: "object"
      title: "QStar Server Credentials."
      properties: 
        host: 
          description: "Specifies the IP address or DNS name of the server where QStar\nservice is running."
          type: "string"
          x-go-name: "Host"
        integralVolumeNames: 
          description: "Specifies a list of existing Integral Volume names available on the\nQStar server for storing objects."
          type: "array"
          title: "Array of Integral Volume Names."
          items: 
            type: "string"
          x-go-name: "IntegralVolumeNames"
        password: 
          description: "Specifies the password used to access the QStar host."
          type: "string"
          x-go-name: "Password"
        port: 
          description: "Specifies the listening port where QStar WEB API service is running."
          type: "integer"
          format: "int32"
          x-go-name: "Port"
        shareType: 
          description: "Specifies the sharing protocol type used by QStar to mount\nthe integral volume.\nSee the Cohesity online help for the recommended protocol\nfor your environment."
          type: "string"
          x-go-name: "ShareType"
        useHttps: 
          description: "Specifies whether to use http or https to connect to the service.\nIf true, a secure connection (https) is used."
          type: "boolean"
          x-go-name: "UseHttps"
        username: 
          description: "Specifies the account name used to access the QStar host."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    QoS: 
      description: "Specifies the Quality of Service (QoS) Policy for the View."
      type: "object"
      title: "QoS."
      properties: 
        principalName: 
          description: "Specifies the name of the QoS Policy used for the View such as\n'TestAndDev High', 'Backup Target SSD', 'Backup Target High'\n'TestAndDev Low' and 'Backup Target Low'. For a complete list\nand descriptions, see the 'Create or Edit Views' topic in the\ndocumentation. If not specified, the default is 'Backup Target Low'."
          type: "string"
          x-go-name: "PrincipalName"
      x-go-package: "cohesity/iris/server/data/public"
    QuotaAndUsageInView: 
      type: "object"
      title: "The usage and quota policy information for a user."
      properties: 
        quota: 
          description: "User quota policy applied to this user."
          $ref: "#/definitions/QuotaPolicy"
        usageBytes: 
          description: "Usage in bytes of this user in this view."
          type: "integer"
          format: "int64"
          x-go-name: "UsageBytes"
        viewId: 
          description: "The usage and quota policy information of this user for this view."
          type: "integer"
          format: "int64"
          x-go-name: "ViewId"
        viewName: 
          description: "View name."
          type: "string"
          x-go-name: "ViewName"
      x-go-package: "cohesity/iris/server/data/public"
    QuotaPolicy: 
      description: "Specifies a quota limit that can be optionally applied to Views and\nView Boxes.\nAt the View level, this quota defines a logical limit for usage on the View.\nAt the View Box level, this quota defines a physical limit or\na default logical View limit.\nIf a physical quota is specified for View Box, this quota defines a physical\nlimit for the usage on the View Box.\nIf a default logical View quota is specified for View Box, this limit\nis inherited by all the Views in that View Box.\nHowever, this inherited quota can be overwritten at the View level.\nA new write is not allowed if the resource will exceed the specified quota.\nHowever, it takes time for the Cohesity Cluster to calculate\nthe usage across Nodes, so the limit may be exceeded by a small amount.\nIn addition, if the limit is increased or data is removed,\nthere may be a delay before the Cohesity Cluster allows more data\nto be written to the resource, as the Cluster calculates the usage\nacross Nodes."
      type: "object"
      title: "Quota Policy"
      properties: 
        AlertLimit: 
          description: "AlertLimitBytes converted to GiB format for report purposes."
          type: "string"
        HardLimit: 
          description: "HardLimitBytes converted to GiB format for report purposes."
          type: "string"
        alertLimitBytes: 
          description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
          type: "integer"
          format: "int64"
          x-go-name: "AlertLimitBytes"
        alertThresholdPercentage: 
          description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
          type: "integer"
          format: "int64"
          x-go-name: "AlertThresholdPercentage"
        hardLimitBytes: 
          description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
          type: "integer"
          format: "int64"
          x-go-name: "HardLimitBytes"
      x-go-package: "cohesity/iris/server/data/public"
    RecoverTaskRequest: 
      description: "Create a Restore Task Request for recovering VMs or mounting volumes to\nmount points."
      type: "object"
      title: "Create Restore Task Request."
      required: 
        - "name"
        - "type"
      properties: 
        acropolisParameters: 
          description: "Specifies additional parameters for 'kAcropolis' restore objects."
          $ref: "#/definitions/AcropolisRestoreParameters"
        continueOnError: 
          description: "Specifies if the Restore Task should continue when some operations on some\nobjects fail. If true, the Cohesity Cluster ignores intermittent\nerrors and restores as many objects as possible."
          type: "boolean"
          x-go-name: "ContinueOnError"
        hypervParameters: 
          description: "Specifies additional parameters for 'kHyperV' restore objects."
          $ref: "#/definitions/HypervRestoreParameters"
        mountParameters: 
          description: "Specifies parameters required for mounting volumes."
          $ref: "#/definitions/MountVolumesParameters"
        name: 
          description: "Specifies the name of the Restore Task. This field must be set and\nmust be a unique name."
          type: "string"
          x-go-name: "Name"
        newParentId: 
          description: "Specify a new registered parent Protection Source. If specified\nthe selected objects are cloned or recovered to this new Protection\nSource. If not specified, objects are cloned or recovered\nto the original Protection Source that was managing them."
          type: "integer"
          format: "int64"
          x-go-name: "NewParentId"
        objects: 
          description: "Specifies a list of Protection Source objects or Protection Job objects\n(with specified Protection Source objects)."
          type: "array"
          title: "Array of Objects."
          items: 
            $ref: "#/definitions/RestoreObject"
          x-go-name: "Objects"
        type: 
          description: "Specifies the type of Restore Task such as 'kRecoverVMs' or\n'kMountVolumes'.\n'kRecoverVMs' specifies a Restore Task that recovers VMs.\n'kMountVolumes' specifies a Restore Task that mounts volumes to mount\npoints."
          type: "string"
          enum: 
            - "kRecoverVMs"
            - "kMountVolumes"
          x-go-name: "Type"
        vlanParameters: 
          description: "Specifies VLAN parameters for the restore operation."
          $ref: "#/definitions/VlanParameters"
        vmwareParameters: 
          description: "Specifies additional parameters for 'kVmware' restore objects."
          $ref: "#/definitions/VmwareRestoreParameters"
      x-go-package: "cohesity/iris/server/data/public"
    RecoveriesTile: 
      type: "object"
      title: "Recoveries information."
      properties: 
        lastMonthNumRecoveries: 
          description: "Number of Recoveries in the last 30 days."
          type: "integer"
          format: "int32"
          x-go-name: "LastMonthNumRecoveries"
        lastMonthRecoveriesByType: 
          type: "array"
          title: "Recoveries by Type in the last month."
          items: 
            $ref: "#/definitions/RestoreCountByObjectType"
          x-go-name: "LastMonthRecoveriesByType"
        lastMonthRecoverySizeBytes: 
          description: "Bytes recovered in the last 30 days."
          type: "integer"
          format: "int64"
          x-go-name: "LastMonthRecoverySizeBytes"
        recoveryNumRunning: 
          description: "Number of recoveries that are currently running."
          type: "integer"
          format: "int32"
          x-go-name: "RecoveryNumRunning"
      x-go-package: "cohesity/iris/server/data/public"
    ReducerInfo: 
      type: "object"
      title: "Information about a reducer."
      properties: 
        code: 
          description: "The code of the reducer in the specified language."
          type: "string"
          x-go-name: "Code"
        id: 
          description: "Reduced ID generated by system. Absent when user is creating a new\nreducer. Mandatory for all other use cases."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        isSystemDefined: 
          description: "Whether the mapper is system defined."
          type: "boolean"
          x-go-name: "IsSystemDefined"
        jarName: 
          description: "User can write their own mapper/reducer or upload jar files containing\nmappers and reducers. If this reducer was part of a jar file, then this\nfield will have the JAR name."
          type: "string"
          x-go-name: "JarName"
        jarPath: 
          description: "path of JAR in which this reducer was found. This is applicable only when\nthis reducer was uploaded via JAR."
          type: "string"
          x-go-name: "JarPath"
        language: 
          description: "Programming language used by the reducer."
          type: "integer"
          format: "int32"
          x-go-name: "Language"
        name: 
          description: "Name of the reducer."
          type: "string"
          x-go-name: "Name"
      x-go-package: "yoda/base/analytics.pb"
    ReducersWrapper: 
      type: "object"
      title: "ReducersWrapper is the struct to define the list of reducers."
      properties: 
        reducers: 
          type: "array"
          title: "Reducers specifies the list of available reducers in analytics workbench."
          items: 
            $ref: "#/definitions/ReducerInfo"
          x-go-name: "Reducers"
      x-go-package: "cohesity/iris/server/data/public"
    RegisterApplicationServersParameters: 
      description: "Specifies the parameters required to register Application Servers\nrunning in a Protection Source."
      type: "object"
      properties: 
        applications: 
          description: "Specifies the types of applications such as 'kSQL', 'kExchange' running\non the Protection Source.\noverrideDescription: true\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "array"
          items: 
            type: "string"
            enum: 
              - "kVMware"
              - "kSQL"
              - "kView"
              - "kPuppeteer"
              - "kPhysical"
              - "kPure"
              - "kNetapp"
              - "kGenericNas"
              - "kHyperV"
              - "kAcropolis"
              - "kAzure"
          x-go-name: "Applications"
        hasPersistentAgent: 
          description: "Set this to true if a persistent agent is running on the host. If this is\nspecified, then credentials would not be used to log into the host\nenvironment. This mechanism may be used in environments such as VMware\nto get around UAC permission issues by running the agent as a service\nwith the right credentials. If this field is not specified, credentials\nmust be specified."
          type: "boolean"
          x-go-name: "HasPersistentAgent"
        password: 
          description: "Specifies password of the username to access the target source."
          type: "string"
          x-go-name: "Password"
        protectionSourceId: 
          description: "Specifies the Id of the Protection Source that contains one or more\nApplication Servers running on it."
          type: "integer"
          format: "int64"
          x-go-name: "ProtectionSourceId"
        username: 
          description: "Specifies username to access the target source."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    RegisterProtectionSourceParameters: 
      type: "object"
      title: "Specifies the parameters required to register a Protection Source."
      properties: 
        endpoint: 
          description: "Specifies the network endpoint of the Protection Source where it is\nreachable. It could be an URL or hostname or an IP address of the\nProtection Source."
          type: "string"
          x-go-name: "Endpoint"
        environment: 
          description: "Specifies the environment such as 'kPhysical' or 'kVMware' of the\nProtection Source.\noverrideDescription: true\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "string"
          enum: 
            - "kVMware"
            - "kSQL"
            - "kView"
            - "kPuppeteer"
            - "kPhysical"
            - "kPure"
            - "kNetapp"
            - "kGenericNas"
            - "kHyperV"
            - "kAcropolis"
            - "kAzure"
          x-go-name: "Environment"
        forceRegister: 
          type: "boolean"
          x-go-name: "ForceRegister"
        hostType: 
          description: "Specifies the optional OS type of the Protection Source (such as kWindows\nor kLinux).\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
          type: "string"
          enum: 
            - "kLinux"
            - "kWindows"
          x-go-name: "HostType"
        nasMountCredentials: 
          description: "Specifies the server credentials to connect to a NetApp server.\nThis field is required for mounting SMB volumes on NetApp servers."
          type: "object"
          title: "NAS Server Credentials."
          properties: 
            domain: 
              description: "Specifies the domain in which this credential is valid."
              type: "string"
              x-go-name: "Domain"
            nasProtocol: 
              description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
              type: "string"
              enum: 
                - "kNfs3"
                - "kCifs1"
              x-go-name: "NasProtocol"
            password: 
              description: "Specifies the password for the username to use for mounting the NAS."
              type: "string"
              x-go-name: "Password"
            username: 
              description: "Specifies a username to use for mounting the NAS."
              type: "string"
              x-go-name: "Username"
        netappType: 
          description: "Specifies the entity type such as 'kCluster,' if the environment is\nkNetapp."
          type: "string"
          enum: 
            - "kCluster"
            - "kVserver"
            - "kVolume"
          x-go-name: "NetappType"
        password: 
          description: "Specifies password of the username to access the target source."
          type: "string"
          x-go-name: "Password"
        physicalType: 
          description: "Specifies the entity type such as 'kPhysicalHost' if the environment is\nkPhysical.\noverrideDescription: true\n'kHost' indicates a single physical server.\n'kWindowsCluster' indicates a Microsoft Windows cluster."
          type: "string"
          enum: 
            - "kHost"
            - "kWindowsCluster"
          x-go-name: "PhysicalType"
        pureType: 
          description: "Specifies the entity type such as 'kStorageArray' if the environment is\nkPure.\noverrideDescription: true\nExamples of Pure Objects include 'kStorageArray' and 'kVolume'."
          type: "string"
          enum: 
            - "kStorageArray"
            - "kVolume"
          x-go-name: "PureType"
        sourceSideDedupEnabled: 
          description: "This controls whether to use source side dedup on the source or not.\nThis is only applicable to Protection Sources which support source\nside dedup (e.g., Linux physical servers)."
          type: "boolean"
          x-go-name: "SourceSideDedupEnabled"
        throttlingPolicy: 
          description: "Specifies the throttling policy that should be applied to this Source."
          type: "object"
          title: "Throttling Policy."
          properties: 
            enforceMaxStreams: 
              description: "Specifies whether datastore streams are configured for all datastores\nthat are part of the registered entity. If set to true, number of\nstreams from Cohesity cluster to the registered entity will be limited\nto the value set for maxConcurrentStreams. If not set or set to false,\nthere is no max limit for the number of concurrent streams."
              type: "boolean"
              x-go-name: "EnforceMaxStreams"
            isEnabled: 
              description: "Indicates whether read operations to the datastores, which are\npart of the registered Protection Source, are throttled."
              type: "boolean"
              x-go-name: "IsEnabled"
            latencyThresholds: 
              description: "Specifies the thresholds that should be applied to all\ndatastores that are part of the registered Object."
              $ref: "#/definitions/LatencyThresholds"
            maxConcurrentStreams: 
              description: "Specifies the limit on the number of streams Cohesity cluster will make\nconcurrently to the datastores of the registered entity. This limit is\nenforced only when the flag enforceMaxStreams is set to true."
              type: "integer"
              format: "int32"
              x-go-name: "MaxConcurrentStreams"
        throttlingPolicyOverrides: 
          description: "Specifies a list of Throttling Policy for datastores that override the\ncommon throttling policy specified for the registered Protection Source.\nFor datastores not in this list, common policy will still apply."
          type: "array"
          title: "Array of Throttling Policy Overrides for Datastores."
          items: 
            $ref: "#/definitions/ThrottlingPolicyOverride"
          x-go-name: "ThrottlingPolicyOverrides"
        username: 
          description: "Specifies username to access the target source."
          type: "string"
          x-go-name: "Username"
        vmwareType: 
          description: "Specifies the entity type such as 'kVCenter' if the environment is\nkKMware.\noverrideDescription: true\nExamples of VMware Objects include 'kVCenter', 'kFolder', 'kDatacenter',\n'kResourcePool', 'kDatastore', 'kVirtualMachine', etc."
          type: "string"
          enum: 
            - "kVCenter"
            - "kFolder"
            - "kDatacenter"
            - "kComputeResource"
            - "kClusterComputeResource"
            - "kResourcePool"
            - "kDatastore"
            - "kHostSystem"
            - "kVirtualMachine"
            - "kVirtualApp"
            - "kStandaloneHost"
            - "kStoragePod"
            - "kNetwork"
            - "kDistributedVirtualPortgroup"
            - "kTagCategory"
            - "kTag"
          x-go-name: "VMwareType"
      x-go-package: "cohesity/iris/server/data/public"
    RegisterRemoteCluster: 
      description: "Specifies the settings required for registering a remote Cluster\non this local Cluster."
      type: "object"
      title: "Register Remote Cluster."
      properties: 
        allEndpointsReachable: 
          description: "Specifies whether any endpoint (such as a Node) on the remote Cluster\nis reachable from this local Cluster.\nIf true, a service running on the local Cluster can communicate\ndirectly with any of its peers running on the remote Cluster, without\nusing a proxy."
          type: "boolean"
          x-go-name: "AllEndpointsReachable"
        bandwidthLimit: 
          description: "Specifies settings for limiting the data transfer rate between\nthe local and remote Clusters."
          title: "Bandwidth Limit."
          $ref: "#/definitions/BandwidthLimit"
        clearInterfaces: 
          type: "boolean"
          x-go-name: "ClearInterfaces"
        clearVlanId: 
          description: "Specifies whether to clear the vlanId field, and thus stop\nusing only the IPs in the VLAN for communicating with the remote Cluster."
          type: "boolean"
          x-go-name: "ClearVlanId"
        clusterId: 
          description: "Specifies the unique id of the remote Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterId"
        compressionEnabled: 
          description: "Specifies whether to compress the outbound data when\ntransferring the replication data over the network to the remote Cluster."
          type: "boolean"
          x-go-name: "CompressionEnabled"
        encryptionKey: 
          description: "Specifies the encryption key used for encrypting the replication data\nfrom a local Cluster to a remote Cluster.\nIf a key is not specified, replication traffic encryption is disabled.\nWhen Snapshots are replicated from a local Cluster to a remote Cluster,\nthe encryption key specified on the local Cluster must be the same\nas the key specified on the remote Cluster."
          type: "string"
          x-go-name: "EncryptionKey"
        networkInterfaceGroup: 
          description: "Specifies the group name of the network interfaces to\nuse for communicating with the remote Cluster."
          type: "string"
          x-go-name: "NetworkInterfaceGroup"
        networkInterfaceIds: 
          description: "Specifies the ids of the network interfaces to use for\ncommunicating with the remote Cluster."
          type: "array"
          title: "Array of Network Interface Ids."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "NetworkInterfaceIds"
        password: 
          description: "Specifies the password for Cohesity user to use when\nconnecting to the remote Cluster."
          type: "string"
          x-go-name: "Password"
        purposeRemoteAccess: 
          description: "Whether the remote cluster will be used for remote access for SPOG."
          type: "boolean"
          x-go-name: "PurposeRemoteAccess"
        purposeReplication: 
          description: "Whether the remote cluster will be used for replication."
          type: "boolean"
          x-go-name: "PurposeReplication"
        remoteAccessCredentials: 
          description: "Optional field for the user credentials to connect to Iris for remote\naccess for SPOG. If this is not specified, then credentials specified\nfor replication set up will be used for remote access for SPOG.\nAllowing a different user credentials to be set up for SPOG permits\nhaving different roles for remote access for SPOG and replication set\nup."
          $ref: "#/definitions/AccessTokenCredential"
        remoteIps: 
          description: "Specifies the IP addresses of the Nodes on the remote Cluster to\nconnect with. These IP addresses can also be VIPS.\nSpecifying hostnames is not supported."
          type: "array"
          title: "Array of Remote Node IP Addresses."
          items: 
            type: "string"
          x-go-name: "RemoteIps"
        remoteIrisPorts: 
          description: "Specifies the ports to use when connecting to the Nodes of the\nremote Cluster."
          type: "array"
          title: "Array of Ports."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "RemoteIrisPorts"
        userName: 
          description: "Specifies the Cohesity user name used to connect to the\nremote Cluster."
          type: "string"
          x-go-name: "UserName"
        validateOnly: 
          description: "Whether to only validate the credentials without saving the information."
          type: "boolean"
          x-go-name: "ValidateOnly"
        viewBoxPairInfo: 
          description: "Specifies pairings between Storage Domains (View Boxes) on the local Cluster\nwith Storage Domains (View Boxes) on a remote Cluster that are used in\nreplication."
          type: "array"
          title: "Array of Storage Domain (View Box) Pairs."
          items: 
            $ref: "#/definitions/ViewBoxPairInfo"
          x-go-name: "ViewBoxPairInfoList"
        vlanId: 
          description: "Specifies the Id of the VLAN to use for communicating with the remote\nCluster."
          type: "integer"
          format: "int32"
          x-go-name: "VlanId"
      x-go-package: "cohesity/iris/server/data/public"
    RegisteredApplicationServer: 
      description: "Specifies an Application Server and the Protection Source that registered\nthe Application Server."
      type: "object"
      properties: 
        applicationServer: 
          description: "Specifies the child subtree used to store additional application-level\nObjects.\nDifferent environments use the subtree to store application-level\ninformation. For example for SQL Server, this subtree stores the\nSQL Server instances running on a VM."
          type: "object"
          title: "Application Server and the subtrees below them."
          properties: 
            applicationNodes: 
              description: "Specifies the child subtree used to store additional application-level\nObjects.\nDifferent environments use the subtree to store application-level\ninformation. For example for SQL Server, this subtree stores the\nSQL Server instances running on a VM."
              type: "array"
              title: "Array of Child Subtrees."
              items: 
                $ref: "#/definitions/ProtectionSourceNode"
              x-go-name: "ApplicationNodes"
            logicalSize: 
              description: "Specifies the logical size of the data in bytes for the Object\non this node.\nPresence of this field indicates this node is a leaf node."
              type: "integer"
              format: "int64"
              x-go-name: "LogicalSize"
            nodes: 
              description: "Specifies children of the current node in the Protection Sources hierarchy.\nWhen representing Objects in memory, the entire Object subtree\nhierarchy is represented.\nYou can use this subtree to navigate down the Object hierarchy."
              type: "array"
              title: "Array of Child Nodes."
              items: 
                $ref: "#/definitions/ProtectionSourceNode"
              x-go-name: "Nodes"
            protectedSourcesSummary: 
              description: "Specifies aggregated information about all the\nchild Objects of this node that are currently protected by\na Protection Job.\nThere is one entry for each environment that is being backed up.\nThe aggregated information for the Object hierarchy's environment will\nbe available at the 0th index of the vector."
              type: "array"
              title: "Array of Protected Objects."
              items: 
                $ref: "#/definitions/AggregatedSubtreeInfo"
              x-go-name: "ProtectedSourcesSummary"
            protectionSource: 
              description: "Specifies the Protection Source for the current node."
              type: "object"
              title: "Protection Source."
              properties: 
                acropolisProtectionSource: 
                  description: "Specifies details about an Acropolis Protection Source\nwhen the environment is set to 'kAcropolis'."
                  type: "object"
                  title: "Acropolis Protection Source."
                  properties: 
                    clusterUuid: 
                      description: "Specifies the UUID of the Acropolis cluster instance to which this\nentity belongs to."
                      type: "string"
                      x-go-name: "ClusterUuid"
                    description: 
                      description: "Specifies a description about the Protection Source."
                      type: "string"
                      x-go-name: "Description"
                    mountPath: 
                      description: "Specifies whether the the VM is an agent VM. This is applicable to\nacropolis entity of type kVirtualMachine."
                      type: "boolean"
                      x-go-name: "IsAgentVm"
                    name: 
                      description: "Specifies the name of the Acropolis Object."
                      type: "string"
                      x-go-name: "Name"
                    type: 
                      description: "Specifies the type of an Acropolis Protection Source Object such as\n'kPrismCentral', 'kHost', 'kNetwork', etc.\nSpecifies the type of an Acropolis source entity.\n'kPrismCentral' indicates a collection of multiple Nutanix clusters.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an Acropolis host.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kStorageContainer' represents a storage container object."
                      type: "string"
                      enum: 
                        - "kPrismCentral"
                        - "kStandaloneCluster"
                        - "kCluster"
                        - "kHost"
                        - "kVirtualMachine"
                        - "kNetwork"
                        - "kStorageContainer"
                      x-go-name: "Type"
                    uuid: 
                      description: "Specifies the UUID of the Acropolis Object. This is unique within the\ncluster instance. Together with clusterUuid, this entity is unique\nwithin the Acropolis environment."
                      type: "string"
                      x-go-name: "Uuid"
                awsProtectionSource: 
                  description: "Specifies details about an AWS Protection Source\nwhen the environment is set to 'kAWS'."
                  type: "object"
                  title: "AWS Protection Source."
                  properties: 
                    hostType: 
                      description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                      type: "string"
                      enum: 
                        - "kLinux"
                        - "kWindows"
                      x-go-name: "HostType"
                    ipAddresses: 
                      description: "Specifies the IP address of the entity of type 'kVirtualMachine'."
                      type: "string"
                      x-go-name: "IpAddress"
                    name: 
                      description: "Specifies the name of the AWS Object set by the Cloud Provider."
                      type: "string"
                      x-go-name: "Name"
                    ownerId: 
                      description: "Specifies the owner id of the resource in AWS environment. With type,\nname and ownerId gives a globally unique identity to the AWS entity."
                      type: "string"
                      x-go-name: "OwnerId"
                    regionId: 
                      description: "Specifies the region Id of the entity if the entity is an EC2 instance."
                      type: "string"
                      x-go-name: "RegionId"
                    resourceId: 
                      description: "Specifies the unique Id of the resource given by the cloud provider."
                      type: "string"
                      x-go-name: "ResourceId"
                    type: 
                      description: "Specifies the type of an AWS Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an AWS source entity.\n'kIAMUser' indicates a unique user within an AWS account.\n'kRegion' indicates a geographical region in the global infrastructure.\n'kAvailabilityZone' indicates an availability zone within a region.\n'kEC2Instance' indicates a Virtual Machine running in AWS environment.\n'kVPC' indicates a virtual private cloud (VPC) network within AWS.\n'kSubnet' indicates a subnet inside the VPC.\n'kNetworkSecurityGroup' represents a network security group.\n'kInstanceType' represents various machine types.\n'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine."
                      type: "string"
                      enum: 
                        - "kIAMUser"
                        - "kRegion"
                        - "kAvailabilityZone"
                        - "kEC2Instance"
                        - "kVPC"
                        - "kSubnet"
                        - "kNetworkSecurityGroup"
                        - "kInstanceType"
                        - "kKeyPair"
                      x-go-name: "Type"
                    userAccountId: 
                      description: "Specifies the account id derived from the ARN of the user."
                      type: "string"
                      x-go-name: "UserAccountId"
                    userResourceName: 
                      description: "Specifies the Amazon Resource Name (ARN) of the user."
                      type: "string"
                      x-go-name: "UserResourceName"
                azureProtectionSource: 
                  description: "Specifies details about an Azure Protection Source\nwhen the environment is set to 'kAzure'."
                  type: "object"
                  title: "Azure Protection Source."
                  properties: 
                    hostType: 
                      description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                      type: "string"
                      enum: 
                        - "kLinux"
                        - "kWindows"
                      x-go-name: "HostType"
                    ipAddresses: 
                      type: "array"
                      title: "Specifies a list of IP addresses for entities of type 'kVirtualMachine'."
                      items: 
                        type: "string"
                      x-go-name: "IpAddresses"
                    location: 
                      description: "Specifies the physical location of the resource group."
                      type: "string"
                      x-go-name: "Location"
                    memoryMbytes: 
                      description: "Specifies the amount of memory in MegaBytes of the Azure resource of\ntype 'kComputeOptions'."
                      type: "integer"
                      format: "int64"
                      x-go-name: "MemoryMbytes"
                    name: 
                      description: "Specifies the name of the Azure Object set by the Cloud Provider.\nIf the provider did not set a name for the object, this field is not set."
                      type: "string"
                      x-go-name: "Name"
                    numCores: 
                      description: "Specifies the number of CPU cores of the Azure resource of\ntype 'kComputeOptions'."
                      type: "integer"
                      format: "int32"
                      x-go-name: "NumCores"
                    resourceId: 
                      description: "Specifies the unique Id of the resource in Azure environment."
                      type: "string"
                      x-go-name: "ResourceId"
                    type: 
                      description: "Specifies the type of an Azure Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an Azure source entity.\n'kSubscription' indicates a billing unit within Azure account.\n'kResourceGroup' indicates a container that holds related resources.\n'kVirtualMachine' indicates a Virtual Machine in Azure environment.\n'kStorageAccount' represents a collection of storage containers.\n'kStorageKey' indicates a key required to access the storage account.\n'kStorageContainer' represents a storage container within a storage account.\n'kStorageBlob' represents a storage blog within a storage container.\n'kNetworkSecurityGroup' represents a network security group.\n'kVirtualNetwork' represents a virtual network.\n'kSubnet' represents a subnet within the virtual network.\n'kComputeOptions' indicates the number of CPU cores and memory size available for a type of a Virtual Machine."
                      type: "string"
                      enum: 
                        - "kSubscription"
                        - "kResourceGroup"
                        - "kVirtualMachine"
                        - "kStorageAccount"
                        - "kStorageKey"
                        - "kStorageContainer"
                        - "kStorageBlob"
                        - "kNetworkSecurityGroup"
                        - "kVirtualNetwork"
                        - "kSubnet"
                        - "kComputeOptions"
                      x-go-name: "Type"
                environment: 
                  description: "Specifies the environment (such as 'kVMware' or 'kSQL') where the\nProtection Source exists. Depending on the environment, one of the\nfollowing Protection Sources are initialized.\n\nNOTE: kPuppeteer refers to Cohesity's Remote Adapter.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
                  type: "string"
                  enum: 
                    - "kVMware"
                    - "kSQL"
                    - "kView"
                    - "kPuppeteer"
                    - "kPhysical"
                    - "kPure"
                    - "kNetapp"
                    - "kGenericNas"
                    - "kHyperV"
                    - "kAcropolis"
                    - "kAzure"
                  x-go-name: "Environment"
                hypervProtectionSource: 
                  description: "Specifies details about a HyperV Protection Source\nwhen the environment is set to 'kHyperV'."
                  type: "object"
                  title: "HyperV Protection Source."
                  properties: 
                    agentInfo: 
                      description: "Specifies information about the agent running on the HyperV objects."
                      $ref: "#/definitions/AgentInformation"
                    backupType: 
                      description: "Specifies the type of backup supported by the VM.\n'kRctBackup', 'kVssBackup'\nSpecifies the type of an HyperV datastore object.\n'kRctBackup' indicates backup is done using RCT/checkpoints.\n'kVssBackup' indicates backup is done using VSS."
                      type: "string"
                      enum: 
                        - "kRctBackup"
                        - "kVssBackup"
                      x-go-name: "BackupType"
                    clusterName: 
                      description: "Specifies the cluster name for 'kHostCluster' objects."
                      type: "string"
                      x-go-name: "ClusterName"
                    datastoreInfo: 
                      description: "Specifies additional information for 'kDatastore' objects."
                      $ref: "#/definitions/HypervDatastore"
                    description: 
                      description: "Specifies a description about the Protection Source."
                      type: "string"
                      x-go-name: "Description"
                    hostType: 
                      description: "Specifies host OS type for 'kVirtualMachine' objects.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                      type: "string"
                      enum: 
                        - "kLinux"
                        - "kWindows"
                      x-go-name: "HostType"
                    hypervUuid: 
                      description: "Specifies the UUID for 'kVirtualMachine' HyperV objects."
                      type: "string"
                      x-go-name: "HypervUuid"
                    name: 
                      description: "Specifies the name of the HyperV Object."
                      type: "string"
                      x-go-name: "Name"
                    type: 
                      description: "Specifies the type of an HyperV Protection Source Object such as\n'kSCVMMServer', 'kStandaloneHost', 'kNetwork', etc.\noverrideDescription: true\nSpecifies the type of an HyperV Protection Source.\n'kSCVMMServer' indicates a collection of root folders clusters.\n'kStandaloneHost' indicates a single Nutanix cluster.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kHostGroup' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an HyperV host.\n'kHostCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kDatastore' represents a storage container object."
                      type: "string"
                      enum: 
                        - "kSCVMMServer"
                        - "kStandaloneHost"
                        - "kStandaloneCluster"
                        - "kHostGroup"
                        - "kHost"
                        - "kHostCluster"
                        - "kVirtualMachine"
                        - "kNetwork"
                        - "kDatastore"
                      x-go-name: "Type"
                    uuid: 
                      description: "Specifies the UUID of the Object. This is unique within the HyperV\nenvironment."
                      type: "string"
                      x-go-name: "Uuid"
                    vmInfo: 
                      description: "Specifies additional information for 'kVirtualMachine' objects."
                      $ref: "#/definitions/HypervVirtualMachine"
                id: 
                  description: "Specifies an id of the Protection Source."
                  type: "integer"
                  format: "int64"
                  x-go-name: "Id"
                kvmProtectionSource: 
                  description: "Specifies details about a KVM Protection Source\nwhen the environment is set to 'kKVM'."
                  type: "object"
                  title: "KVM Protection Source."
                  properties: 
                    agentError: 
                      description: "Specifies a message when the agent cannot be reached."
                      type: "string"
                      x-go-name: "AgentError"
                    agentId: 
                      description: "Specifies the ID of the Agent with which this KVM entity is associated\nwhen the entity represents a Delegate host or KVM host."
                      type: "integer"
                      format: "int64"
                      x-go-name: "AgentId"
                    clusterId: 
                      description: "Specifies the cluster ID for 'kCluster' objects."
                      type: "string"
                      x-go-name: "ClusterId"
                    datacenterId: 
                      description: "Specifies the ID of the 'kDatacenter' objects."
                      type: "string"
                      x-go-name: "DatacenterId"
                    description: 
                      description: "Specifies a description about the Protection Source."
                      type: "string"
                      x-go-name: "Description"
                    name: 
                      description: "Specifies the name of the KVM entity."
                      type: "string"
                      x-go-name: "Name"
                    type: 
                      description: "Specifies the type of KVM Protection Source entities such as\n'kDatacenter', 'kCluster', 'kVirtualMachine', etc.\nSpecifies the type of an KVM source entity.\n'kOVirtManager' indicates the root entity registerd with Cohesity cluster.\n'kStandaloneHost' indicates a host registered with Cohesity cluster.\n'kDatacenter' indicates a KVM datacenter managed by the OVirt manager.\n'kCluster' indicates a KVM cluster managed by the OVirt manager.\n'kHost' indicates a host within the KVM environment.\n'kVirtualMachine' indicates a virtual machine in the KVM enironment.\n'kNetwork' represents a network used by the virtual machine entity.\n'kStorageDomain' represents a storage domain in the KVM environment."
                      type: "string"
                      enum: 
                        - "kOVirtManager"
                        - "kStandaloneHost"
                        - "kDatacenter"
                        - "kCluster"
                        - "kHost"
                        - "kVirtualMachine"
                        - "kNetwork"
                        - "kStorageDomain"
                      x-go-name: "Type"
                    uuid: 
                      description: "Specifies the UUID of the Object. This is unique within the KVM\nenvironment."
                      type: "string"
                      x-go-name: "Uuid"
                name: 
                  description: "Specifies a name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                nasProtectionSource: 
                  description: "Specifies details about a Generic NAS Protection Source\nwhen the environment is set to 'kGenericNas'."
                  type: "object"
                  title: "Generic NAS Protection Source."
                  properties: 
                    description: 
                      description: "Specifies a description about the Protection Source."
                      type: "string"
                      x-go-name: "Description"
                    mountPath: 
                      description: "Specifies the mount path of this NAS. For example, for a NFS mount point,\nthis should be in the format of IP or hostname:/foo/bar."
                      type: "string"
                      x-go-name: "MountPath"
                    name: 
                      description: "Specifies the name of the NetApp Object."
                      type: "string"
                      x-go-name: "Name"
                    protocol: 
                      description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
                      type: "string"
                      enum: 
                        - "kNfs3"
                        - "kCifs1"
                      x-go-name: "Protocol"
                    type: 
                      description: "Specifies the type of a Protection Source Object in a generic NAS Source\nsuch as 'kGroup', or 'kHost'.\nSpecifies the kind of NAS mount.\n'kGroup' indicates top level node that holds individual NAS hosts.\n'kHost' indicates a single NAS path that can be mounted."
                      type: "string"
                      enum: 
                        - "kGroup"
                        - "kHost"
                      x-go-name: "Type"
                netappProtectionSource: 
                  description: "Specifies details about a NetApp Protection Source\nwhen the environment is set to 'kNetapp'."
                  type: "object"
                  title: "NetApp Protection Source."
                  properties: 
                    clusterInfo: 
                      description: "Specifies information about a NetApp cluster and is only valid for a\nNetApp Object of type kCluster."
                      $ref: "#/definitions/NetappClusterInfo"
                    isTopLevel: 
                      description: "Specifies if this Object is a top level Object.\nBecause a top level Object can either be a NetApp cluster or a Vserver,\nthis cannot be determined only by type."
                      type: "boolean"
                      x-go-name: "IsTopLevel"
                    name: 
                      description: "Specifies the name of the NetApp Object."
                      type: "string"
                      x-go-name: "Name"
                    type: 
                      description: "Specifies the type of managed NetApp Object in a NetApp Protection Source\nsuch as 'kCluster', 'kVserver' or 'kVolume'."
                      type: "string"
                      enum: 
                        - "kCluster"
                        - "kVserver"
                        - "kVolume"
                      x-go-name: "Type"
                    uuid: 
                      description: "Specifies the globally unique ID of this Object assigned by the\nNetApp server."
                      type: "string"
                      x-go-name: "Uuid"
                    volumeInfo: 
                      description: "Specifies information about a NetApp volume and is only valid for a\nNetApp Object of type kVolume."
                      $ref: "#/definitions/NetappVolumeInfo"
                    vserverInfo: 
                      description: "Specifies information about a NetApp Vserver and is only valid for a\nNetApp Object of type kVserver."
                      $ref: "#/definitions/NetappVserverInfo"
                parentId: 
                  description: "Specifies an id of the parent of the Protection Source."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ParentId"
                physicalProtectionSource: 
                  description: "Specifies details about a Physical Protection Source\nwhen the environment is set to 'kPhysical'."
                  type: "object"
                  title: "Physical Protection Source."
                  properties: 
                    agents: 
                      description: "Specifiles the agents running on the Physical Protection Source and the\nstatus information."
                      type: "array"
                      title: "Array of Agents on the Physical Protection Source."
                      items: 
                        $ref: "#/definitions/AgentInformation"
                      x-go-name: "Agents"
                    hostType: 
                      description: "Specifies the environment type for the host.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                      type: "string"
                      enum: 
                        - "kLinux"
                        - "kWindows"
                      x-go-name: "HostType"
                    id: 
                      description: "Specifies a unique id of a Physical Protection Source.\nThe id is unique across Cohesity Clusters."
                      type: "object"
                      title: "Unique Global Id."
                      properties: 
                        clusterId: 
                          description: "Specifies the Cohesity Cluster id where the object was created."
                          type: "integer"
                          format: "int64"
                          x-go-name: "ClusterId"
                        clusterIncarnationId: 
                          description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                          type: "integer"
                          format: "int64"
                          x-go-name: "ClusterIncarnationId"
                        id: 
                          description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                          type: "integer"
                          format: "int64"
                          x-go-name: "Id"
                    name: 
                      description: "Specifies a human readable name of the Protection Source."
                      type: "string"
                      x-go-name: "Name"
                    type: 
                      description: "Specifies the type of managed Object in a Physical Protection Source.\n'kHost' indicates a single physical server.\n'kWindowsCluster' indicates a Microsoft Windows cluster."
                      type: "string"
                      enum: 
                        - "kHost"
                        - "kWindowsCluster"
                      x-go-name: "Type"
                    volumes: 
                      description: "Specifies the volumes available on the physical host.\nThese fields are populated only for the kPhysicalHost type."
                      type: "array"
                      title: "Array of Physical Volumes."
                      items: 
                        $ref: "#/definitions/PhysicalVolume"
                      x-go-name: "Volumes"
                pureProtectionSource: 
                  description: "Specifies details about a Pure Protection Source\nwhen the environment is set to 'kPure'."
                  type: "object"
                  title: "Pure Protection Source."
                  properties: 
                    name: 
                      description: "Specifies a human readable name of the Protection Source."
                      type: "string"
                      x-go-name: "Name"
                    storageArray: 
                      description: "Specifies a Pure Storage Array information. This is set only when\nthe type is kStorageArray."
                      $ref: "#/definitions/PureStorageArray"
                    type: 
                      description: "Specifies the type of managed Object in a pure Protection Source like\na kStorageArray or kVolume.\nExamples of Pure Objects include 'kStorageArray' and 'kVolume'."
                      type: "string"
                      enum: 
                        - "kStorageArray"
                        - "kVolume"
                      x-go-name: "Type"
                    volume: 
                      description: "Specifies a Pure Volume information within a storage array.\nThis is set only when the type is kVolume."
                      $ref: "#/definitions/PureVolume"
                sqlProtectionSource: 
                  description: "Specifies details about a SQL Protection Source\nwhen the environment is set to 'kSQL'."
                  type: "object"
                  title: "SQL Protection Source."
                  properties: 
                    IsAvailableForVssBackup: 
                      description: "Specifies whether the database is marked as available for backup according\nto the SQL Server VSS writer. This may be false if either the state of\nthe databases is not online, or if the VSS writer is not online.\nThis field is set only for type 'kDatabase'."
                      type: "boolean"
                    createdTimestamp: 
                      description: "Specifies the time when the database was created. It is displayed in the\ntimezone of the SQL server on which this database is running."
                      type: "string"
                      x-go-name: "CreatedTimestamp"
                    databaseName: 
                      description: "Specifies the database name of the SQL Protection Source, if the type\nis database."
                      type: "string"
                      x-go-name: "DatabaseName"
                    dbAagEntityId: 
                      description: "Specifies the AAG entity id if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
                      type: "integer"
                      format: "int64"
                      x-go-name: "DbAagEntityId"
                    dbAagName: 
                      description: "Specifies the name of the AAG if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
                      type: "string"
                      x-go-name: "DbAagName"
                    dbFiles: 
                      description: "Specifies the last known information about the set of database files\non the host. This field is set only for type 'kDatabase'."
                      type: "array"
                      items: 
                        $ref: "#/definitions/DbFileInfo"
                      x-go-name: "DbFiles"
                    id: 
                      description: "Specifies an id that identifies an SQL Object."
                      $ref: "#/definitions/SqlSourceId"
                    name: 
                      description: "Specifies the instance name of the SQL Protection Source"
                      type: "string"
                      x-go-name: "Name"
                    ownerId: 
                      description: "Specifies the id of the container VM for the SQL Protection Source."
                      type: "integer"
                      format: "int64"
                      x-go-name: "OwnerId"
                    recoveryModel: 
                      description: "Specifies the Recovery Model for the database in SQL environment.\nOnly meaningful for the 'kDatabase' SQL Protection Source.\nSpecifies the Recovery Model set for the Microsoft SQL Server.\n'kSimpleRecoveryModel' indicates the Simple SQL Recovery Model which\ndoes not utilize log backups.\n'kFullRecoveryModel' indicates the Full SQL Recovery Model which\nrequires log backups and allows recovery to a single point in time.\n'kBulkLoggedRecoveryModel' indicates the Bulk Logged SQL Recovery Model\nwhich requires log backups and allows high-performance bulk copy operations."
                      type: "string"
                      enum: 
                        - "kSimpleRecoveryModel"
                        - "kFullRecoveryModel"
                        - "kBulkLoggedRecoveryModel"
                      x-go-name: "RecoveryModel"
                    sqlServerDbState: 
                      description: "The state of the database as returned by SQL Server."
                      type: "integer"
                      format: "int32"
                      x-go-name: "SqlServerDbState"
                    type: 
                      description: "Specifies the type of the managed Object in a SQL Protection Source.\nExamples of SQL Objects include 'kInstance' and 'kDatabase'."
                      type: "string"
                      enum: 
                        - "kInstance"
                        - "kDatabase"
                      x-go-name: "Type"
                viewProtectionSource: 
                  description: "Specifies details about a View Protection Source\nwhen the environment is set to 'kView'."
                  type: "object"
                  title: "View Protection Source."
                  properties: 
                    id: 
                      description: "Specifies a unique id of a Protection Source for a View.\nThe id is unique across Cohesity Clusters."
                      type: "object"
                      title: "Unique Global Id."
                      properties: 
                        clusterId: 
                          description: "Specifies the Cohesity Cluster id where the object was created."
                          type: "integer"
                          format: "int64"
                          x-go-name: "ClusterId"
                        clusterIncarnationId: 
                          description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                          type: "integer"
                          format: "int64"
                          x-go-name: "ClusterIncarnationId"
                        id: 
                          description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                          type: "integer"
                          format: "int64"
                          x-go-name: "Id"
                    name: 
                      description: "Specifies a human readable name of the Protection Source of a View."
                      type: "string"
                      x-go-name: "Name"
                    type: 
                      description: "Specifies the type of managed Object in a View Protection Source\nenvironment.\nExamples of View Objects include 'kViewBox' or 'kView'."
                      type: "string"
                      enum: 
                        - "kViewBox"
                        - "kView"
                      x-go-name: "Type"
                vmWareProtectionSource: 
                  description: "Specifies details about a VMware Protection Source\nwhen the environment is set to 'kVMware'."
                  type: "object"
                  title: "VMware Protection Source."
                  properties: 
                    agentId: 
                      description: "Specifies the id of the persistent agent."
                      type: "integer"
                      format: "int64"
                      x-go-name: "AgentId"
                    agents: 
                      description: "This is set only if the Virtual Machine has persistent agent."
                      type: "array"
                      title: "Specifies the list of agent information on the Virtual Machine."
                      items: 
                        $ref: "#/definitions/AgentInformation"
                      x-go-name: "Agents"
                    connectionState: 
                      description: "Specifies the connection state of the Object and are only valid for\nESXi hosts ('kHostSystem') or Virtual Machines ('kVirtualMachine').\nThese enums are equivalent to the connection states documented in\nVMware's reference documentation.\nExamples of Cohesity connection states include 'kConnected',\n'kDisconnected', 'kInacccessible', etc."
                      type: "string"
                      enum: 
                        - "kConnected"
                        - "kDisconnected"
                        - "kInacccessible"
                        - "kInvalid"
                        - "kOrphaned"
                        - "kNotResponding"
                      x-go-name: "ConnectionState"
                    datastoreInfo: 
                      description: "Specifies additional information of entities of type 'kDatastore'."
                      $ref: "#/definitions/DatastoreInfo"
                    folderType: 
                      description: "Specifies the folder type for the 'kFolder' Object.\n'kVMFolder' indicates folder can hold VMs or vApps.\n'kHostFolder' indicates folder can hold hosts and compute resources.\n'kDatastoreFolder' indicates folder can hold datastores and storage pods.\n'kNetworkFolder' indicates folder can hold networks and switches.\n'kRootFolder' indicates folder can hold datacenters."
                      type: "string"
                      enum: 
                        - "kVMFolder"
                        - "kHostFolder"
                        - "kDatastoreFolder"
                        - "kNetworkFolder"
                        - "kRootFolder"
                      x-go-name: "FolderType"
                    hasPersistentAgent: 
                      description: "Set to true if a persistent agent is running on the Virtual Machine.\nThis is populated for entities of type 'kVirtualMachine'."
                      type: "boolean"
                      x-go-name: "HasPersistentAgent"
                    hostType: 
                      description: "Specifies the host type for the 'kVirtualMachine' Object.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                      type: "string"
                      enum: 
                        - "kLinux"
                        - "kWindows"
                      x-go-name: "HostType"
                    id: 
                      description: "Specifies the UUID of the VMware Protection Source."
                      $ref: "#/definitions/VMwareObjectId"
                    name: 
                      description: "Specifies a human readable name of the Protection Source."
                      type: "string"
                      x-go-name: "Name"
                    tagAttributes: 
                      description: "Specifies the optional list of VM Tag attributes associated with this\nObject."
                      type: "array"
                      items: 
                        $ref: "#/definitions/TagAttribute"
                      x-go-name: "TagAttributes"
                    toolsRunningStatus: 
                      description: "Specifies the status of VMware Tools for the guest OS on the VM.\nThis is only valid for the 'kVirtualMachine' type.\n'kGuestToolsRunning' means the VMware tools are running on the guest OS.\n'kGuestToolsNotRunning' means the VMware tools are not running on the\nguest OS.\n'kUnknown' means the state of the VMware tools on the guest OS is not\nknown.\n'kGuestToolsExecutingScripts' means the guest OS is currently executing\nscripts using VMware tools."
                      type: "string"
                      enum: 
                        - "kUnknown"
                        - "kGuestToolsExecutingScripts"
                        - "kGuestToolsNotRunning"
                        - "kGuestToolsRunning"
                      x-go-name: "VMwareToolsRunningStatus"
                    type: 
                      description: "Specifies the type of managed Object in a VMware Protection Source.\nExamples of VMware Objects include 'kVCenter', 'kFolder', 'kDatacenter',\n'kResourcePool', 'kDatastore', 'kVirtualMachine', etc."
                      type: "string"
                      enum: 
                        - "kVCenter"
                        - "kFolder"
                        - "kDatacenter"
                        - "kComputeResource"
                        - "kClusterComputeResource"
                        - "kResourcePool"
                        - "kDatastore"
                        - "kHostSystem"
                        - "kVirtualMachine"
                        - "kVirtualApp"
                        - "kStandaloneHost"
                        - "kStoragePod"
                        - "kNetwork"
                        - "kDistributedVirtualPortgroup"
                        - "kTagCategory"
                        - "kTag"
                      x-go-name: "Type"
                    virtualDisks: 
                      description: "This is populated for entities of type 'kVirtualMachine'."
                      type: "array"
                      title: "Specifies an array of virtual disks that are part of the Virtual Machine."
                      items: 
                        $ref: "#/definitions/VirtualDiskInfo"
                      x-go-name: "VirtualDisks"
            registrationInfo: 
              description: "Specifies registration information for a root node in a Protection\nSources tree. A root node represents a registered Source on the\nCohesity Cluster, such as a vCenter Server."
              type: "object"
              title: "Registered Source Info."
              properties: 
                accessInfo: 
                  description: "Specifies the parameters required to establish a connection\nwith a particular environment."
                  $ref: "#/definitions/ConnectorParams"
                authenticationErrorMessage: 
                  description: "Specifies an authentication error message. This indicates the given\ncredentials are rejected and the registration of the source is not\nsuccessful."
                  type: "string"
                  x-go-name: "AuthenticationErrorMessage"
                authenticationStatus: 
                  description: "Specifies the status of the authenticating to the Protection Source\nwhen registering it with Cohesity Cluster. If the status is 'kFinished'\nand there is no error, registration is successful.\nSpecifies the status of the authentication during the registration of a\nProtection Source.\n'kPending' indicates the authentication is in progress.\n'kScheduled' indicates the authentication is scheduled.\n'kFinished' indicates the authentication is completed."
                  type: "string"
                  enum: 
                    - "kPending"
                    - "kScheduled"
                    - "kFinished"
                  x-go-name: "AuthenticationStatus"
                environments: 
                  description: "Specifies a list of applications environment that are registered\nwith this Protection Source such as 'kSQL'.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
                  type: "array"
                  items: 
                    type: "string"
                    enum: 
                      - "kVMware"
                      - "kSQL"
                      - "kView"
                      - "kPuppeteer"
                      - "kPhysical"
                      - "kPure"
                      - "kNetapp"
                      - "kGenericNas"
                      - "kHyperV"
                      - "kAcropolis"
                      - "kAzure"
                  x-go-name: "Environments"
                minimumFreeSpaceGB: 
                  description: "Specifies the minimum free space in GiB of the space expected to be\navailable on the datastore where the virtual disks of the VM being backed\nup. If the amount of free space(in GiB) is lower than the value given by\nthis field, backup will be aborted. Note that this field is applicable\nonly to 'kVMware' type of environments."
                  type: "integer"
                  format: "int64"
                  x-go-name: "MinimumFreeSpaceGB"
                nasMountCredentials: 
                  description: "Specifies the credentials required to mount directories on the NetApp\nserver if given."
                  type: "object"
                  title: "NAS Server Credentials."
                  properties: 
                    domain: 
                      description: "Specifies the domain in which this credential is valid."
                      type: "string"
                      x-go-name: "Domain"
                    nasProtocol: 
                      description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
                      type: "string"
                      enum: 
                        - "kNfs3"
                        - "kCifs1"
                      x-go-name: "NasProtocol"
                    password: 
                      description: "Specifies the password for the username to use for mounting the NAS."
                      type: "string"
                      x-go-name: "Password"
                    username: 
                      description: "Specifies a username to use for mounting the NAS."
                      type: "string"
                      x-go-name: "Username"
                password: 
                  description: "Specifies password of the username to access the target source."
                  type: "string"
                  x-go-name: "Password"
                refreshErrorMessage: 
                  description: "Specifies a message if there was any error encountered during the last\nrebuild of the Protection Source tree. If there was no error during the\nlast rebuild, this field is reset."
                  type: "string"
                  x-go-name: "RefreshErrorMessage"
                refreshTimeUsecs: 
                  description: "Specifies the Unix epoch time (in microseconds) when the Protection\nSource tree was most recently fetched and built."
                  type: "integer"
                  format: "int64"
                  x-go-name: "RefreshTimeUsecs"
                registrationTimeUsecs: 
                  description: "Specifies the Unix epoch time (in microseconds) when the Protection\nSource was registered."
                  type: "integer"
                  format: "int64"
                  x-go-name: "RegistrationTimeUsecs"
                throttlingPolicy: 
                  description: "Specifies the throttling policy that should be applied to all datastores\nunder this registered Protection Source."
                  $ref: "#/definitions/ThrottlingPolicy"
                throttlingPolicyOverrides: 
                  description: "Specifies a list of Throttling Policy for datastores that override the\ncommon throttling policy specified for the registered Protection Source.\nFor datastores not in this list, common policy will still apply."
                  type: "array"
                  title: "Array of Throttling Policy Overrides for Datastores."
                  items: 
                    $ref: "#/definitions/ThrottlingPolicyOverride"
                  x-go-name: "ThrottlingPolicyOverrides"
                username: 
                  description: "Specifies username to access the target source."
                  type: "string"
                  x-go-name: "Username"
                warningMessages: 
                  description: "Though the registration may succeed, warning messages imply the\nhost environment requires some cleanup or fixing."
                  type: "array"
                  title: "Specifies a list of warnings encountered during registration."
                  items: 
                    type: "string"
                  x-go-name: "WarningMessages"
            unprotectedSourcesSummary: 
              description: "Specifies aggregated information about all the\nchild Objects of this node that are not protected by any Protection Jobs.\nThe aggregated information for the Objects hierarchy's environment\nwill be available at the 0th index of the vector.\nNOTE: This list includes Objects that were protected at some point in the\npast but are no longer actively protected.\nSnapshots containing these Objects may even exist on the Cohesity Cluster\nand be available to recover from."
              type: "array"
              title: "Array of Unprotected Sources."
              items: 
                $ref: "#/definitions/AggregatedSubtreeInfo"
              x-go-name: "UnprotectedSourcesSummary"
        registeredProtectionSource: 
          description: "Specifies the Protection Source like a VM or Physical Server that\nregistered the Application Server."
          type: "object"
          title: "Protection Source."
          properties: 
            acropolisProtectionSource: 
              description: "Specifies details about an Acropolis Protection Source\nwhen the environment is set to 'kAcropolis'."
              type: "object"
              title: "Acropolis Protection Source."
              properties: 
                clusterUuid: 
                  description: "Specifies the UUID of the Acropolis cluster instance to which this\nentity belongs to."
                  type: "string"
                  x-go-name: "ClusterUuid"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                mountPath: 
                  description: "Specifies whether the the VM is an agent VM. This is applicable to\nacropolis entity of type kVirtualMachine."
                  type: "boolean"
                  x-go-name: "IsAgentVm"
                name: 
                  description: "Specifies the name of the Acropolis Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of an Acropolis Protection Source Object such as\n'kPrismCentral', 'kHost', 'kNetwork', etc.\nSpecifies the type of an Acropolis source entity.\n'kPrismCentral' indicates a collection of multiple Nutanix clusters.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an Acropolis host.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kStorageContainer' represents a storage container object."
                  type: "string"
                  enum: 
                    - "kPrismCentral"
                    - "kStandaloneCluster"
                    - "kCluster"
                    - "kHost"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kStorageContainer"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Acropolis Object. This is unique within the\ncluster instance. Together with clusterUuid, this entity is unique\nwithin the Acropolis environment."
                  type: "string"
                  x-go-name: "Uuid"
            awsProtectionSource: 
              description: "Specifies details about an AWS Protection Source\nwhen the environment is set to 'kAWS'."
              type: "object"
              title: "AWS Protection Source."
              properties: 
                hostType: 
                  description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                ipAddresses: 
                  description: "Specifies the IP address of the entity of type 'kVirtualMachine'."
                  type: "string"
                  x-go-name: "IpAddress"
                name: 
                  description: "Specifies the name of the AWS Object set by the Cloud Provider."
                  type: "string"
                  x-go-name: "Name"
                ownerId: 
                  description: "Specifies the owner id of the resource in AWS environment. With type,\nname and ownerId gives a globally unique identity to the AWS entity."
                  type: "string"
                  x-go-name: "OwnerId"
                regionId: 
                  description: "Specifies the region Id of the entity if the entity is an EC2 instance."
                  type: "string"
                  x-go-name: "RegionId"
                resourceId: 
                  description: "Specifies the unique Id of the resource given by the cloud provider."
                  type: "string"
                  x-go-name: "ResourceId"
                type: 
                  description: "Specifies the type of an AWS Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an AWS source entity.\n'kIAMUser' indicates a unique user within an AWS account.\n'kRegion' indicates a geographical region in the global infrastructure.\n'kAvailabilityZone' indicates an availability zone within a region.\n'kEC2Instance' indicates a Virtual Machine running in AWS environment.\n'kVPC' indicates a virtual private cloud (VPC) network within AWS.\n'kSubnet' indicates a subnet inside the VPC.\n'kNetworkSecurityGroup' represents a network security group.\n'kInstanceType' represents various machine types.\n'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine."
                  type: "string"
                  enum: 
                    - "kIAMUser"
                    - "kRegion"
                    - "kAvailabilityZone"
                    - "kEC2Instance"
                    - "kVPC"
                    - "kSubnet"
                    - "kNetworkSecurityGroup"
                    - "kInstanceType"
                    - "kKeyPair"
                  x-go-name: "Type"
                userAccountId: 
                  description: "Specifies the account id derived from the ARN of the user."
                  type: "string"
                  x-go-name: "UserAccountId"
                userResourceName: 
                  description: "Specifies the Amazon Resource Name (ARN) of the user."
                  type: "string"
                  x-go-name: "UserResourceName"
            azureProtectionSource: 
              description: "Specifies details about an Azure Protection Source\nwhen the environment is set to 'kAzure'."
              type: "object"
              title: "Azure Protection Source."
              properties: 
                hostType: 
                  description: "Specifies the OS type of the Protection Source of type 'kVirtualMachine'\nsuch as 'kWindows' or 'kLinux'.\noverrideDescription: true\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                ipAddresses: 
                  type: "array"
                  title: "Specifies a list of IP addresses for entities of type 'kVirtualMachine'."
                  items: 
                    type: "string"
                  x-go-name: "IpAddresses"
                location: 
                  description: "Specifies the physical location of the resource group."
                  type: "string"
                  x-go-name: "Location"
                memoryMbytes: 
                  description: "Specifies the amount of memory in MegaBytes of the Azure resource of\ntype 'kComputeOptions'."
                  type: "integer"
                  format: "int64"
                  x-go-name: "MemoryMbytes"
                name: 
                  description: "Specifies the name of the Azure Object set by the Cloud Provider.\nIf the provider did not set a name for the object, this field is not set."
                  type: "string"
                  x-go-name: "Name"
                numCores: 
                  description: "Specifies the number of CPU cores of the Azure resource of\ntype 'kComputeOptions'."
                  type: "integer"
                  format: "int32"
                  x-go-name: "NumCores"
                resourceId: 
                  description: "Specifies the unique Id of the resource in Azure environment."
                  type: "string"
                  x-go-name: "ResourceId"
                type: 
                  description: "Specifies the type of an Azure Protection Source Object such as\n'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.\nSpecifies the type of an Azure source entity.\n'kSubscription' indicates a billing unit within Azure account.\n'kResourceGroup' indicates a container that holds related resources.\n'kVirtualMachine' indicates a Virtual Machine in Azure environment.\n'kStorageAccount' represents a collection of storage containers.\n'kStorageKey' indicates a key required to access the storage account.\n'kStorageContainer' represents a storage container within a storage account.\n'kStorageBlob' represents a storage blog within a storage container.\n'kNetworkSecurityGroup' represents a network security group.\n'kVirtualNetwork' represents a virtual network.\n'kSubnet' represents a subnet within the virtual network.\n'kComputeOptions' indicates the number of CPU cores and memory size available for a type of a Virtual Machine."
                  type: "string"
                  enum: 
                    - "kSubscription"
                    - "kResourceGroup"
                    - "kVirtualMachine"
                    - "kStorageAccount"
                    - "kStorageKey"
                    - "kStorageContainer"
                    - "kStorageBlob"
                    - "kNetworkSecurityGroup"
                    - "kVirtualNetwork"
                    - "kSubnet"
                    - "kComputeOptions"
                  x-go-name: "Type"
            environment: 
              description: "Specifies the environment (such as 'kVMware' or 'kSQL') where the\nProtection Source exists. Depending on the environment, one of the\nfollowing Protection Sources are initialized.\n\nNOTE: kPuppeteer refers to Cohesity's Remote Adapter.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
              type: "string"
              enum: 
                - "kVMware"
                - "kSQL"
                - "kView"
                - "kPuppeteer"
                - "kPhysical"
                - "kPure"
                - "kNetapp"
                - "kGenericNas"
                - "kHyperV"
                - "kAcropolis"
                - "kAzure"
              x-go-name: "Environment"
            hypervProtectionSource: 
              description: "Specifies details about a HyperV Protection Source\nwhen the environment is set to 'kHyperV'."
              type: "object"
              title: "HyperV Protection Source."
              properties: 
                agentInfo: 
                  description: "Specifies information about the agent running on the HyperV objects."
                  $ref: "#/definitions/AgentInformation"
                backupType: 
                  description: "Specifies the type of backup supported by the VM.\n'kRctBackup', 'kVssBackup'\nSpecifies the type of an HyperV datastore object.\n'kRctBackup' indicates backup is done using RCT/checkpoints.\n'kVssBackup' indicates backup is done using VSS."
                  type: "string"
                  enum: 
                    - "kRctBackup"
                    - "kVssBackup"
                  x-go-name: "BackupType"
                clusterName: 
                  description: "Specifies the cluster name for 'kHostCluster' objects."
                  type: "string"
                  x-go-name: "ClusterName"
                datastoreInfo: 
                  description: "Specifies additional information for 'kDatastore' objects."
                  $ref: "#/definitions/HypervDatastore"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                hostType: 
                  description: "Specifies host OS type for 'kVirtualMachine' objects.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                hypervUuid: 
                  description: "Specifies the UUID for 'kVirtualMachine' HyperV objects."
                  type: "string"
                  x-go-name: "HypervUuid"
                name: 
                  description: "Specifies the name of the HyperV Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of an HyperV Protection Source Object such as\n'kSCVMMServer', 'kStandaloneHost', 'kNetwork', etc.\noverrideDescription: true\nSpecifies the type of an HyperV Protection Source.\n'kSCVMMServer' indicates a collection of root folders clusters.\n'kStandaloneHost' indicates a single Nutanix cluster.\n'kStandaloneCluster' indicates a single Nutanix cluster.\n'kHostGroup' indicates a Nutanix cluster manageed by a Prism Central.\n'kHost' indicates an HyperV host.\n'kHostCluster' indicates a Nutanix cluster manageed by a Prism Central.\n'kVirtualMachine' indicates a Virtual Machine.\n'kNetwork' indicates a Virtual Machine network object.\n'kDatastore' represents a storage container object."
                  type: "string"
                  enum: 
                    - "kSCVMMServer"
                    - "kStandaloneHost"
                    - "kStandaloneCluster"
                    - "kHostGroup"
                    - "kHost"
                    - "kHostCluster"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kDatastore"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Object. This is unique within the HyperV\nenvironment."
                  type: "string"
                  x-go-name: "Uuid"
                vmInfo: 
                  description: "Specifies additional information for 'kVirtualMachine' objects."
                  $ref: "#/definitions/HypervVirtualMachine"
            id: 
              description: "Specifies an id of the Protection Source."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
            kvmProtectionSource: 
              description: "Specifies details about a KVM Protection Source\nwhen the environment is set to 'kKVM'."
              type: "object"
              title: "KVM Protection Source."
              properties: 
                agentError: 
                  description: "Specifies a message when the agent cannot be reached."
                  type: "string"
                  x-go-name: "AgentError"
                agentId: 
                  description: "Specifies the ID of the Agent with which this KVM entity is associated\nwhen the entity represents a Delegate host or KVM host."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AgentId"
                clusterId: 
                  description: "Specifies the cluster ID for 'kCluster' objects."
                  type: "string"
                  x-go-name: "ClusterId"
                datacenterId: 
                  description: "Specifies the ID of the 'kDatacenter' objects."
                  type: "string"
                  x-go-name: "DatacenterId"
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                name: 
                  description: "Specifies the name of the KVM entity."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of KVM Protection Source entities such as\n'kDatacenter', 'kCluster', 'kVirtualMachine', etc.\nSpecifies the type of an KVM source entity.\n'kOVirtManager' indicates the root entity registerd with Cohesity cluster.\n'kStandaloneHost' indicates a host registered with Cohesity cluster.\n'kDatacenter' indicates a KVM datacenter managed by the OVirt manager.\n'kCluster' indicates a KVM cluster managed by the OVirt manager.\n'kHost' indicates a host within the KVM environment.\n'kVirtualMachine' indicates a virtual machine in the KVM enironment.\n'kNetwork' represents a network used by the virtual machine entity.\n'kStorageDomain' represents a storage domain in the KVM environment."
                  type: "string"
                  enum: 
                    - "kOVirtManager"
                    - "kStandaloneHost"
                    - "kDatacenter"
                    - "kCluster"
                    - "kHost"
                    - "kVirtualMachine"
                    - "kNetwork"
                    - "kStorageDomain"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the UUID of the Object. This is unique within the KVM\nenvironment."
                  type: "string"
                  x-go-name: "Uuid"
            name: 
              description: "Specifies a name of the Protection Source."
              type: "string"
              x-go-name: "Name"
            nasProtectionSource: 
              description: "Specifies details about a Generic NAS Protection Source\nwhen the environment is set to 'kGenericNas'."
              type: "object"
              title: "Generic NAS Protection Source."
              properties: 
                description: 
                  description: "Specifies a description about the Protection Source."
                  type: "string"
                  x-go-name: "Description"
                mountPath: 
                  description: "Specifies the mount path of this NAS. For example, for a NFS mount point,\nthis should be in the format of IP or hostname:/foo/bar."
                  type: "string"
                  x-go-name: "MountPath"
                name: 
                  description: "Specifies the name of the NetApp Object."
                  type: "string"
                  x-go-name: "Name"
                protocol: 
                  description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
                  type: "string"
                  enum: 
                    - "kNfs3"
                    - "kCifs1"
                  x-go-name: "Protocol"
                type: 
                  description: "Specifies the type of a Protection Source Object in a generic NAS Source\nsuch as 'kGroup', or 'kHost'.\nSpecifies the kind of NAS mount.\n'kGroup' indicates top level node that holds individual NAS hosts.\n'kHost' indicates a single NAS path that can be mounted."
                  type: "string"
                  enum: 
                    - "kGroup"
                    - "kHost"
                  x-go-name: "Type"
            netappProtectionSource: 
              description: "Specifies details about a NetApp Protection Source\nwhen the environment is set to 'kNetapp'."
              type: "object"
              title: "NetApp Protection Source."
              properties: 
                clusterInfo: 
                  description: "Specifies information about a NetApp cluster and is only valid for a\nNetApp Object of type kCluster."
                  $ref: "#/definitions/NetappClusterInfo"
                isTopLevel: 
                  description: "Specifies if this Object is a top level Object.\nBecause a top level Object can either be a NetApp cluster or a Vserver,\nthis cannot be determined only by type."
                  type: "boolean"
                  x-go-name: "IsTopLevel"
                name: 
                  description: "Specifies the name of the NetApp Object."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed NetApp Object in a NetApp Protection Source\nsuch as 'kCluster', 'kVserver' or 'kVolume'."
                  type: "string"
                  enum: 
                    - "kCluster"
                    - "kVserver"
                    - "kVolume"
                  x-go-name: "Type"
                uuid: 
                  description: "Specifies the globally unique ID of this Object assigned by the\nNetApp server."
                  type: "string"
                  x-go-name: "Uuid"
                volumeInfo: 
                  description: "Specifies information about a NetApp volume and is only valid for a\nNetApp Object of type kVolume."
                  $ref: "#/definitions/NetappVolumeInfo"
                vserverInfo: 
                  description: "Specifies information about a NetApp Vserver and is only valid for a\nNetApp Object of type kVserver."
                  $ref: "#/definitions/NetappVserverInfo"
            parentId: 
              description: "Specifies an id of the parent of the Protection Source."
              type: "integer"
              format: "int64"
              x-go-name: "ParentId"
            physicalProtectionSource: 
              description: "Specifies details about a Physical Protection Source\nwhen the environment is set to 'kPhysical'."
              type: "object"
              title: "Physical Protection Source."
              properties: 
                agents: 
                  description: "Specifiles the agents running on the Physical Protection Source and the\nstatus information."
                  type: "array"
                  title: "Array of Agents on the Physical Protection Source."
                  items: 
                    $ref: "#/definitions/AgentInformation"
                  x-go-name: "Agents"
                hostType: 
                  description: "Specifies the environment type for the host.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                id: 
                  description: "Specifies a unique id of a Physical Protection Source.\nThe id is unique across Cohesity Clusters."
                  type: "object"
                  title: "Unique Global Id."
                  properties: 
                    clusterId: 
                      description: "Specifies the Cohesity Cluster id where the object was created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterId"
                    clusterIncarnationId: 
                      description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterIncarnationId"
                    id: 
                      description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                      type: "integer"
                      format: "int64"
                      x-go-name: "Id"
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed Object in a Physical Protection Source.\n'kHost' indicates a single physical server.\n'kWindowsCluster' indicates a Microsoft Windows cluster."
                  type: "string"
                  enum: 
                    - "kHost"
                    - "kWindowsCluster"
                  x-go-name: "Type"
                volumes: 
                  description: "Specifies the volumes available on the physical host.\nThese fields are populated only for the kPhysicalHost type."
                  type: "array"
                  title: "Array of Physical Volumes."
                  items: 
                    $ref: "#/definitions/PhysicalVolume"
                  x-go-name: "Volumes"
            pureProtectionSource: 
              description: "Specifies details about a Pure Protection Source\nwhen the environment is set to 'kPure'."
              type: "object"
              title: "Pure Protection Source."
              properties: 
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                storageArray: 
                  description: "Specifies a Pure Storage Array information. This is set only when\nthe type is kStorageArray."
                  $ref: "#/definitions/PureStorageArray"
                type: 
                  description: "Specifies the type of managed Object in a pure Protection Source like\na kStorageArray or kVolume.\nExamples of Pure Objects include 'kStorageArray' and 'kVolume'."
                  type: "string"
                  enum: 
                    - "kStorageArray"
                    - "kVolume"
                  x-go-name: "Type"
                volume: 
                  description: "Specifies a Pure Volume information within a storage array.\nThis is set only when the type is kVolume."
                  $ref: "#/definitions/PureVolume"
            sqlProtectionSource: 
              description: "Specifies details about a SQL Protection Source\nwhen the environment is set to 'kSQL'."
              type: "object"
              title: "SQL Protection Source."
              properties: 
                IsAvailableForVssBackup: 
                  description: "Specifies whether the database is marked as available for backup according\nto the SQL Server VSS writer. This may be false if either the state of\nthe databases is not online, or if the VSS writer is not online.\nThis field is set only for type 'kDatabase'."
                  type: "boolean"
                createdTimestamp: 
                  description: "Specifies the time when the database was created. It is displayed in the\ntimezone of the SQL server on which this database is running."
                  type: "string"
                  x-go-name: "CreatedTimestamp"
                databaseName: 
                  description: "Specifies the database name of the SQL Protection Source, if the type\nis database."
                  type: "string"
                  x-go-name: "DatabaseName"
                dbAagEntityId: 
                  description: "Specifies the AAG entity id if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
                  type: "integer"
                  format: "int64"
                  x-go-name: "DbAagEntityId"
                dbAagName: 
                  description: "Specifies the name of the AAG if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
                  type: "string"
                  x-go-name: "DbAagName"
                dbFiles: 
                  description: "Specifies the last known information about the set of database files\non the host. This field is set only for type 'kDatabase'."
                  type: "array"
                  items: 
                    $ref: "#/definitions/DbFileInfo"
                  x-go-name: "DbFiles"
                id: 
                  description: "Specifies an id that identifies an SQL Object."
                  $ref: "#/definitions/SqlSourceId"
                name: 
                  description: "Specifies the instance name of the SQL Protection Source"
                  type: "string"
                  x-go-name: "Name"
                ownerId: 
                  description: "Specifies the id of the container VM for the SQL Protection Source."
                  type: "integer"
                  format: "int64"
                  x-go-name: "OwnerId"
                recoveryModel: 
                  description: "Specifies the Recovery Model for the database in SQL environment.\nOnly meaningful for the 'kDatabase' SQL Protection Source.\nSpecifies the Recovery Model set for the Microsoft SQL Server.\n'kSimpleRecoveryModel' indicates the Simple SQL Recovery Model which\ndoes not utilize log backups.\n'kFullRecoveryModel' indicates the Full SQL Recovery Model which\nrequires log backups and allows recovery to a single point in time.\n'kBulkLoggedRecoveryModel' indicates the Bulk Logged SQL Recovery Model\nwhich requires log backups and allows high-performance bulk copy operations."
                  type: "string"
                  enum: 
                    - "kSimpleRecoveryModel"
                    - "kFullRecoveryModel"
                    - "kBulkLoggedRecoveryModel"
                  x-go-name: "RecoveryModel"
                sqlServerDbState: 
                  description: "The state of the database as returned by SQL Server."
                  type: "integer"
                  format: "int32"
                  x-go-name: "SqlServerDbState"
                type: 
                  description: "Specifies the type of the managed Object in a SQL Protection Source.\nExamples of SQL Objects include 'kInstance' and 'kDatabase'."
                  type: "string"
                  enum: 
                    - "kInstance"
                    - "kDatabase"
                  x-go-name: "Type"
            viewProtectionSource: 
              description: "Specifies details about a View Protection Source\nwhen the environment is set to 'kView'."
              type: "object"
              title: "View Protection Source."
              properties: 
                id: 
                  description: "Specifies a unique id of a Protection Source for a View.\nThe id is unique across Cohesity Clusters."
                  type: "object"
                  title: "Unique Global Id."
                  properties: 
                    clusterId: 
                      description: "Specifies the Cohesity Cluster id where the object was created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterId"
                    clusterIncarnationId: 
                      description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                      type: "integer"
                      format: "int64"
                      x-go-name: "ClusterIncarnationId"
                    id: 
                      description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                      type: "integer"
                      format: "int64"
                      x-go-name: "Id"
                name: 
                  description: "Specifies a human readable name of the Protection Source of a View."
                  type: "string"
                  x-go-name: "Name"
                type: 
                  description: "Specifies the type of managed Object in a View Protection Source\nenvironment.\nExamples of View Objects include 'kViewBox' or 'kView'."
                  type: "string"
                  enum: 
                    - "kViewBox"
                    - "kView"
                  x-go-name: "Type"
            vmWareProtectionSource: 
              description: "Specifies details about a VMware Protection Source\nwhen the environment is set to 'kVMware'."
              type: "object"
              title: "VMware Protection Source."
              properties: 
                agentId: 
                  description: "Specifies the id of the persistent agent."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AgentId"
                agents: 
                  description: "This is set only if the Virtual Machine has persistent agent."
                  type: "array"
                  title: "Specifies the list of agent information on the Virtual Machine."
                  items: 
                    $ref: "#/definitions/AgentInformation"
                  x-go-name: "Agents"
                connectionState: 
                  description: "Specifies the connection state of the Object and are only valid for\nESXi hosts ('kHostSystem') or Virtual Machines ('kVirtualMachine').\nThese enums are equivalent to the connection states documented in\nVMware's reference documentation.\nExamples of Cohesity connection states include 'kConnected',\n'kDisconnected', 'kInacccessible', etc."
                  type: "string"
                  enum: 
                    - "kConnected"
                    - "kDisconnected"
                    - "kInacccessible"
                    - "kInvalid"
                    - "kOrphaned"
                    - "kNotResponding"
                  x-go-name: "ConnectionState"
                datastoreInfo: 
                  description: "Specifies additional information of entities of type 'kDatastore'."
                  $ref: "#/definitions/DatastoreInfo"
                folderType: 
                  description: "Specifies the folder type for the 'kFolder' Object.\n'kVMFolder' indicates folder can hold VMs or vApps.\n'kHostFolder' indicates folder can hold hosts and compute resources.\n'kDatastoreFolder' indicates folder can hold datastores and storage pods.\n'kNetworkFolder' indicates folder can hold networks and switches.\n'kRootFolder' indicates folder can hold datacenters."
                  type: "string"
                  enum: 
                    - "kVMFolder"
                    - "kHostFolder"
                    - "kDatastoreFolder"
                    - "kNetworkFolder"
                    - "kRootFolder"
                  x-go-name: "FolderType"
                hasPersistentAgent: 
                  description: "Set to true if a persistent agent is running on the Virtual Machine.\nThis is populated for entities of type 'kVirtualMachine'."
                  type: "boolean"
                  x-go-name: "HasPersistentAgent"
                hostType: 
                  description: "Specifies the host type for the 'kVirtualMachine' Object.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
                  type: "string"
                  enum: 
                    - "kLinux"
                    - "kWindows"
                  x-go-name: "HostType"
                id: 
                  description: "Specifies the UUID of the VMware Protection Source."
                  $ref: "#/definitions/VMwareObjectId"
                name: 
                  description: "Specifies a human readable name of the Protection Source."
                  type: "string"
                  x-go-name: "Name"
                tagAttributes: 
                  description: "Specifies the optional list of VM Tag attributes associated with this\nObject."
                  type: "array"
                  items: 
                    $ref: "#/definitions/TagAttribute"
                  x-go-name: "TagAttributes"
                toolsRunningStatus: 
                  description: "Specifies the status of VMware Tools for the guest OS on the VM.\nThis is only valid for the 'kVirtualMachine' type.\n'kGuestToolsRunning' means the VMware tools are running on the guest OS.\n'kGuestToolsNotRunning' means the VMware tools are not running on the\nguest OS.\n'kUnknown' means the state of the VMware tools on the guest OS is not\nknown.\n'kGuestToolsExecutingScripts' means the guest OS is currently executing\nscripts using VMware tools."
                  type: "string"
                  enum: 
                    - "kUnknown"
                    - "kGuestToolsExecutingScripts"
                    - "kGuestToolsNotRunning"
                    - "kGuestToolsRunning"
                  x-go-name: "VMwareToolsRunningStatus"
                type: 
                  description: "Specifies the type of managed Object in a VMware Protection Source.\nExamples of VMware Objects include 'kVCenter', 'kFolder', 'kDatacenter',\n'kResourcePool', 'kDatastore', 'kVirtualMachine', etc."
                  type: "string"
                  enum: 
                    - "kVCenter"
                    - "kFolder"
                    - "kDatacenter"
                    - "kComputeResource"
                    - "kClusterComputeResource"
                    - "kResourcePool"
                    - "kDatastore"
                    - "kHostSystem"
                    - "kVirtualMachine"
                    - "kVirtualApp"
                    - "kStandaloneHost"
                    - "kStoragePod"
                    - "kNetwork"
                    - "kDistributedVirtualPortgroup"
                    - "kTagCategory"
                    - "kTag"
                  x-go-name: "Type"
                virtualDisks: 
                  description: "This is populated for entities of type 'kVirtualMachine'."
                  type: "array"
                  title: "Specifies an array of virtual disks that are part of the Virtual Machine."
                  items: 
                    $ref: "#/definitions/VirtualDiskInfo"
                  x-go-name: "VirtualDisks"
      x-go-package: "cohesity/iris/server/data/public"
    RegisteredSourceInfo: 
      description: "Specifies information about a registered Source."
      type: "object"
      title: "Registered Source Info."
      properties: 
        accessInfo: 
          description: "Specifies the parameters required to establish a connection\nwith a particular environment."
          $ref: "#/definitions/ConnectorParams"
        authenticationErrorMessage: 
          description: "Specifies an authentication error message. This indicates the given\ncredentials are rejected and the registration of the source is not\nsuccessful."
          type: "string"
          x-go-name: "AuthenticationErrorMessage"
        authenticationStatus: 
          description: "Specifies the status of the authenticating to the Protection Source\nwhen registering it with Cohesity Cluster. If the status is 'kFinished'\nand there is no error, registration is successful.\nSpecifies the status of the authentication during the registration of a\nProtection Source.\n'kPending' indicates the authentication is in progress.\n'kScheduled' indicates the authentication is scheduled.\n'kFinished' indicates the authentication is completed."
          type: "string"
          enum: 
            - "kPending"
            - "kScheduled"
            - "kFinished"
          x-go-name: "AuthenticationStatus"
        environments: 
          description: "Specifies a list of applications environment that are registered\nwith this Protection Source such as 'kSQL'.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "array"
          items: 
            type: "string"
            enum: 
              - "kVMware"
              - "kSQL"
              - "kView"
              - "kPuppeteer"
              - "kPhysical"
              - "kPure"
              - "kNetapp"
              - "kGenericNas"
              - "kHyperV"
              - "kAcropolis"
              - "kAzure"
          x-go-name: "Environments"
        minimumFreeSpaceGB: 
          description: "Specifies the minimum free space in GiB of the space expected to be\navailable on the datastore where the virtual disks of the VM being backed\nup. If the amount of free space(in GiB) is lower than the value given by\nthis field, backup will be aborted. Note that this field is applicable\nonly to 'kVMware' type of environments."
          type: "integer"
          format: "int64"
          x-go-name: "MinimumFreeSpaceGB"
        nasMountCredentials: 
          description: "Specifies the credentials required to mount directories on the NetApp\nserver if given."
          type: "object"
          title: "NAS Server Credentials."
          properties: 
            domain: 
              description: "Specifies the domain in which this credential is valid."
              type: "string"
              x-go-name: "Domain"
            nasProtocol: 
              description: "Specifies the protocol used by the NAS server.\nSpecifies the protocol used by a NAS server.\n'kNfs3' indicates NFS v3 protocol.\n'kCifs1' indicates CIFS v1.0 protocol."
              type: "string"
              enum: 
                - "kNfs3"
                - "kCifs1"
              x-go-name: "NasProtocol"
            password: 
              description: "Specifies the password for the username to use for mounting the NAS."
              type: "string"
              x-go-name: "Password"
            username: 
              description: "Specifies a username to use for mounting the NAS."
              type: "string"
              x-go-name: "Username"
        password: 
          description: "Specifies password of the username to access the target source."
          type: "string"
          x-go-name: "Password"
        refreshErrorMessage: 
          description: "Specifies a message if there was any error encountered during the last\nrebuild of the Protection Source tree. If there was no error during the\nlast rebuild, this field is reset."
          type: "string"
          x-go-name: "RefreshErrorMessage"
        refreshTimeUsecs: 
          description: "Specifies the Unix epoch time (in microseconds) when the Protection\nSource tree was most recently fetched and built."
          type: "integer"
          format: "int64"
          x-go-name: "RefreshTimeUsecs"
        registrationTimeUsecs: 
          description: "Specifies the Unix epoch time (in microseconds) when the Protection\nSource was registered."
          type: "integer"
          format: "int64"
          x-go-name: "RegistrationTimeUsecs"
        throttlingPolicy: 
          description: "Specifies the throttling policy that should be applied to all datastores\nunder this registered Protection Source."
          $ref: "#/definitions/ThrottlingPolicy"
        throttlingPolicyOverrides: 
          description: "Specifies a list of Throttling Policy for datastores that override the\ncommon throttling policy specified for the registered Protection Source.\nFor datastores not in this list, common policy will still apply."
          type: "array"
          title: "Array of Throttling Policy Overrides for Datastores."
          items: 
            $ref: "#/definitions/ThrottlingPolicyOverride"
          x-go-name: "ThrottlingPolicyOverrides"
        username: 
          description: "Specifies username to access the target source."
          type: "string"
          x-go-name: "Username"
        warningMessages: 
          description: "Though the registration may succeed, warning messages imply the\nhost environment requires some cleanup or fixing."
          type: "array"
          title: "Specifies a list of warnings encountered during registration."
          items: 
            type: "string"
          x-go-name: "WarningMessages"
      x-go-package: "cohesity/iris/server/data/public"
    RemoteCluster: 
      description: "Specifies information about a remote Cluster that has been registered\nfor replication."
      type: "object"
      title: "Remote Cluster."
      properties: 
        allEndpointsReachable: 
          description: "Specifies whether any endpoint (such as a Node) on the remote Cluster\nis reachable from this local Cluster.\nIf true, a service running on the local Cluster can communicate\ndirectly with any of its peers running on the remote Cluster, without\nusing a proxy."
          type: "boolean"
          x-go-name: "AllEndpointsReachable"
        bandwidthLimit: 
          description: "Specifies settings for limiting the data transfer rate between\nthe local and remote Clusters."
          title: "Bandwidth Limit."
          $ref: "#/definitions/BandwidthLimit"
        clearInterfaces: 
          type: "boolean"
          x-go-name: "ClearInterfaces"
        clearVlanId: 
          description: "Specifies whether to clear the vlanId field, and thus stop\nusing only the IPs in the VLAN for communicating with the remote Cluster."
          type: "boolean"
          x-go-name: "ClearVlanId"
        clusterId: 
          description: "Specifies the unique id of the remote Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterId"
        clusterIncarnationId: 
          description: "Specifies the unique incarnation id of the remote Cluster. This\nid is determined dynamically by contacting the remote Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterIncarnationId"
        compressionEnabled: 
          description: "Specifies whether to compress the outbound data when\ntransferring the replication data over the network to the remote Cluster."
          type: "boolean"
          x-go-name: "CompressionEnabled"
        encryptionKey: 
          description: "Specifies the encryption key used for encrypting the replication data\nfrom a local Cluster to a remote Cluster.\nIf a key is not specified, replication traffic encryption is disabled.\nWhen Snapshots are replicated from a local Cluster to a remote Cluster,\nthe encryption key specified on the local Cluster must be the same\nas the key specified on the remote Cluster."
          type: "string"
          x-go-name: "EncryptionKey"
        localIps: 
          description: "Specifies the IP addresses of the interfaces in the local Cluster\nwhich will be used for communicating with the remote Cluster."
          type: "array"
          title: "Array of Local IP Addresses."
          items: 
            type: "string"
          x-go-name: "LocalIps"
        name: 
          description: "Specifies the name of the remote Cluster."
          type: "string"
          x-go-name: "Name"
        networkInterfaceGroup: 
          description: "Specifies the group name of the network interfaces to\nuse for communicating with the remote Cluster."
          type: "string"
          x-go-name: "NetworkInterfaceGroup"
        networkInterfaceIds: 
          description: "Specifies the ids of the network interfaces to use for\ncommunicating with the remote Cluster."
          type: "array"
          title: "Array of Network Interface Ids."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "NetworkInterfaceIds"
        purposeRemoteAccess: 
          description: "Whether the remote cluster will be used for remote access for SPOG."
          type: "boolean"
          x-go-name: "PurposeRemoteAccess"
        purposeReplication: 
          description: "Whether the remote cluster will be used for replication."
          type: "boolean"
          x-go-name: "PurposeReplication"
        remoteAccessCredentials: 
          description: "Optional field for the user credentials to connect to Iris for remote\naccess for SPOG. If this is not specified, then credentials specified\nfor replication set up will be used for remote access for SPOG.\nAllowing a different user credentials to be set up for SPOG permits\nhaving different roles for remote access for SPOG and replication set\nup."
          $ref: "#/definitions/AccessTokenCredential"
        remoteIps: 
          description: "Specifies the IP addresses of the Nodes on the remote Cluster to\nconnect with. These IP addresses can also be VIPS.\nSpecifying hostnames is not supported."
          type: "array"
          title: "Array of Remote Node IP Addresses."
          items: 
            type: "string"
          x-go-name: "RemoteIps"
        userName: 
          description: "Specifies the Cohesity user name used to connect to the\nremote Cluster."
          type: "string"
          x-go-name: "UserName"
        viewBoxPairInfo: 
          description: "Specifies pairings between Storage Domains (View Boxes) on the local Cluster\nwith Storage Domains (View Boxes) on a remote Cluster that are used in\nreplication."
          type: "array"
          title: "Array of Storage Domain (View Box) Pairs."
          items: 
            $ref: "#/definitions/ViewBoxPairInfo"
          x-go-name: "ViewBoxPairInfoList"
        vlanId: 
          description: "Specifies the id of the VLAN to use when communicating with the remote\nCluster."
          type: "integer"
          format: "int32"
          x-go-name: "VlanId"
      x-go-package: "cohesity/iris/server/data/public"
    RemoteHost: 
      description: "Specifies the settings required to connect to a remote host."
      type: "object"
      title: "Remote Host."
      properties: 
        address: 
          description: "Specifies the address (IP, hostname or FQDN) of the remote host\nthat will run the script."
          type: "string"
          x-go-name: "Address"
        type: 
          description: "Specifies the OS type of the remote host that will run the script.\nCurrently only 'kLinux' is supported.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
          type: "string"
          enum: 
            - "kLinux"
            - "kWindows"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    RemoteJobScript: 
      description: "Provides details about the Remote Adapter associated with a\n'kPuppeteer' Protection Job."
      type: "object"
      title: "Remote Adapter."
      properties: 
        fullBackupScript: 
          description: "Specifies the script that should run for the Full (no CBT) backup schedule\nof a Remote Adapter 'kPuppeteer' Job.\nThis field is mandatory if the Policy associated with this Job\nhas a Full (no CBT) backup schedule and this is Remote Adapter\n'kPuppeteer' Job."
          type: "object"
          title: "Full (No CBT) Script."
          properties: 
            scriptParams: 
              description: "Specifies the parameters and values to pass into the remote script.\nFor example if the script expects values for the 'database' and\n'user' parameters, specify the parameters and values using\nthe following string: \"database=myDatabase user=me\"."
              type: "string"
              x-go-name: "ScriptParams"
            scriptPath: 
              description: "Specifies the path to the script on the remote host."
              type: "string"
              x-go-name: "ScriptPath"
        incrementalBackupScript: 
          description: "Specifies the script that should run for the CBT-based backup\nschedule of a Remote Adapter 'kPuppeteer' Job. A CBT-based backup\nschedule is utilizing Change Block Tracking when capturing Snapshots.\nThis field is mandatory if the Policy associated with this Job\nhas a CBT-based backup schedule and this is Remote Adapter\n'kPuppeteer' Job."
          type: "object"
          title: "CBT-based Script."
          properties: 
            scriptParams: 
              description: "Specifies the parameters and values to pass into the remote script.\nFor example if the script expects values for the 'database' and\n'user' parameters, specify the parameters and values using\nthe following string: \"database=myDatabase user=me\"."
              type: "string"
              x-go-name: "ScriptParams"
            scriptPath: 
              description: "Specifies the path to the script on the remote host."
              type: "string"
              x-go-name: "ScriptPath"
        logBackupScript: 
          description: "Specifies the script that should run for the Log backup schedule\nof a Remote Adapter 'kPuppeteer' Job.\nThis field is mandatory if the Policy associated with this Job\nhas a Log backup schedule and this is Remote Adapter\n'kPuppeteer' Job."
          type: "object"
          title: "Log Script."
          properties: 
            scriptParams: 
              description: "Specifies the parameters and values to pass into the remote script.\nFor example if the script expects values for the 'database' and\n'user' parameters, specify the parameters and values using\nthe following string: \"database=myDatabase user=me\"."
              type: "string"
              x-go-name: "ScriptParams"
            scriptPath: 
              description: "Specifies the path to the script on the remote host."
              type: "string"
              x-go-name: "ScriptPath"
        remoteHost: 
          description: "Specifies the remote host where the remote scripts are executed.\nThis field must be set for Remote Adapter Jobs."
          type: "object"
          title: "Remote Host."
          properties: 
            address: 
              description: "Specifies the address (IP, hostname or FQDN) of the remote host\nthat will run the script."
              type: "string"
              x-go-name: "Address"
            type: 
              description: "Specifies the OS type of the remote host that will run the script.\nCurrently only 'kLinux' is supported.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
              type: "string"
              enum: 
                - "kLinux"
                - "kWindows"
              x-go-name: "Type"
        username: 
          description: "Specifies the username that will be used to login to the remote host.\nFor host type 'kLinux', it is expected that user has setup the\npassword-less access. So only username field is required."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    RemoteProtectionJobInformation: 
      description: "Specifies details about the original Protection Job and its\nSnapshots, that were archived to a remote Vault."
      type: "object"
      title: "Remote Protection Job Information."
      properties: 
        clusterName: 
          description: "Specifies the name of the original Cluster that archived the data to the\nVault."
          type: "string"
          x-go-name: "ClusterName"
        environment: 
          description: "Specifies the environment type (such as kVMware or kSQL)\nof the original archived Protection Job.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "string"
          enum: 
            - "kVMware"
            - "kSQL"
            - "kView"
            - "kPuppeteer"
            - "kPhysical"
            - "kPure"
            - "kNetapp"
            - "kGenericNas"
            - "kHyperV"
            - "kAcropolis"
            - "kAzure"
          x-go-name: "Environment"
        jobName: 
          description: "Specifies the name of the Protection Job on the original Cluster."
          type: "string"
          x-go-name: "JobName"
        jobUid: 
          description: "Specifies the globally unique id of the original Protection Job\nthat archived the data to the Vault. This id is assigned by the\noriginal Cluster that archived the data."
          type: "object"
          title: "Protection Job Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
      x-go-package: "cohesity/iris/server/data/public"
    RemoteProtectionJobRunInformation: 
      description: "Specifies details about a Protection Job Runs (Snapshots)."
      type: "object"
      title: "Remote Protection Job Run Information."
      properties: 
        clusterName: 
          description: "Specifies the name of the original Cluster that archived the data to the\nVault."
          type: "string"
          x-go-name: "ClusterName"
        environment: 
          description: "Specifies the environment type (such as kVMware or kSQL)\nof the original archived Protection Job.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "string"
          enum: 
            - "kVMware"
            - "kSQL"
            - "kView"
            - "kPuppeteer"
            - "kPhysical"
            - "kPure"
            - "kNetapp"
            - "kGenericNas"
            - "kHyperV"
            - "kAcropolis"
            - "kAzure"
          x-go-name: "Environment"
        jobName: 
          description: "Specifies the name of the Protection Job on the original Cluster."
          type: "string"
          x-go-name: "JobName"
        jobUid: 
          description: "Specifies the globally unique id of the original Protection Job\nthat archived the data to the Vault. This id is assigned by the\noriginal Cluster that archived the data."
          type: "object"
          title: "Protection Job Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        protectionJobRuns: 
          description: "Specifies the list of Protection Job Runs (Snapshot) details for\na Protection Job archived to a Vault."
          type: "array"
          title: "Array of Protection Job Run Details."
          items: 
            $ref: "#/definitions/RemoteProtectionJobRunInstance"
          x-go-name: "ProtectionJobRuns"
      x-go-package: "cohesity/iris/server/data/public"
    RemoteProtectionJobRunInstance: 
      description: "Specifies details about one Job Run (Snapshot) archived to a remote Vault\nthat was captured by a Protection Job."
      type: "object"
      title: "Remote Protection Job Run Instance."
      properties: 
        archiveTaskUid: 
          description: "Specifies the globally unique id of the archival task that archived\nthe Snapshot to the Vault."
          type: "object"
          title: "Archive Task Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        archiveVersion: 
          description: "Specifies the version of the archive."
          type: "integer"
          format: "int32"
          x-go-name: "ArchiveVersion"
        expiryTimeUsecs: 
          description: "Specifies the time when the archive expires.\nThis time is recorded as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "ExpiryTimeUsecs"
        indexSizeBytes: 
          description: "Specifies the size of the index for the archive."
          type: "integer"
          format: "int64"
          x-go-name: "IndexSizeBytes"
        jobRunId: 
          description: "Specifies the instance id of the Job Run task capturing the Snapshot."
          type: "integer"
          format: "int64"
          x-go-name: "JobRunId"
        metadataComplete: 
          description: "Specifies whether a full set of metadata is available now."
          type: "boolean"
          x-go-name: "MetadataComplete"
        snapshotTimeUsecs: 
          description: "Specify the time the Snapshot was captured as a Unix epoch Timestamp (in\nmicroseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "SnapshotTimeUsecs"
      x-go-package: "cohesity/iris/server/data/public"
    RemoteRestoreIndexingStatus: 
      description: "Specifies the status of an indexing task."
      type: "object"
      title: "Status of Indexing Task."
      properties: 
        endTimeUsecs: 
          description: "Specifies the end time of the time range that is being indexed.\nThe indexing task is creating an index of the Job Runs that occurred\nbetween the startTimeUsecs and this endTimeUsecs.\nThis field is recorded as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "EndTimeUsecs"
        error: 
          description: "Specifies the error message if the indexing Job/task fails."
          type: "string"
          x-go-name: "Error"
        indexingTaskEndTimeUsecs: 
          description: "Specifies when the indexing task completed. This time is recorded\nas a Unix epoch Timestamp (in microseconds).\nThis field is not set if the indexing task is still in progress."
          type: "integer"
          format: "int64"
          x-go-name: "IndexingTaskEndTimeUsecs"
        indexingTaskStartTimeUsecs: 
          description: "Specifies when the indexing task started. This time is recorded\nas a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "IndexingTaskStartTimeUsecs"
        indexingTaskStatus: 
          description: "Specifies the status of the indexing Job/task.\n'kJobRunning' indicates that the Job/task is currently running.\n'kJobFinished' indicates that the Job/task completed and finished.\n'kJobFailed' indicates that the Job/task failed and did not complete.\n'kJobCanceled' indicates that the Job/task was canceled.\n'kJobPaused' indicates the Job/task is paused."
          type: "string"
          enum: 
            - "kJobRunning"
            - "kJobFinished"
            - "kJobFailed"
            - "kJobCanceled"
            - "kJobPaused"
          x-go-name: "IndexingTaskStatus"
        indexingTaskUid: 
          description: "Specifies the unique id of the indexing task assigned by this Cluster."
          type: "object"
          title: "Indexing Task Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        latestExpiryTimeUsecs: 
          description: "For all the Snapshots retrieved by this Job, specifies the latest time\nwhen a Snapshot expires."
          type: "integer"
          format: "int64"
          x-go-name: "LatestExpiryTimeUsecs"
        progressMonitorTask: 
          description: "Specifies the path to progress monitor task to track the progress\nof building the index."
          type: "string"
          x-go-name: "ProgressMonitorTask"
        startTimeUsecs: 
          description: "Specifies the start time of the time range that is being indexed.\nThe indexing task is creating an index of the Job Runs that occurred\nbetween this startTimeUsecs and the endTimeUsecs.\nThis field is recorded as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "StartTimeUsecs"
      x-go-package: "cohesity/iris/server/data/public"
    RemoteRestoreSnapshotStatus: 
      description: "Specifies the status of a restore Snapshot task."
      type: "object"
      title: "Status of Restore Snapshot Task."
      properties: 
        archiveTaskUid: 
          description: "Specifies the globally unique id of the archival task that archived\nthe Snapshots to the remote Vault."
          type: "object"
          title: "Archive Task Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        error: 
          description: "Specifies the error message if the indexing task fails."
          type: "string"
          x-go-name: "Error"
        expiryTimeUsecs: 
          description: "Specifies the time when the Snapshot expires on the remote Vault.\nThis field is recorded as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "ExpiryTimeUsecs"
        jobRunId: 
          description: "Specifies the id of the Job Run that originally captured the Snapshot."
          type: "integer"
          format: "int64"
          x-go-name: "JobRunId"
        progressMonitorTask: 
          description: "Specifies the path to the progress monitor task that tracks the progress\nof building the index."
          type: "string"
          x-go-name: "ProgressMonitorTask"
        snapshotTaskStatus: 
          description: "Specifies the status of the indexing task.\n'kJobRunning' indicates that the Job/task is currently running.\n'kJobFinished' indicates that the Job/task completed and finished.\n'kJobFailed' indicates that the Job/task failed and did not complete.\n'kJobCanceled' indicates that the Job/task was canceled.\n'kJobPaused' indicates the Job/task is paused."
          type: "string"
          enum: 
            - "kJobRunning"
            - "kJobFinished"
            - "kJobFailed"
            - "kJobCanceled"
            - "kJobPaused"
          x-go-name: "SnapshotTaskStatus"
        snapshotTaskUid: 
          description: "Specifies the globally unique id of the task capturing the Snapshot."
          type: "object"
          title: "Snapshot Task Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        snapshotTimeUsecs: 
          description: "Specify the time the Snapshot was captured.\nThis time is recorded as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "SnapshotTimeUsecs"
      x-go-package: "cohesity/iris/server/data/public"
    RemoteVaultRestoreTaskStatus: 
      description: "Specifies the status of a remote Vault restore task."
      type: "object"
      title: "Remote Vault Restore Task Status."
      properties: 
        currentIndexingStatus: 
          description: "Specifies the status of an indexing task that builds an index from\nthe Protection Job metadata retrieved from the remote Vault.\nThe index contains information about Job Runs (Snapshots)\nfor a Protection Job and is required to restore Snapshots to this\nlocal Cluster."
          type: "object"
          title: "Status of Indexing Restore Task."
          properties: 
            endTimeUsecs: 
              description: "Specifies the end time of the time range that is being indexed.\nThe indexing task is creating an index of the Job Runs that occurred\nbetween the startTimeUsecs and this endTimeUsecs.\nThis field is recorded as a Unix epoch Timestamp (in microseconds)."
              type: "integer"
              format: "int64"
              x-go-name: "EndTimeUsecs"
            error: 
              description: "Specifies the error message if the indexing Job/task fails."
              type: "string"
              x-go-name: "Error"
            indexingTaskEndTimeUsecs: 
              description: "Specifies when the indexing task completed. This time is recorded\nas a Unix epoch Timestamp (in microseconds).\nThis field is not set if the indexing task is still in progress."
              type: "integer"
              format: "int64"
              x-go-name: "IndexingTaskEndTimeUsecs"
            indexingTaskStartTimeUsecs: 
              description: "Specifies when the indexing task started. This time is recorded\nas a Unix epoch Timestamp (in microseconds)."
              type: "integer"
              format: "int64"
              x-go-name: "IndexingTaskStartTimeUsecs"
            indexingTaskStatus: 
              description: "Specifies the status of the indexing Job/task.\n'kJobRunning' indicates that the Job/task is currently running.\n'kJobFinished' indicates that the Job/task completed and finished.\n'kJobFailed' indicates that the Job/task failed and did not complete.\n'kJobCanceled' indicates that the Job/task was canceled.\n'kJobPaused' indicates the Job/task is paused."
              type: "string"
              enum: 
                - "kJobRunning"
                - "kJobFinished"
                - "kJobFailed"
                - "kJobCanceled"
                - "kJobPaused"
              x-go-name: "IndexingTaskStatus"
            indexingTaskUid: 
              description: "Specifies the unique id of the indexing task assigned by this Cluster."
              type: "object"
              title: "Indexing Task Uid."
              properties: 
                clusterId: 
                  description: "Specifies the Cohesity Cluster id where the object was created."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ClusterId"
                clusterIncarnationId: 
                  description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ClusterIncarnationId"
                id: 
                  description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                  type: "integer"
                  format: "int64"
                  x-go-name: "Id"
            latestExpiryTimeUsecs: 
              description: "For all the Snapshots retrieved by this Job, specifies the latest time\nwhen a Snapshot expires."
              type: "integer"
              format: "int64"
              x-go-name: "LatestExpiryTimeUsecs"
            progressMonitorTask: 
              description: "Specifies the path to progress monitor task to track the progress\nof building the index."
              type: "string"
              x-go-name: "ProgressMonitorTask"
            startTimeUsecs: 
              description: "Specifies the start time of the time range that is being indexed.\nThe indexing task is creating an index of the Job Runs that occurred\nbetween this startTimeUsecs and the endTimeUsecs.\nThis field is recorded as a Unix epoch Timestamp (in microseconds)."
              type: "integer"
              format: "int64"
              x-go-name: "StartTimeUsecs"
        currentSnapshotStatus: 
          description: "Specifies the status of the Snapshot restore task.\nThe Snapshot restore task restores the specified archived Snapshots from\na remote Vault to this Cluster."
          type: "object"
          title: "Status of Snapshot Restore Task."
          properties: 
            archiveTaskUid: 
              description: "Specifies the globally unique id of the archival task that archived\nthe Snapshots to the remote Vault."
              type: "object"
              title: "Archive Task Uid."
              properties: 
                clusterId: 
                  description: "Specifies the Cohesity Cluster id where the object was created."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ClusterId"
                clusterIncarnationId: 
                  description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ClusterIncarnationId"
                id: 
                  description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                  type: "integer"
                  format: "int64"
                  x-go-name: "Id"
            error: 
              description: "Specifies the error message if the indexing task fails."
              type: "string"
              x-go-name: "Error"
            expiryTimeUsecs: 
              description: "Specifies the time when the Snapshot expires on the remote Vault.\nThis field is recorded as a Unix epoch Timestamp (in microseconds)."
              type: "integer"
              format: "int64"
              x-go-name: "ExpiryTimeUsecs"
            jobRunId: 
              description: "Specifies the id of the Job Run that originally captured the Snapshot."
              type: "integer"
              format: "int64"
              x-go-name: "JobRunId"
            progressMonitorTask: 
              description: "Specifies the path to the progress monitor task that tracks the progress\nof building the index."
              type: "string"
              x-go-name: "ProgressMonitorTask"
            snapshotTaskStatus: 
              description: "Specifies the status of the indexing task.\n'kJobRunning' indicates that the Job/task is currently running.\n'kJobFinished' indicates that the Job/task completed and finished.\n'kJobFailed' indicates that the Job/task failed and did not complete.\n'kJobCanceled' indicates that the Job/task was canceled.\n'kJobPaused' indicates the Job/task is paused."
              type: "string"
              enum: 
                - "kJobRunning"
                - "kJobFinished"
                - "kJobFailed"
                - "kJobCanceled"
                - "kJobPaused"
              x-go-name: "SnapshotTaskStatus"
            snapshotTaskUid: 
              description: "Specifies the globally unique id of the task capturing the Snapshot."
              type: "object"
              title: "Snapshot Task Uid."
              properties: 
                clusterId: 
                  description: "Specifies the Cohesity Cluster id where the object was created."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ClusterId"
                clusterIncarnationId: 
                  description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ClusterIncarnationId"
                id: 
                  description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                  type: "integer"
                  format: "int64"
                  x-go-name: "Id"
            snapshotTimeUsecs: 
              description: "Specify the time the Snapshot was captured.\nThis time is recorded as a Unix epoch Timestamp (in microseconds)."
              type: "integer"
              format: "int64"
              x-go-name: "SnapshotTimeUsecs"
        localProtectionJobUid: 
          description: "Specifies the globally unique id of the new inactive Protection Job\ncreated on the local Cluster as part of the restoration of archived\ndata."
          type: "object"
          title: "Local Protection Job Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        parentJobUid: 
          description: "Specifies the unique id of the parent Job/task that spawned the\nindexing and Snapshot restore tasks."
          type: "object"
          title: "Parent Job Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        remoteProtectionJobInformation: 
          description: "Specifies the details about the original Protection Job that archived data\nto the remote Vault (External Target)."
          title: "Remote Protection Job Information."
          $ref: "#/definitions/RemoteProtectionJobInformation"
        searchJobUid: 
          description: "Specifies the unique id of the search Job that searched the remote Vault."
          type: "object"
          title: "Search Job Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
      x-go-package: "cohesity/iris/server/data/public"
    RemoteVaultSearchJobInformation: 
      description: "Specifies information about a search of a remote Vault."
      type: "object"
      title: "Remote Vault Search Information."
      properties: 
        clusterCount: 
          description: "Specifies number of Clusters that have archived to the remote Vault\nand match the search criteria for this job, up to this point\nin the search.\nIf the search is complete, the total number of Clusters that have\narchived to the remote Vault and that match the search criteria\nfor this search Job, are reported.\nIf the search is not complete, a partial number is reported."
          type: "integer"
          format: "int32"
          x-go-name: "ClusterCount"
        endTimeUsecs: 
          description: "Specifies the end time of the search as a Unix epoch\nTimestamp (in microseconds) if the search Job has completed."
          type: "integer"
          format: "int64"
          x-go-name: "EndTimeUsecs"
        error: 
          description: "Specifies the error message reported when a search fails."
          type: "string"
          x-go-name: "Error"
        jobCount: 
          description: "Specifies number of Protection Jobs that have archived to the remote Vault\nand match the search criteria for this search Job, up to this point\nin the search.\nIf the search is complete, the total number of Protection Jobs that have\narchived to the remote Vault and that match the search criteria\nfor this search Job, are reported.\nIf the search is not complete, a partial number is reported."
          type: "integer"
          format: "int32"
          x-go-name: "JobCount"
        name: 
          description: "Specifies the name of the search Job."
          type: "string"
          x-go-name: "Name"
        searchJobStatus: 
          description: "Specifies the status of the search.\n'kJobRunning' indicates that the Job/task is currently running.\n'kJobFinished' indicates that the Job/task completed and finished.\n'kJobFailed' indicates that the Job/task failed and did not complete.\n'kJobCanceled' indicates that the Job/task was canceled.\n'kJobPaused' indicates the Job/task is paused."
          type: "string"
          enum: 
            - "kJobRunning"
            - "kJobFinished"
            - "kJobFailed"
            - "kJobCanceled"
            - "kJobPaused"
          x-go-name: "SearchJobStatus"
        searchJobUid: 
          description: "Specifies the unique id assigned to the search Job by the Cluster."
          type: "object"
          title: "Search Job Uid."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        startTimeUsecs: 
          description: "Specifies the start time of the search as a Unix epoch\nTimestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "StartTimeUsecs"
        vaultId: 
          description: "Specifies the id of the remote Vault (External Target) that was searched."
          type: "integer"
          format: "int64"
          x-go-name: "VaultId"
        vaultName: 
          description: "Specifies the name of the remote Vault (External Target) that was searched."
          type: "string"
          x-go-name: "VaultName"
      x-go-package: "cohesity/iris/server/data/public"
    RemoteVaultSearchJobResults: 
      description: "Specifies detailed information about Job Runs of Protection Jobs found\nby a search Job when searching a remote Vault for archived data."
      type: "object"
      title: "Remote Vault Search Job Result."
      properties: 
        clusterCount: 
          description: "Specifies number of Clusters that have archived to the remote Vault\nthat match the criteria specified in the search Job,\nup to this point in the search.\nIf the search is complete, the total number of Clusters that have\narchived to the remote Vault and that match the search criteria\nfor the search Job, are reported.\nIf the search was not complete, a partial number is reported."
          type: "integer"
          format: "int32"
          x-go-name: "ClusterCount"
        clusterMatchString: 
          description: "Specifies the value of the clusterMatchSting if it was set in the\noriginal search Job."
          type: "string"
          x-go-name: "ClusterMatchString"
        cookie: 
          description: "Specifies an opaque string to pass to the next request to get the\nnext set of search results. This is provided to support pagination.\nIf null, this is the last set of search results."
          type: "string"
          x-go-name: "Cookie"
        endTimeUsecs: 
          description: "Specifies the value of endTimeUsecs if it was set in the original\nsearch Job. End time is recorded as a Unix epoch Timestamp\n(in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "EndTimeUsecs"
        error: 
          description: "Specifies the error message if the search fails."
          type: "string"
          x-go-name: "Error"
        jobCount: 
          description: "Specifies number of Protection Jobs that have archived to the remote Vault\nthat match the criteria specified in the search Job.\nIf the search is complete, the total number of Protection Jobs that have\narchived to the remote Vault and match the search criteria\nfor the search Job, are reported.\nIf the search is not complete, a partial number is reported."
          type: "integer"
          format: "int32"
          x-go-name: "JobCount"
        jobMatchString: 
          description: "Specifies the value of the jobMatchSting if it was set in the\noriginal search Job."
          type: "string"
          x-go-name: "JobMatchString"
        protectionJobs: 
          description: "Specifies a list of Protection Jobs that have archived data to a\nremote Vault and that also match the filter criteria."
          type: "array"
          title: "Array of Protection Jobs."
          items: 
            $ref: "#/definitions/RemoteProtectionJobRunInformation"
          x-go-name: "ProtectionJobs"
        searchJobStatus: 
          description: "Specifies the status of the search Job.\n'kJobRunning' indicates that the Job/task is currently running.\n'kJobFinished' indicates that the Job/task completed and finished.\n'kJobFailed' indicates that the Job/task failed and did not complete.\n'kJobCanceled' indicates that the Job/task was canceled.\n'kJobPaused' indicates the Job/task is paused."
          type: "string"
          enum: 
            - "kJobRunning"
            - "kJobFinished"
            - "kJobFailed"
            - "kJobCanceled"
            - "kJobPaused"
          x-go-name: "SearchJobStatus"
        searchJobUid: 
          description: "Specifies the unique id of the search Job assigned by the Cluster."
          type: "object"
          title: "Search Job Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        startTimeUsecs: 
          description: "Specifies the value of startTimeUsecs if it was set in the original\nsearch Job. Start time is recorded as a Unix epoch Timestamp\n(in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "StartTimeUsecs"
        vaultId: 
          description: "Specifies the id of the remote Vault that was searched."
          type: "integer"
          format: "int64"
          x-go-name: "VaultId"
        vaultName: 
          description: "Specifies the name of the remote Vault that was searched."
          type: "string"
          x-go-name: "VaultName"
      x-go-package: "cohesity/iris/server/data/public"
    RenameViewParam: 
      type: "object"
      title: "Rename View Request."
      required: 
        - "newViewName"
      properties: 
        newViewName: 
          description: "Specifies the new name of the View."
          type: "string"
          x-go-name: "NewViewName"
      x-go-package: "cohesity/iris/server/data/public"
    ReplicationEncryptionKeyReponse: 
      description: "Specifies the encryption key that is used for encrypting replication data\nfrom this Cluster to a remote Cluster."
      type: "object"
      title: "Replication Encryption Key."
      properties: 
        encryptionKey: 
          description: "Specifies a replication encryption key."
          type: "string"
          x-go-name: "EncryptionKey"
      x-go-package: "cohesity/iris/server/data/public"
    ReplicationTarget: 
      description: "Specifies settings about the Remote Cohesity Cluster where Snapshots\nare copied to."
      type: "object"
      title: "Replication Target."
      properties: 
        clusterId: 
          description: "Specifies the id of the Remote Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterId"
        clusterName: 
          description: "Specifies the name of the Remote Cluster."
          type: "string"
          x-go-name: "ClusterName"
      x-go-package: "cohesity/iris/server/data/public"
    RequestError: 
      description: "Details about the Error."
      type: "object"
      title: "Error"
      properties: 
        errorCode: 
          description: "Operation response error code."
          type: "integer"
          format: "int64"
          x-go-name: "ErrorCode"
        message: 
          description: "Description of the error."
          type: "string"
          x-go-name: "Message"
      x-go-package: "cohesity/iris/server/data/public"
    ResetS3SecretKeyParameters: 
      description: "Specifies the parameters required to reset the S3 secret access key for\nthe specified Cohesity user."
      type: "object"
      title: "Reset S3 Secret Access Key."
      properties: 
        domain: 
          description: "Specifies the fully qualified domain name (FQDN) of an Active Directory\nor LOCAL for the default LOCAL domain on the Cohesity Cluster.\nIf not specified, it is assumed to be LOCAL."
          type: "string"
          x-go-name: "Domain"
        username: 
          description: "Specifies the Cohesity user."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    RestoreCountByObjectType: 
      type: "object"
      title: "Number of restore operations by object type."
      properties: 
        objectCount: 
          description: "Specifies the number of restores of the object type."
          type: "integer"
          format: "int32"
          x-go-name: "Count"
        objectType: 
          description: "Specifies the type of the restored object."
          type: "string"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    RestoreFilesTaskRequest: 
      description: "Specifies information about a Restore Task that recovers files and\nfolders."
      type: "object"
      title: "Restore Task."
      properties: 
        continueOnError: 
          description: "Specifies if the Restore Task should continue even if the copy operation\nof some files and folders fails. If true, the Cohesity Cluster\nignores intermittent errors and recovers as many files and folders\nas possible.\nIf false, the Restore Task stops recovering when a copy operation fails."
          type: "boolean"
          x-go-name: "ContinueOnError"
        filenames: 
          description: "Specifies the files and folders to recover from the snapshot."
          type: "array"
          title: "Array of Files or Folders."
          items: 
            type: "string"
          x-go-name: "Filenames"
        name: 
          description: "Specifies the name of the Restore Task. This field must be set and\nmust be a unique name."
          type: "string"
          x-go-name: "Name"
        newBaseDirectory: 
          description: "Specifies an optional root folder where to recover the selected\nfiles and folders.\nBy default, files and folders are restored to their original path."
          type: "string"
          x-go-name: "NewBaseDirectory"
        overwrite: 
          description: "If true, any existing files and folders on the operating system\nare overwritten by the recovered files or folders. This is the default.\nIf false, existing files and folders are not overwritten."
          type: "boolean"
          x-go-name: "Overwrite"
        password: 
          description: "Specifies password of the username to access the target source."
          type: "string"
          x-go-name: "Password"
        preserveAttributes: 
          description: "If true, the Restore Tasks preserves the original file and\nfolder attributes. This is the default."
          type: "boolean"
          x-go-name: "PreserveAttributes"
        sourceObjectInfo: 
          description: "Specifies information about the source object (such as a VM)\nthat contains the files and folders to recover.\nIn addition, it contains information about the Protection Job and Job\nRun that captured the snapshot to recover from.\nTo specify a particular snapshot, you must specify a\njobRunId and a startTimeUsecs.\nIf jobRunId and startTimeUsecs are not specified,\nthe last Job Run of the specified Job is used."
          type: "object"
          title: "Restore Object."
          properties: 
            archivalTarget: 
              description: "Specifies settings about the Archival Target (such as Tape or AWS).\nThis field must be set if the object\nis being recovered or cloned from an archive or if files\nor folders are being restored from an archive."
              type: "object"
              title: "Archival Target."
              properties: 
                vaultId: 
                  description: "Specifies the id of Archival Vault assigned by the Cohesity Cluster."
                  type: "integer"
                  format: "int64"
                  x-go-name: "VaultId"
                vaultName: 
                  description: "Name of the Archival Vault."
                  type: "string"
                  x-go-name: "VaultName"
                vaultType: 
                  description: "Specifies the type of the Archival External Target such as 'kCloud' or\n'kTape'."
                  type: "string"
                  enum: 
                    - "kCloud"
                    - "kTape"
                  x-go-name: "VaultType"
            jobId: 
              description: "Protection Job Id.\n\nSpecifies id of the Protection Job that backed up the objects\nto be restored."
              type: "integer"
              format: "int64"
              x-go-name: "JobId"
            jobRunId: 
              description: "Specifies the id of the Job Run that captured the snapshot."
              type: "integer"
              format: "int64"
              x-go-name: "JobRunId"
            jobUid: 
              description: "Specifies the universal id of the Protection Job that backed up\nthe objects to recover or clone or the objects that contain the\nfiles or folders to recover."
              type: "object"
              title: "Universal Id."
              properties: 
                clusterId: 
                  description: "Specifies the Cohesity Cluster id where the object was created."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ClusterId"
                clusterIncarnationId: 
                  description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
                  type: "integer"
                  format: "int64"
                  x-go-name: "ClusterIncarnationId"
                id: 
                  description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
                  type: "integer"
                  format: "int64"
                  x-go-name: "Id"
            protectionSourceId: 
              description: "Specifies the id of the leaf object to recover, clone or recover\nfiles/folders from."
              type: "integer"
              format: "int64"
              x-go-name: "ProtectionSourceId"
            startedTimeUsecs: 
              description: "Specifies the time when the Job Run starts capturing a snapshot.\nSpecified as a Unix epoch Timestamp (in microseconds)."
              type: "integer"
              format: "int64"
              x-go-name: "StartedTimeUsecs"
        targetHostType: 
          description: "Specifies the target host types to be restored.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
          type: "string"
          enum: 
            - "kLinux"
            - "kWindows"
          x-go-name: "TargetHostType"
        targetParentSourceId: 
          description: "Specifies the registered source (such as a vCenter Server)\nthat contains the target protection source (such as a VM)\nwhere the files and folders are recovered to.\nThis field is not required for a Physical Server."
          type: "integer"
          format: "int64"
          x-go-name: "TargetParentSourceId"
        targetSourceId: 
          description: "Specifies the id of the target protection source (such as a VM)\nwhere the files and folders are recovered to."
          type: "integer"
          format: "int64"
          x-go-name: "TargetSourceId"
        username: 
          description: "Specifies username to access the target source."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    RestoreObject: 
      description: "Specifies an object to recover or clone or an object to restore files\nand folders from.\nA VM object can be recovered or cloned. A View object can be cloned.\nTo specify a particular snapshot, you must specify a jobRunId and\na startTimeUsecs.\nIf jobRunId and startTimeUsecs are not specified, the last Job Run of the\nspecified Job is used."
      type: "object"
      title: "Restore Object."
      properties: 
        archivalTarget: 
          description: "Specifies settings about the Archival Target (such as Tape or AWS).\nThis field must be set if the object\nis being recovered or cloned from an archive or if files\nor folders are being restored from an archive."
          type: "object"
          title: "Archival Target."
          properties: 
            vaultId: 
              description: "Specifies the id of Archival Vault assigned by the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "VaultId"
            vaultName: 
              description: "Name of the Archival Vault."
              type: "string"
              x-go-name: "VaultName"
            vaultType: 
              description: "Specifies the type of the Archival External Target such as 'kCloud' or\n'kTape'."
              type: "string"
              enum: 
                - "kCloud"
                - "kTape"
              x-go-name: "VaultType"
        jobId: 
          description: "Protection Job Id.\n\nSpecifies id of the Protection Job that backed up the objects\nto be restored."
          type: "integer"
          format: "int64"
          x-go-name: "JobId"
        jobRunId: 
          description: "Specifies the id of the Job Run that captured the snapshot."
          type: "integer"
          format: "int64"
          x-go-name: "JobRunId"
        jobUid: 
          description: "Specifies the universal id of the Protection Job that backed up\nthe objects to recover or clone or the objects that contain the\nfiles or folders to recover."
          type: "object"
          title: "Universal Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        protectionSourceId: 
          description: "Specifies the id of the leaf object to recover, clone or recover\nfiles/folders from."
          type: "integer"
          format: "int64"
          x-go-name: "ProtectionSourceId"
        startedTimeUsecs: 
          description: "Specifies the time when the Job Run starts capturing a snapshot.\nSpecified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "StartedTimeUsecs"
      x-go-package: "cohesity/iris/server/data/public"
    RestoreObjectState: 
      description: "Specifies the state of an individual object in a Restore Task."
      type: "object"
      title: "Restore Object State."
      properties: 
        error: 
          description: "Specifies if an error occurred during the restore operation."
          $ref: "#/definitions/RequestError"
        objectStatus: 
          description: "Specifies the status of an object during a Restore Task.\n'kFilesCloned' indicates that the cloning has completed.\n'kFetchedEntityInfo' indicates that information about the object was\nfetched from the primary source.\n'kVMCreated' indicates that the new VM was created.\n'kRelocationStarted' indicates that restoring to a different\nresource pool has started.\n'kFinished' indicates that the Restore Task has finished.\nWhether it was successful or not is indicated by the error code that\nthat is stored with the Restore Task.\n'kAborted' indicates that the Restore Task was aborted before\ntrying to restore this object. This can happen if the\nRestore Task encounters a global error.\nFor example during a 'kCloneVMs' Restore Task, the datastore\ncould not be mounted. The entire Restore Task is aborted\nbefore trying to create VMs on the primary source."
          type: "string"
          enum: 
            - "kFilesCloned"
            - "kFetchedEntityInfo"
            - "kVMCreated"
            - "kRelocationStarted"
            - "kFinished"
            - "kAborted"
          x-go-name: "ObjectStatus"
        resourcePoolId: 
          description: "Specifies the id of the Resource Pool that the restored\nobject is attached to.\nFor a 'kRecoverVMs' Restore Task, an object can be recovered\nback to its original resource pool. This means while recovering a\nset of objects, this field can reference different resource pools.\nFor a 'kCloneVMs' Restore Task, all objects are attached to the\nsame resource pool. However, this field will still be\npopulated.\nNOTE: This field may not be populated if the restore of the object\nfails."
          type: "integer"
          format: "int64"
          x-go-name: "ResourcePoolId"
        restoredObjectId: 
          description: "Specifies the Id of the recovered or cloned object.\nNOTE: For a Restore Task that is recovering or cloning an object\nin the VMware environment, after the VM is created it is storage\nvMotioned to its primary datastore. If storage\nvMotion fails, the Cohesity Cluster marks the recovery task as failed.\nHowever, this field is still populated with the id of the\nrecovered VM. This id can be used later to\nclean up the VM from primary environment (i.e, the vCenter Server)."
          type: "integer"
          format: "int64"
          x-go-name: "RestoredObjectId"
        sourceObjectId: 
          description: "Specifies the Protection Source id of the object to be recovered or\ncloned."
          type: "integer"
          format: "int64"
          x-go-name: "SourceObjectId"
      x-go-package: "cohesity/iris/server/data/public"
    RestoreSourceSummaryByObjectTypeElement: 
      description: "RestoreSourceSummaryByObjectTypeElement represents a recover/clone summary\nfor a single object type."
      type: "object"
      required: 
        - "name"
      properties: 
        datastoreId: 
          description: "Specifies the datastore where the object's files are recovered to.\nThis field is populated when objects are recovered to a different\nresource pool or to a different parent source.\nThis field is not populated when objects are recovered to their\noriginal datastore locations in the original parent source."
          type: "integer"
          format: "int64"
          x-go-name: "DatastoreId"
        fileRestoreInfo: 
          type: "array"
          title: "Specifies a list of restore information of files."
          items: 
            $ref: "#/definitions/FileRestoreInfo"
          x-go-name: "FileRestoreInfo"
        name: 
          description: "Specifies the name of the Restore Task. This field must be set and\nmust be a unique name."
          type: "string"
          x-go-name: "Name"
        objects: 
          description: "Specifies a list of Protection Source objects or Protection Job objects\n(with specified Protection Source objects)."
          type: "array"
          title: "Array of Objects."
          items: 
            $ref: "#/definitions/RestoreObject"
          x-go-name: "Objects"
        protectionSourceName: 
          description: "The protection source name."
          type: "string"
          x-go-name: "ProtectionSourceName"
        startTimeUsecs: 
          description: "Specifies the start time of the Restore Task as a Unix epoch\nTimestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "StartTimeUsecs"
        type: 
          description: "Specify the object type to filter with.\nSpecifies the type of Restore Task.\n\n'kRecoverVMs' specifies a Restore Task that recovers VMs.\n'kCloneVMs' specifies a Restore Task that clones VMs.\n'kCloneView' specifies a Restore Task that clones a View.\n'kMountVolumes' specifies a Restore Task that mounts volumes.\n'kRestoreFiles' specifies a Restore Task that recovers files and folders."
          type: "string"
          enum: 
            - "kRecoverVMs"
            - "kCloneVMs"
            - "kCloneView"
            - "kMountVolumes"
            - "kRestoreFiles"
          x-go-name: "Type"
        username: 
          description: "Specifies the Cohesity user who requested this Restore Task."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    RestoreTask: 
      description: "Specifies information about a Restore Task."
      type: "object"
      title: "Restore Task."
      required: 
        - "name"
      properties: 
        acropolisParameters: 
          description: "Specifies parameters for 'kAcropolis' restore task."
          $ref: "#/definitions/AcropolisRestoreParameters"
        archiveTaskUid: 
          description: "Specifies the uid of the Restore Task that retrieves objects from\nan archive. This field is only populated when objects\nmust be retrieved from an archive before being restored."
          type: "object"
          title: "Unique Global Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        cloneViewParameters: 
          description: "Specifies the View settings used when cloning a View."
          type: "object"
          title: "View."
          properties: 
            accessSids: 
              description: "Specifies the list of security identifiers (SIDs) for the restricted\nPrincipals who have access to this View."
              type: "array"
              title: "Array of Security Identifiers (SIDs)"
              items: 
                type: "string"
              x-go-name: "AccessSids"
            description: 
              description: "Specifies an optional text description about the View."
              type: "string"
              x-go-name: "Description"
            enableFilerAuditLogging: 
              description: "Specifies if Filer Audit Logging is enabled for this view."
              type: "boolean"
              x-go-name: "EnableFilerAuditLogging"
            enableMixedModePermissions: 
              description: "If set, mixed mode (NFS and SMB) access is enabled for this view."
              type: "boolean"
              x-go-name: "EnableMixedModePermissions"
            enableSmbAccessBasedEnumeration: 
              description: "Specifies if access-based enumeration should be enabled.\nIf 'true', only files and folders that the user has permissions to\naccess are visible on the SMB share for that user."
              type: "boolean"
              x-go-name: "EnableSmbAccessBasedEnumeration"
            enableSmbViewDiscovery: 
              description: "If set, it enables discovery of view for SMB."
              type: "boolean"
              x-go-name: "EnableSmbViewDiscovery"
            fileExtensionFilter: 
              description: "Optional filtering criteria that should be satisfied by all the files\ncreated in this view. It does not affect existing files."
              $ref: "#/definitions/FileExtensionFilter"
            logicalQuota: 
              description: "Specifies an optional logical quota limit (in bytes) for the usage allowed\non this View.\n(Logical data is when the data is fully hydrated and expanded.)\nThis limit overrides the limit inherited from the Storage Domain\n(View Box) (if set).\nIf logicalQuota is nil, the limit is inherited from the\nStorage Domain (View Box) (if set).\nA new write is not allowed if the Storage Domain (View Box) will exceed the\nspecified quota.\nHowever, it takes time for the Cohesity Cluster to calculate\nthe usage across Nodes, so the limit may be exceeded by a small amount.\nIn addition, if the limit is increased or data is removed,\nthere may be a delay before the Cohesity Cluster allows more data\nto be written to the View, as the Cluster is calculating the usage\nacross Nodes."
              type: "object"
              title: "Quota Policy"
              properties: 
                AlertLimit: 
                  description: "AlertLimitBytes converted to GiB format for report purposes."
                  type: "string"
                HardLimit: 
                  description: "HardLimitBytes converted to GiB format for report purposes."
                  type: "string"
                alertLimitBytes: 
                  description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AlertLimitBytes"
                alertThresholdPercentage: 
                  description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AlertThresholdPercentage"
                hardLimitBytes: 
                  description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
                  type: "integer"
                  format: "int64"
                  x-go-name: "HardLimitBytes"
            protocolAccess: 
              description: "Specifies the supported Protocols for the View."
              type: "string"
              enum: 
                - "kAll"
                - "kNFSOnly"
                - "kSMBOnly"
                - "kS3Only"
              x-go-name: "ProtocolAccess"
            qos: 
              description: "Specifies the Quality of Service (QoS) Policy for the View."
              $ref: "#/definitions/QoS"
            smbPermissionsInfo: 
              description: "Specifies the SMB permissions for the View."
              $ref: "#/definitions/SmbPermissionsInfo"
            storagePolicyOverride: 
              description: "Specifies if inline deduplication and compression settings inherited from\nthe Storage Domain (View Box) should be disabled for this View."
              $ref: "#/definitions/StoragePolicyOverride"
            subnetWhitelist: 
              description: "Specifies a list of Subnets with IP addresses that have permissions to\naccess the View. (Overrides the Subnets specified at the global\nCohesity Cluster level.)"
              type: "array"
              title: "Array of Subnets."
              items: 
                $ref: "#/definitions/Subnet"
              x-go-name: "SubnetWhitelist"
        continueOnError: 
          description: "Specifies if the Restore Task should continue when some operations on some\nobjects fail. If true, the Cohesity Cluster ignores intermittent\nerrors and restores as many objects as possible."
          type: "boolean"
          x-go-name: "ContinueOnError"
        datastoreId: 
          description: "Specifies the datastore where the object's files are recovered to.\nThis field is populated when objects are recovered to a different\nresource pool or to a different parent source.\nThis field is not populated when objects are recovered to their\noriginal datastore locations in the original parent source."
          type: "integer"
          format: "int64"
          x-go-name: "DatastoreId"
        endTimeUsecs: 
          description: "Specifies the end time of the Restore Task as a Unix epoch\nTimestamp (in microseconds). This field is only populated if the\nRestore Task completes."
          type: "integer"
          format: "int64"
          x-go-name: "EndTimeUsecs"
        error: 
          description: "Specifies the error reported by the Restore Task (if any) after the\nTask has finished."
          type: "object"
          title: "Restore Task Error."
          properties: 
            errorCode: 
              description: "Operation response error code."
              type: "integer"
              format: "int64"
              x-go-name: "ErrorCode"
            message: 
              description: "Description of the error."
              type: "string"
              x-go-name: "Message"
        fullViewName: 
          description: "Specifies the full name of a View."
          type: "string"
          x-go-name: "FullViewName"
        hypervParameters: 
          description: "Specifies additional parameters for 'kHyperV' restore objects."
          $ref: "#/definitions/HypervRestoreParameters"
        id: 
          description: "Specifies the id of the Restore Task assigned by\nCohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        mountVolumesState: 
          description: "Specifies the states of mounting all the volumes onto a mount target\nfor a 'kRecoverVMs' Restore Task."
          $ref: "#/definitions/MountVolumesState"
        name: 
          description: "Specifies the name of the Restore Task. This field must be set and\nmust be a unique name."
          type: "string"
          x-go-name: "Name"
        newParentId: 
          description: "Specify a new registered parent Protection Source. If specified\nthe selected objects are cloned or recovered to this new Protection\nSource. If not specified, objects are cloned or recovered\nto the original Protection Source that was managing them."
          type: "integer"
          format: "int64"
          x-go-name: "NewParentId"
        objects: 
          description: "Specifies a list of Protection Source objects or Protection Job objects\n(with specified Protection Source objects)."
          type: "array"
          title: "Array of Objects."
          items: 
            $ref: "#/definitions/RestoreObject"
          x-go-name: "Objects"
        restoreObjectState: 
          description: "Specifies the states of all the objects for the 'kRecoverVMs' and\n'kCloneVMs' Restore Tasks."
          type: "array"
          title: "Array of Object States."
          items: 
            $ref: "#/definitions/RestoreObjectState"
          x-go-name: "RestoreObjectState"
        startTimeUsecs: 
          description: "Specifies the start time for the Restore Task as a Unix epoch\nTimestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "StartTimeUsecs"
        status: 
          description: "Specifies the overall status of the Restore Task.\n'kReadyToSchedule' indicates the Restore Task is waiting to be scheduled.\n'kProgressMonitorCreated' indicates the progress monitor for the\nRestore Task has been created.\n'kRetrievedFromArchive' indicates that the objects to restore have been\nretrieved from the specified archive. A Task will only ever transition to\nthis state if a retrieval is necessary.\n'kAdmitted' indicates the task has been admitted. After a task has been\nadmitted, its status does not move back to 'kReadyToSchedule' state\neven if it is rescheduled.\n'kInProgress' indicates that the Restore Task is in progress.\n'kFinishingProgressMonitor' indicates that the Restore Task is\nfinishing its progress monitoring.\n'kFinished' indicates that the Restore Task has finished.\nThe status indicating success or failure is found in the error code that\nis stored with the Restore Task."
          type: "string"
          enum: 
            - "kReadyToSchedule"
            - "kProgressMonitorCreated"
            - "kRetrievedFromArchive"
            - "kAdmitted"
            - "kInProgress"
            - "kFinishingProgressMonitor"
            - "kFinished"
          x-go-name: "Status"
        targetViewCreated: 
          description: "Is true if a new View was created by a 'kCloneVMs' Restore Task.\nThis field is only set for a 'kCloneVMs' Restore Task."
          type: "boolean"
          x-go-name: "TargetViewCreated"
        type: 
          description: "Specifies the type of Restore Task.\n\n'kRecoverVMs' specifies a Restore Task that recovers VMs.\n'kCloneVMs' specifies a Restore Task that clones VMs.\n'kCloneView' specifies a Restore Task that clones a View.\n'kMountVolumes' specifies a Restore Task that mounts volumes.\n'kRestoreFiles' specifies a Restore Task that recovers files and folders."
          type: "string"
          enum: 
            - "kRecoverVMs"
            - "kCloneVMs"
            - "kCloneView"
            - "kMountVolumes"
            - "kRestoreFiles"
          x-go-name: "Type"
        username: 
          description: "Specifies the Cohesity user who requested this Restore Task."
          type: "string"
          x-go-name: "Username"
        viewBoxId: 
          description: "Specifies the id of the Domain (View Box) where the View is stored."
          type: "integer"
          format: "int64"
          x-go-name: "ViewBoxId"
        vlanParameters: 
          description: "Specifies VLAN parameters for the restore operation."
          $ref: "#/definitions/VlanParameters"
        vmwareParameters: 
          description: "Specifies additional parameters for 'kVmware' restore objects."
          $ref: "#/definitions/VmwareRestoreParameters"
      x-go-package: "cohesity/iris/server/data/public"
    Role: 
      description: "Specifies information about role such as the category, privileges,\ndescription, etc. A role can be a default system role\nor a custom role. Custom roles are user-defined roles that are created\nusing the Cohesity Dashboard, the REST API or the CLI.\nSystem roles are provided by default on the Cohesity Cluster."
      type: "object"
      title: "Role Information."
      properties: 
        createdTimeMsecs: 
          description: "Specifies the epoch time in milliseconds when the role was created."
          type: "integer"
          format: "int64"
          x-go-name: "CreatedTimeMsecs"
        description: 
          description: "Specifies a description about the role."
          type: "string"
          x-go-name: "Description"
        isCustomRole: 
          description: "Specifies if the role is a user-defined custom role.\nIf true, the role is a user-defined custom role that was created using\nthe REST API, the Cohesity Dashboard or the CLI.\nIf false, the role is a default system role that was created\nduring Cluster creation."
          type: "boolean"
          x-go-name: "IsCustomRole"
        label: 
          description: "Specifies the label for the role as displayed on the Cohesity\nDashboard such as 'Viewer'."
          type: "string"
          x-go-name: "Label"
        lastUpdatedTimeMsecs: 
          description: "Specifies the epoch time in milliseconds when the role was last modified."
          type: "integer"
          format: "int64"
          x-go-name: "LastUpdatedTimeMsecs"
        name: 
          description: "Specifies the internal Cluster name for the role such as COHESITY_VIEWER.\nFor custom roles, the name and the label are the same.\nFor default system roles, the name and label are different."
          type: "string"
          x-go-name: "Name"
        privileges: 
          description: "Specifies the privileges assigned to the role. When a user or\ngroup is assigned this role, these privileges\ndefine the operations the user or group can perform on the\nCohesity Cluster."
          type: "array"
          title: "Array of Privileges."
          items: 
            type: "string"
          x-go-name: "Privileges"
      x-go-package: "cohesity/iris/server/data/public"
    RoleCreateParameters: 
      description: "Specifies the parameters required to create a new custom role such\nas the name, description and the privileges to assign to the role."
      type: "object"
      title: "Role Create."
      properties: 
        description: 
          description: "Specifies a description about the role."
          type: "string"
          x-go-name: "Description"
        name: 
          description: "Specifies the name of the custom role."
          type: "string"
          x-go-name: "Name"
        privileges: 
          description: "Specifies the list of privileges to assign to the role."
          type: "array"
          title: "Array of Privileges."
          items: 
            type: "string"
          x-go-name: "Privileges"
      x-go-package: "cohesity/iris/server/data/public"
    RoleDeleteParameters: 
      description: "Specifies the parameters required for deleting one or more roles."
      type: "object"
      title: "Delete Role."
      required: 
        - "names"
      properties: 
        names: 
          description: "Specifies the list of roles to delete which are specified by role names."
          type: "array"
          title: "Array of Role Names."
          items: 
            type: "string"
          x-go-name: "Names"
      x-go-package: "cohesity/iris/server/data/public"
    RoleUpdateParameters: 
      description: "Specifies parameters required to update a role."
      type: "object"
      title: "Role Update."
      properties: 
        description: 
          description: "Specifies a description about the role."
          type: "string"
          x-go-name: "Description"
        privileges: 
          description: "Specifies the list of privileges to assign to the role."
          type: "array"
          title: "Array of Privileges."
          items: 
            type: "string"
          x-go-name: "Privileges"
      x-go-package: "cohesity/iris/server/data/public"
    RunJobSnapshotTarget: 
      type: "object"
      title: "Allows setting of Copy target and its retention."
      properties: 
        archivalTarget: 
          description: "Specifies the Archival External Target for storing a copied Snapshot.\nIf the type is not 'kLocal', either a replicationTarget or archivalTarget\nmust be specified."
          $ref: "#/definitions/ArchivalTarget"
        daysToKeep: 
          description: "Specifies the number of days to retain copied Snapshots on the target."
          type: "integer"
          format: "int64"
          x-go-name: "DaysToKeep"
        replicationTarget: 
          description: "Specifies the replication target (Remote Cluster) for storing a copied\nSnapshot.\nIf the type is not 'kLocal', either a replicationTarget or archivalTarget\nmust be specified."
          $ref: "#/definitions/ReplicationTarget"
        type: 
          description: "Specifies the type of a Snapshot target such as 'kLocal', 'kRemote' or\n'kArchival'.\n'kLocal' means the Snapshot is stored on a local Cohesity Cluster.\n'kRemote' means the Snapshot is stored on a Remote Cohesity Cluster.\n(It was copied to the Remote Cohesity Cluster using replication.)\n'kArchival' means the Snapshot is stored on a Archival External Target\n(such as Tape or AWS)."
          type: "string"
          enum: 
            - "kLocal"
            - "kRemote"
            - "kArchival"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    RunMapReduceInstanceResult: 
      type: "object"
      title: "Result of RunMapReduceInstance call."
      properties: 
        error: 
          description: "Status code of http rpc."
          $ref: "#/definitions/ErrorProto"
        mapReduceInstanceId: 
          description: "Return the ID of instance."
          type: "integer"
          format: "int64"
          x-go-name: "MapReduceInstanceId"
      x-go-package: "yoda/base/analytics.pb"
    RunMapReduceParams: 
      type: "object"
      title: "RunMapReduceParams specifies the input params to run a map reduce instance."
      properties: 
        appId: 
          description: "ApplicationId is the Id of the map reduce application to run."
          type: "integer"
          format: "int64"
          x-go-name: "ApplicationId"
        inputParams: 
          description: "InputParams specifies optional list of key=value input params specified\nfor running the map reduce instance."
          type: "array"
          items: 
            $ref: "#/definitions/MapReduceInstance_InputParam"
          x-go-name: "InputParams"
        mrInput: 
          description: "InputSpecification specifies the input information to run the specific map\nreduce instance."
          $ref: "#/definitions/InputSpec"
        mrOutput: 
          description: "OutputSpecification specifies the output information to run the specific\nmap reduce instance."
          $ref: "#/definitions/OutputSpec"
      x-go-package: "cohesity/iris/server/data/public"
    RunProtectionJobParam: 
      description: "Specify the type of backup."
      type: "object"
      title: "Run Type."
      properties: 
        copyRunTargets: 
          description: "Optional parameter to be set if you want specific replication or archival\nassociated with the policy to run."
          type: "array"
          items: 
            $ref: "#/definitions/RunJobSnapshotTarget"
          x-go-name: "CopyRunTargets"
        runType: 
          description: "Specifies the type of backup. If not specified, 'kRegular' is assumed.\n'kRegular' indicates a incremental (CBT) backup. Incremental backups\nutilizing CBT (if supported) are captured of the target protection objects.\nThe first run of a kRegular schedule captures all the blocks.\n'kFull' indicates a full (no CBT) backup. A complete backup\n(all blocks) of the target protection objects are always captured and\nChange Block Tracking (CBT) is not utilized.\n'kLog' indicates a Database Log backup. Capture the database\ntransaction logs to allow rolling back to a specific point in time.\n'kSystem' indicates a system backup. System backups are used to do\nbare metal recovery of the system to a specific point in time."
          type: "string"
          enum: 
            - "kRegular"
            - "kFull"
            - "kLog"
            - "kSystem"
          x-go-name: "RunType"
        sourceIds: 
          description: "Optional parameter if you want to back up only a subset of sources that\nare protected by the job in this run."
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "SourceIds"
      x-go-package: "cohesity/iris/server/data/public"
    Sample: 
      type: "object"
      title: "Specifies a sample of data collected at a timestamp."
      properties: 
        timestampMsecs: 
          description: "Specifies the timestamp when the data sample occured."
          type: "integer"
          format: "int64"
          x-go-name: "TimestampMsecs"
        value: 
          description: "Specifies the value of the data sample."
          type: "integer"
          format: "int64"
          x-go-name: "Value"
      x-go-package: "cohesity/iris/server/data/public"
    SchedulerProto: 
      type: "object"
      title: "Specifies the scheduler structure which holds the various schedule jobs."
      properties: 
        schedulerJobs: 
          type: "array"
          title: "The array of the various scheduler jobs."
          items: 
            $ref: "#/definitions/SchedulerProto_SchedulerJob"
          x-go-name: "SchedulerJobs"
      x-go-package: "iris/base/scheduler.pb"
    SchedulerProto_SchedulerJob: 
      type: "object"
      title: "Specifies the structure of the scheduler job along with its attributes."
      properties: 
        enableRecurringEmail: 
          description: "The boolean which specifies if this job is to be scheduled or not."
          type: "boolean"
          x-go-name: "EnableRecurringEmail"
        id: 
          description: "The unique id for the scheduled job assigned by the cluster."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        name: 
          description: "The name of the scheduled job given by the user."
          type: "string"
          x-go-name: "Name"
        scheduleJobParameters: 
          $ref: "#/definitions/SchedulerProto_SchedulerJob_ScheduleJobParameters"
        schedules: 
          type: "array"
          title: "The frequency of schedule execution."
          items: 
            $ref: "#/definitions/SchedulerProto_SchedulerJob_Schedule"
          x-go-name: "Schedules"
        type: 
          description: "Specifies the type of the job.\nThe enum which defines the Job type of the job."
          type: "string"
          enum: 
            - "kSCHEDULER_JOB_REPORT"
          x-go-name: "Type"
      x-go-package: "iris/base/scheduler.pb"
    SchedulerProto_SchedulerJob_Schedule: 
      type: "object"
      title: "A message which specifies the schedule of execution of the job."
      properties: 
        day: 
          description: "The day of the week when schedule should be executed (0-6)."
          type: "integer"
          format: "int32"
          x-go-name: "Day"
        hour: 
          description: "The hour of the day when schedule should be executed (0-23)."
          type: "integer"
          format: "int32"
          x-go-name: "Hour"
      x-go-package: "iris/base/scheduler.pb"
    SchedulerProto_SchedulerJob_ScheduleJobParameters: 
      type: "object"
      title: "Specifies the Scheduled Job parameters."
      properties: 
        reportJobParameter: 
          $ref: "#/definitions/SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter"
      x-go-package: "iris/base/scheduler.pb"
    SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter: 
      type: "object"
      title: "Specifies the Report Job Parameters structure."
      properties: 
        receiverEmails: 
          type: "array"
          title: "Specifies the list of receiver email addresses."
          items: 
            type: "string"
          x-go-name: "ReceiverEmails"
        reports: 
          type: "array"
          title: "The list of reports to be sent in the mail."
          items: 
            $ref: "#/definitions/SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter_Report"
          x-go-name: "Reports"
      x-go-package: "iris/base/scheduler.pb"
    SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter_Report: 
      type: "object"
      title: "Specifies the type and parameters of a report."
      properties: 
        outputFormat: 
          description: "Specifies the output format of the report."
          type: "string"
          x-go-name: "OutputFormat"
        parameters: 
          $ref: "#/definitions/SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter_Report_Parameters"
        type: 
          description: "Specifies the report type.\nThe enum which has all the various report types.\nkAvailableLocalSnapshotsReport, kBackupSummarySReport,\nkFailedObjectsReport, kProtectionDetailsPerObjectReport,\nkProtectionJobsInventoryAndScheduleReport,\nkProtectionSummaryByObjectTypeReport,\nkSourceGrowthAndVarianceReport, kStorageConsumedByBackupReport,\nkStorageConsumedByFileCategoriesReport,\nkStorageConsumedByServersReport,\nkStorageConsumedByViewBoxReport,\nkDataTransferredToExternalTargetsReports,"
          type: "string"
          enum: 
            - "kUnprotectedVMsReport"
          x-go-name: "Type"
      x-go-package: "iris/base/scheduler.pb"
    SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter_Report_Parameters: 
      type: "object"
      title: "Specifies the report parameters."
      properties: 
        jobId: 
          description: "Specifies the id of the job for which to get the report data."
          type: "integer"
          format: "int64"
          x-go-name: "JobId"
        jobName: 
          description: "Specifies the name of the job for which to get the report data."
          type: "string"
          x-go-name: "JobName"
        lastNDays: 
          description: "Specifies the number of days from current date for which the\nreport data is to be fetched."
          type: "integer"
          format: "int32"
          x-go-name: "LastNDays"
        objectIds: 
          type: "array"
          title: "Specifies the object ids for which to get the report data."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "ObjectIds"
        objectType: 
          description: "Specifies the object type for which to get the report data."
          type: "string"
          x-go-name: "ObjectType"
        registeredSourceIds: 
          description: "Specifies the registered sources for which\nto get the report data."
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "RegisteredSourceIds"
        runStatus: 
          type: "array"
          title: "Specifies the run status for which to get the report data."
          items: 
            type: "string"
          x-go-name: "RunStatus"
        sid: 
          description: "Specifies the sid of the user."
          type: "string"
          x-go-name: "Sid"
        unixUid: 
          description: "Specifies the unix uid of the user."
          type: "integer"
          format: "uint32"
          x-go-name: "UnixUid"
        vaultIds: 
          type: "array"
          title: "Specifies the vault ids for which to get the report data."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "VaultIds"
        viewBoxId: 
          description: "Specifies the view box for which to get the report data."
          type: "integer"
          format: "int64"
          x-go-name: "ViewBoxId"
        viewName: 
          description: "Specifies the view name for which the report is required."
          type: "string"
          x-go-name: "ViewName"
        vmName: 
          description: "Specifies the VM name for which to get the report data."
          type: "string"
          x-go-name: "VmName"
      x-go-package: "iris/base/scheduler.pb"
    SchedulingPolicy: 
      description: "Specifies settings that define a backup schedule for a Protection Job."
      type: "object"
      title: "Scheduling Policy."
      properties: 
        continuousSchedule: 
          description: "Specifies the time interval between two Job Runs of a continuous backup\nschedule and any blackout periods when new Job Runs should NOT be started.\nSet if periodicity is kContinuous."
          type: "object"
          title: "Continuous Schedule."
          properties: 
            backupIntervalMins: 
              description: "If specified, this field defines the time interval in minutes when\nnew Job Runs are started."
              type: "integer"
              format: "int64"
              x-go-name: "BackupIntervalMins"
        dailySchedule: 
          description: "Specifies a daily or weekly backup schedule.\nSet if periodicity is kDaily."
          type: "object"
          title: "Daily & Weekly Schedule."
          properties: 
            days: 
              description: "Specifies a list of days of the week when to start Job Runs.\nIf no days are specified, the Jobs Runs will run every day of the week.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
              type: "array"
              title: "Array of Days."
              items: 
                type: "string"
                enum: 
                  - "kSunday"
                  - "kMonday"
                  - "kTuesday"
                  - "kWednesday"
                  - "kThursday"
                  - "kFriday"
                  - "kSaturday"
              x-go-name: "Days"
        monthlySchedule: 
          description: "Specifies a monthly backup schedule.\nSet if periodicity is kMonthly."
          type: "object"
          title: "Monthly Schedule."
          properties: 
            day: 
              description: "Specifies the day of the week (such as 'kMonday') to start the Job Run.\nUsed with day count to define the day in the month to start\nthe Job Run.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
              type: "string"
              enum: 
                - "kSunday"
                - "kMonday"
                - "kTuesday"
                - "kWednesday"
                - "kThursday"
                - "kFriday"
                - "kSaturday"
              x-go-name: "Day"
            dayCount: 
              description: "Specifies the day count in the month (such as 'kThird') to start\nthe Job Run.\nUsed in combination with day to define the day in the month to start\nthe Job Run.\nSpecifies the day count in the month to start the backup.\nFor example if day count is set to 'kThird' and day is set to 'kMonday',\na backup is performed on the third Monday of every month."
              type: "string"
              enum: 
                - "kFirst"
                - "kSecond"
                - "kThird"
                - "kFourth"
                - "kLast"
              x-go-name: "DayCount"
        periodicity: 
          description: "Specifies how often to start new Job Runs of a Protection Job.\n'kDaily' means new Job Runs start daily.\n'kMonthly' means new Job Runs start monthly.\n'kContinuous' means new Job Runs repetitively start at the\nbeginning of the specified time interval (in hours or minutes).\n'kOneOff' means this is an additional schedule."
          type: "string"
          enum: 
            - "kContinuous"
            - "kDaily"
            - "kMonthly"
            - "kOneOff"
          x-go-name: "Periodicity"
      x-go-package: "cohesity/iris/server/data/public"
    ScriptPathAndParams: 
      description: "Specifies the path to the remote script and any parameters\nexpected by the remote script."
      type: "object"
      title: "Remote Script."
      properties: 
        scriptParams: 
          description: "Specifies the parameters and values to pass into the remote script.\nFor example if the script expects values for the 'database' and\n'user' parameters, specify the parameters and values using\nthe following string: \"database=myDatabase user=me\"."
          type: "string"
          x-go-name: "ScriptParams"
        scriptPath: 
          description: "Specifies the path to the script on the remote host."
          type: "string"
          x-go-name: "ScriptPath"
      x-go-package: "cohesity/iris/server/data/public"
    Share: 
      type: "object"
      title: "Specifies the share details when listViewsByShareName is called."
      properties: 
        allSmbMountPaths: 
          description: "Specifies the possible paths that can be used to mount this Share\nas a SMB share. If Active Directory has multiple account names;\neach machine account has its own path."
          type: "array"
          title: "Array of SMB Paths."
          items: 
            type: "string"
          x-go-name: "AllSmbMountPaths"
        nfsMountPath: 
          description: "Specifies the path for mounting this Share as an NFS share."
          type: "string"
          x-go-name: "NfsMountPath"
        path: 
          description: "Specifies the path information for this share."
          type: "string"
          x-go-name: "Path"
        shareName: 
          description: "The name of the share."
          type: "string"
          x-go-name: "ShareName"
        smbMountPath: 
          description: "Specifies the main path for mounting this Share as an SMB share."
          type: "string"
          x-go-name: "SmbMountPath"
        viewName: 
          description: "Specifies the view name this share belongs to."
          type: "string"
          x-go-name: "ViewName"
      x-go-package: "cohesity/iris/server/data/public"
    SmbActiveFileOpensResponse: 
      type: "object"
      title: "Query response to SMB active file opens."
      properties: 
        activeFilePaths: 
          type: "array"
          title: "Specifies the active opens for an SMB file in a view."
          items: 
            $ref: "#/definitions/SmbActiveFilePath"
          x-go-name: "ActiveFilePaths"
        cookie: 
          description: "Specifies an opaque string to pass to get the next set of active opens.\nIf null is returned, this response is the last set of active opens."
          type: "string"
          x-go-name: "Cookie"
      x-go-package: "cohesity/iris/server/data/public"
    SmbActiveFilePath: 
      description: "Specifies a file path in an SMB view that has active sessions and opens."
      type: "object"
      title: "Active SMB file path."
      properties: 
        activeSessions: 
          type: "array"
          title: "Specifies the sessions where the file is open."
          items: 
            $ref: "#/definitions/SmbActiveSession"
          x-go-name: "ActiveSessions"
        filePath: 
          description: "Specifies the filepath in the view."
          type: "string"
          x-go-name: "FilePath"
        viewId: 
          description: "Specifies the id of the View assigned by the Cohesity Cluster.\nEither viewName or viewId must be specified."
          type: "integer"
          format: "int64"
          x-go-name: "ViewId"
        viewName: 
          description: "Specifies the name of the View."
          type: "string"
          x-go-name: "ViewName"
      x-go-package: "cohesity/iris/server/data/public"
    SmbActiveOpen: 
      type: "object"
      title: "Specifies an active open of an SMB file, its access and sharing information."
      properties: 
        accessInfoList: 
          description: "'kFileReadData' indicates the right to read data from the file or named\npipe.\n'kFileWriteData' indicates the right to write data into the file or named\npipe beyond the end of the file.\n'kFileAppendData' indicates the right to append data into the file or named\npipe.\n'kFileReadEa' indicates the right to read the extended attributes of the\nfile or named pipe.\n'kFileWriteEa' indicates the right to write or change the extended\nattributes to the file or named pipe.\n'kFileExecute' indicates the right to delete entries within a directory.\n'kFileDeleteChild' indicates the right to execute the file.\n'kFileReadAttributes' indicates the right to read the attributes of the\nfile.\n'kFileWriteAttributes' indicates the right to change the attributes of the\nfile.\n'kDelete' indicates the right to delete the file.\n'kReadControl' indicates the right to read the security descriptor for the\nfile or named pipe.\n'kWriteDac' indicates the right to change the discretionary access control\nlist (DACL) in the security descriptor for the file or named pipe. For\nthe DACL data structure, see ACL in [MS-DTYP].\n'kWriteOwner' indicates the right to change the owner in the security\ndescriptor for the file or named pipe.\n'kSynchronize' is used only by SMB2 clients.\n'kAccessSystemSecurity' indicates the right to read or change the system\naccess control list (SACL) in the security descriptor for the file or\nnamed pipe. For the SACL data structure, see ACL in [MS-DTYP].<42>\n'kMaximumAllowed' indicates that the client is requesting an open to the\nfile with the highest level of access the client has on this file.\nIf no access is granted for the client on this file, the server MUST\nfail the open with STATUS_ACCESS_DENIED.\n'kGenericAll' indicates a request for all the access flags that are\npreviously listed except kMaximumAllowed and kAccessSystemSecurity.\n'kGenericExecute' indicates a request for the following combination of\naccess flags listed above:\nkFileReadAttributes| kFileExecute| kSynchronize| kReadControl.\n'kGenericWrite' indicates a request for the following combination of\naccess flags listed above:\nkFileWriteData| kFileAppendData| kFileWriteAttributes| kFileWriteEa|\nkSynchronize| kReadControl.\n'kGenericRead' indicates a request for the following combination of\naccess flags listed above:\nkFileReadData| kFileReadAttributes| kFileReadEa| kSynchronize|\nkReadControl."
          type: "array"
          title: "Specifies the access information."
          items: 
            type: "string"
            enum: 
              - "kFileReadData"
              - "kFileWriteData"
              - "kFileAppendData"
              - "kFileReadEa"
              - "kFileWriteEa"
              - "kFileExecute"
              - "kFileDeleteChild"
              - "kFileReadAttributes"
              - "kFileWriteAttributes"
              - "kDelete"
              - "kReadControl"
              - "kWriteDac"
              - "kWriteOwner"
              - "kSynchronize"
              - "kAccessSystemSecurity"
              - "kMaximumAllowed"
              - "kGenericAll"
              - "kGenericExecute"
              - "kGenericWrite"
              - "kGenericRead"
          x-go-name: "AccessInfoList"
        openId: 
          description: "Specifies the id of the active open."
          type: "integer"
          format: "int64"
          x-go-name: "OpenId"
        othersCanDelete: 
          description: "Specifies whether others are allowed to delete."
          type: "boolean"
          x-go-name: "OthersCanDelete"
        othersCanRead: 
          description: "Specifies whether others are allowed to read."
          type: "boolean"
          x-go-name: "OthersCanRead"
        othersCanWrite: 
          description: "Specifies whether others are allowed to write."
          type: "boolean"
          x-go-name: "OthersCanWrite"
      x-go-package: "cohesity/iris/server/data/public"
    SmbActiveSession: 
      type: "object"
      title: "Specifies an active session and its opens."
      properties: 
        activeOpens: 
          type: "array"
          title: "Specifies the list of active opens of the file in this session."
          items: 
            $ref: "#/definitions/SmbActiveOpen"
          x-go-name: "ActiveOpens"
        clientIp: 
          description: "Specifies the IP address from which the file is still open."
          type: "string"
          x-go-name: "ClientIp"
        domain: 
          description: "Specifies the domain of the user."
          type: "string"
          x-go-name: "Domain"
        serverIp: 
          description: "Specifies the IP address of the server where the file exists."
          type: "string"
          x-go-name: "ServerIp"
        sessionId: 
          description: "Specifies the id of the session."
          type: "integer"
          format: "int64"
          x-go-name: "SessionId"
        username: 
          description: "Specifies the username who keeps the file open."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    SmbPermission: 
      description: "Specifies information about a single SMB permission."
      type: "object"
      title: "SMB Permission."
      properties: 
        access: 
          description: "Specifies the read/write access to the SMB share.\n'kReadyOnly' indicates read only access to the SMB share.\n'kReadWrite' indicates read and write access to the SMB share.\n'kFullControl' indicates full administrative control of the SMB share.\n'kSpecialAccess' indicates custom permissions to the SMB share using\naccess masks structures."
          type: "string"
          enum: 
            - "kReadOnly"
            - "kReadWrite"
            - "kModify"
            - "kFullControl"
            - "kSpecialAccess"
          x-go-name: "Access"
        mode: 
          description: "Specifies how the permission should be applied to folders and/or files."
          type: "string"
          enum: 
            - "kFolderSubFoldersAndFiles"
            - "kFolderAndSubFolders"
            - "kFolderAndFiles"
            - "kFolderOnly"
            - "kSubFoldersAndFilesOnly"
            - "kSubFoldersOnly"
            - "kFilesOnly"
          x-go-name: "Mode"
        sid: 
          description: "Specifies the security identifier (SID) of the principal."
          type: "string"
          x-go-name: "Sid"
        specialAccessMask: 
          description: "Specifies custom access permissions.\nWhen the access mask from the Access Control Entry (ACE) cannot be mapped\nto one of the enums in 'access', this field is populated\nwith the custom mask derived from the ACE and 'access' is set\nto kSpecialAccess.\nThis is a placeholder for storing an unmapped access permission and should\nnot be set when creating and editing a View."
          type: "integer"
          format: "uint32"
          x-go-name: "SpecialAccessMask"
        specialType: 
          description: "Specifies a custom type.\nWhen the type from the Access Control Entry (ACE) cannot be mapped\nto one of the enums in 'type', this field is populated with the custom\ntype derived from the ACE and 'type' is set to kSpecialType.\nThis is a placeholder for storing an unmapped type and should\nnot be set when creating and editing a View."
          type: "integer"
          format: "int32"
          x-go-name: "SpecialType"
        type: 
          description: "Specifies the type of permission.\n'kAllow' indicates access is allowed.\n'kDeny' indicates access is denied.\n'kSpecialType' indicates a type defined in the Access Control Entry (ACE)\ndoes not map to 'kAllow' or 'kDeny'."
          type: "string"
          enum: 
            - "kAllow"
            - "kDeny"
            - "kSpecialType"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    SmbPermissionsInfo: 
      description: "Specifies information about SMB permissions."
      type: "object"
      title: "SMB Permissions Information."
      properties: 
        ownerSid: 
          description: "Specifies the security identifier (SID) of the owner of the SMB share."
          type: "string"
          x-go-name: "OwnerSid"
        permissions: 
          description: "Specifies a list of SMB permissions."
          type: "array"
          title: "Array of SMB Permissions."
          items: 
            $ref: "#/definitions/SmbPermission"
          x-go-name: "Permissions"
      x-go-package: "cohesity/iris/server/data/public"
    SnapshotArchivalCopyPolicy: 
      description: "Specifies settings for copying Snapshots External Targets (such as AWS or\nTape). This also specifies the retention policy that should be applied to\nSnapshots after they have been copied to the specified target."
      type: "object"
      title: "Snapshot Copy Archival Policy."
      properties: 
        copyPartial: 
          description: "Specifies if Snapshots are copied from the first completely successful\nJob Run or the first partially successful Job Run occurring at the start\nof the replication schedule.\nIf true, Snapshots are copied from the first Job Run occurring at the start\nof the replication schedule, even if first Job Run was not completely\nsuccessful i.e. Snapshots were not captured for all Objects in the Job.\nIf false, Snapshots are copied from the first Job Run occurring at the\nstart of the replication schedule that was completely successful i.e.\nSnapshots for all the Objects in the Job were successfully captured."
          type: "boolean"
          x-go-name: "CopyPartial"
        daysToKeep: 
          description: "Specifies the number of days to retain copied Snapshots on the target."
          type: "integer"
          format: "int64"
          x-go-name: "DaysToKeep"
        multiplier: 
          description: "Specifies a factor to multiply the periodicity by, to determine the copy\nschedule.\nFor example if set to 2 and the periodicity is hourly, then Snapshots\nfrom the first eligible Job Run for every 2 hour period is copied."
          type: "integer"
          format: "int32"
          x-go-name: "Multiplier"
        periodicity: 
          description: "Specifies the frequency that Snapshots should be copied to the\nspecified target. Used in combination with multipiler.\n'kEvery' means that the Snapshot copy occurs after the number of\nJob Runs equals the number specified in the multiplier.\n'kHour' means that the Snapshot copy occurs hourly at the frequency\nset in the multiplier, for example if multiplier is 2, the copy occurs\nevery 2 hours.\n'kDay' means that the Snapshot copy occurs daily at the frequency\nset in the multiplier.\n'kWeek' means that the Snapshot copy occurs weekly at the frequency\nset in the multiplier.\n'kMonth' means that the Snapshot copy occurs monthly at the frequency\nset in the multiplier.\n'kYear' means that the Snapshot copy occurs yearly at the frequency\nset in the multiplier."
          type: "string"
          enum: 
            - "kEvery"
            - "kHour"
            - "kDay"
            - "kWeek"
            - "kMonth"
            - "kYear"
          x-go-name: "Periodicity"
        target: 
          description: "Specifies the archival target to copy the Snapshots to."
          type: "object"
          title: "Archival Target."
          properties: 
            vaultId: 
              description: "Specifies the id of Archival Vault assigned by the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "VaultId"
            vaultName: 
              description: "Name of the Archival Vault."
              type: "string"
              x-go-name: "VaultName"
            vaultType: 
              description: "Specifies the type of the Archival External Target such as 'kCloud' or\n'kTape'."
              type: "string"
              enum: 
                - "kCloud"
                - "kTape"
              x-go-name: "VaultType"
      x-go-package: "cohesity/iris/server/data/public"
    SnapshotAttempt: 
      description: "Specifies information about a single snapshot."
      type: "object"
      title: "Snapshot Attempt."
      properties: 
        attemptNumber: 
          description: "Specifies the number of the attempts made by the Job Run\nto capture a snapshot of the object. For example, if an snapshot\nis successfully captured after three attempts, this field equals 3."
          type: "integer"
          format: "int64"
          x-go-name: "AttemptNumber"
        jobRunId: 
          description: "Specifies the id of the Job Run that captured the snapshot."
          type: "integer"
          format: "int64"
          x-go-name: "JobRunId"
        startedTimeUsecs: 
          description: "Specifies the time when the Job Run starts capturing a snapshot.\nSpecified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "StartedTimeUsecs"
      x-go-package: "cohesity/iris/server/data/public"
    SnapshotCloudCopyPolicy: 
      description: "Specifies settings for copying Snapshots to Cloud. This also specifies\nthe retention policy that should be applied to Snapshots after they have\nbeen copied to Cloud."
      type: "object"
      title: "Cloud Deploy Policy."
      properties: 
        copyPartial: 
          description: "Specifies if Snapshots are copied from the first completely successful\nJob Run or the first partially successful Job Run occurring at the start\nof the replication schedule.\nIf true, Snapshots are copied from the first Job Run occurring at the start\nof the replication schedule, even if first Job Run was not completely\nsuccessful i.e. Snapshots were not captured for all Objects in the Job.\nIf false, Snapshots are copied from the first Job Run occurring at the\nstart of the replication schedule that was completely successful i.e.\nSnapshots for all the Objects in the Job were successfully captured."
          type: "boolean"
          x-go-name: "CopyPartial"
        daysToKeep: 
          description: "Specifies the number of days to retain copied Snapshots on the target."
          type: "integer"
          format: "int64"
          x-go-name: "DaysToKeep"
        multiplier: 
          description: "Specifies a factor to multiply the periodicity by, to determine the copy\nschedule.\nFor example if set to 2 and the periodicity is hourly, then Snapshots\nfrom the first eligible Job Run for every 2 hour period is copied."
          type: "integer"
          format: "int32"
          x-go-name: "Multiplier"
        periodicity: 
          description: "Specifies the frequency that Snapshots should be copied to the\nspecified target. Used in combination with multipiler.\n'kEvery' means that the Snapshot copy occurs after the number of\nJob Runs equals the number specified in the multiplier.\n'kHour' means that the Snapshot copy occurs hourly at the frequency\nset in the multiplier, for example if multiplier is 2, the copy occurs\nevery 2 hours.\n'kDay' means that the Snapshot copy occurs daily at the frequency\nset in the multiplier.\n'kWeek' means that the Snapshot copy occurs weekly at the frequency\nset in the multiplier.\n'kMonth' means that the Snapshot copy occurs monthly at the frequency\nset in the multiplier.\n'kYear' means that the Snapshot copy occurs yearly at the frequency\nset in the multiplier."
          type: "string"
          enum: 
            - "kEvery"
            - "kHour"
            - "kDay"
            - "kWeek"
            - "kMonth"
            - "kYear"
          x-go-name: "Periodicity"
        target: 
          description: "Specifies the details about CloudDeploy target where backup snapshots\nmay be converted and stored."
          $ref: "#/definitions/CloudDeployTarget"
      x-go-package: "cohesity/iris/server/data/public"
    SnapshotCopyTask: 
      description: "Specifies information about copy tasks such as replication and archival\ntasks."
      type: "object"
      title: "Snapshot Copy Task."
      properties: 
        copyStatus: 
          description: "Specifies the status of the copy task."
          type: "string"
          x-go-name: "CopyStatus"
        expiryTimeUsecs: 
          description: "Specifies when the Snapshot expires on the target."
          type: "integer"
          format: "int64"
          x-go-name: "ExpiryTimeUsecs"
        message: 
          description: "Specifies warning or error information when the copy task is not\nsuccessful."
          type: "string"
          x-go-name: "Message"
        snapshotTarget: 
          description: "Specifies the target location where the Snapshot was copied to."
          $ref: "#/definitions/SnapshotTarget"
      x-go-package: "cohesity/iris/server/data/public"
    SnapshotInfo: 
      description: "Specifies details about the snapshot task created to backup or copy one\nsource object like a VM."
      type: "object"
      title: "Snapshot Information."
      properties: 
        environment: 
          description: "Specifies the environment type (such as kVMware or kSQL) that\ncontains the source to backup.\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "string"
          enum: 
            - "kVMware"
            - "kSQL"
            - "kView"
            - "kPuppeteer"
            - "kPhysical"
            - "kPure"
            - "kNetapp"
            - "kGenericNas"
            - "kHyperV"
            - "kAcropolis"
            - "kAzure"
          x-go-name: "Environment"
        relativeSnapshotDirectory: 
          description: "Specifies the relative directory path from root path where the snapshot\nis stored."
          type: "string"
          x-go-name: "RelativeSnapshotDirectory"
        rootPath: 
          description: "Specifies the root path where the snapshot is stored, using the following\nformat: \"/ViewBox/ViewName/fs\"."
          type: "string"
          x-go-name: "RootPath"
        viewName: 
          description: "Specifies the name of the View that is cloned.\nNOTE: This field is only populated for View cloning."
          type: "string"
          x-go-name: "ViewName"
      x-go-package: "cohesity/iris/server/data/public"
    SnapshotReplicationCopyPolicy: 
      description: "Specifies settings for copying Snapshots to Remote Clusters. This also\nspecifies the retention policy that should be applied to Snapshots after\nthey have been copied to the specified target."
      type: "object"
      title: "Snapshot Copy Replication Policy."
      properties: 
        copyPartial: 
          description: "Specifies if Snapshots are copied from the first completely successful\nJob Run or the first partially successful Job Run occurring at the start\nof the replication schedule.\nIf true, Snapshots are copied from the first Job Run occurring at the start\nof the replication schedule, even if first Job Run was not completely\nsuccessful i.e. Snapshots were not captured for all Objects in the Job.\nIf false, Snapshots are copied from the first Job Run occurring at the\nstart of the replication schedule that was completely successful i.e.\nSnapshots for all the Objects in the Job were successfully captured."
          type: "boolean"
          x-go-name: "CopyPartial"
        daysToKeep: 
          description: "Specifies the number of days to retain copied Snapshots on the target."
          type: "integer"
          format: "int64"
          x-go-name: "DaysToKeep"
        multiplier: 
          description: "Specifies a factor to multiply the periodicity by, to determine the copy\nschedule.\nFor example if set to 2 and the periodicity is hourly, then Snapshots\nfrom the first eligible Job Run for every 2 hour period is copied."
          type: "integer"
          format: "int32"
          x-go-name: "Multiplier"
        periodicity: 
          description: "Specifies the frequency that Snapshots should be copied to the\nspecified target. Used in combination with multipiler.\n'kEvery' means that the Snapshot copy occurs after the number of\nJob Runs equals the number specified in the multiplier.\n'kHour' means that the Snapshot copy occurs hourly at the frequency\nset in the multiplier, for example if multiplier is 2, the copy occurs\nevery 2 hours.\n'kDay' means that the Snapshot copy occurs daily at the frequency\nset in the multiplier.\n'kWeek' means that the Snapshot copy occurs weekly at the frequency\nset in the multiplier.\n'kMonth' means that the Snapshot copy occurs monthly at the frequency\nset in the multiplier.\n'kYear' means that the Snapshot copy occurs yearly at the frequency\nset in the multiplier."
          type: "string"
          enum: 
            - "kEvery"
            - "kHour"
            - "kDay"
            - "kWeek"
            - "kMonth"
            - "kYear"
          x-go-name: "Periodicity"
        target: 
          description: "Specifies the replication target to copy the Snapshots to."
          type: "object"
          title: "Replication Target."
          properties: 
            clusterId: 
              description: "Specifies the id of the Remote Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterName: 
              description: "Specifies the name of the Remote Cluster."
              type: "string"
              x-go-name: "ClusterName"
      x-go-package: "cohesity/iris/server/data/public"
    SnapshotTarget: 
      description: "Specifies settings about a target where a copied Snapshot is stored.\nA target can be a Remote Cluster or an Archival External Target such as\nAWS or Tape."
      type: "object"
      title: "Snapshot Target."
      properties: 
        archivalTarget: 
          description: "Specifies the Archival External Target for storing a copied Snapshot.\nIf the type is not 'kLocal', either a replicationTarget or archivalTarget\nmust be specified."
          $ref: "#/definitions/ArchivalTarget"
        replicationTarget: 
          description: "Specifies the replication target (Remote Cluster) for storing a copied\nSnapshot.\nIf the type is not 'kLocal', either a replicationTarget or archivalTarget\nmust be specified."
          $ref: "#/definitions/ReplicationTarget"
        type: 
          description: "Specifies the type of a Snapshot target such as 'kLocal', 'kRemote' or\n'kArchival'.\n'kLocal' means the Snapshot is stored on a local Cohesity Cluster.\n'kRemote' means the Snapshot is stored on a Remote Cohesity Cluster.\n(It was copied to the Remote Cohesity Cluster using replication.)\n'kArchival' means the Snapshot is stored on a Archival External Target\n(such as Tape or AWS)."
          type: "string"
          enum: 
            - "kLocal"
            - "kRemote"
            - "kArchival"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    SnapshotVersion: 
      description: "Specifies information about snapshots of a backup object."
      type: "object"
      title: "Snapshot Version."
      properties: 
        attemptNumber: 
          description: "Specifies the number of the attempts made by the Job Run\nto capture a snapshot of the object. For example, if an snapshot\nis successfully captured after three attempts, this field equals 3."
          type: "integer"
          format: "int64"
          x-go-name: "AttemptNumber"
        deltaSizeBytes: 
          description: "Specifies the size of the data captured from the source object.\nFor a full backup (where Change Block Tracking is not utilized)\nthis field is equal to logicalSizeBytes. For an incremental backup\n(where Change Block Tracking is utilized), this field specifies\nthe size of the data that has changed since the last backup."
          type: "integer"
          format: "int64"
          x-go-name: "DeltaSizeBytes"
        isAppConsistent: 
          description: "Specifies if an app-consistent snapshot was captured. For example,\nwas the VM was quiesced before the snapshot was captured."
          type: "boolean"
          x-go-name: "IsAppConsistent"
        isFullBackup: 
          description: "Specifies if the snapshot is a full backup. For example, all blocks\nof the VM is captured and Change Block Tracking is not utilized."
          type: "boolean"
          x-go-name: "IsFullBackup"
        jobRunId: 
          description: "Specifies the id of the Job Run that captured the snapshot."
          type: "integer"
          format: "int64"
          x-go-name: "JobRunId"
        localMountPath: 
          description: "Specifies the local path relative to the View, without the\nViewBox/View prefix."
          type: "string"
          x-go-name: "LocalMountPath"
        logicalSizeBytes: 
          description: "Specifies the size of the snapshot if the data\nis fully hydrated or expanded and not reduced\nby change-block tracking, compression and deduplication.\nFor example if a VMDK of size 100GB is created with thin provisioning\nand the disk size to store the VMDK is 20GB.\nThe logical size of this object is 100GB and the physical size is 20GB."
          type: "integer"
          format: "int64"
          x-go-name: "LogicalSizeBytes"
        physicalSizeBytes: 
          description: "Specifies the amount of data actually used on the disk to store this\nobject after being reduced by change-block tracking, compression and\ndeduplication."
          type: "integer"
          format: "int64"
          x-go-name: "PhysicalSizeBytes"
        primaryPhysicalSizeBytes: 
          description: "Specifies the total amount of disk space used to store this\nobject on the primary storage. For example the\ntotal amount of disk space used to store the VM files\n(such as the VMDK files) on the primary datastore."
          type: "integer"
          format: "int64"
          x-go-name: "PrimaryPhysicalSizeBytes"
        startedTimeUsecs: 
          description: "Specifies the time when the Job Run starts capturing a snapshot.\nSpecified as a Unix epoch Timestamp (in microseconds)."
          type: "integer"
          format: "int64"
          x-go-name: "StartedTimeUsecs"
      x-go-package: "cohesity/iris/server/data/public"
    SourceBackupStatus: 
      description: "Specifies the source object to protect and the current backup status."
      type: "object"
      title: "Source Object Backup Status."
      properties: 
        currentSnapshotInfo: 
          description: "Specifies details about the snapshot captured to backup the\nsource object (such as a VM)."
          $ref: "#/definitions/SnapshotInfo"
        error: 
          description: "Specifies if an error occurred (if any) while running this task.\nThis field is populated when the status is equal to 'kFailure'."
          type: "string"
          x-go-name: "Error"
        isFullBackup: 
          description: "Specifies whether this is a 'kFull' or 'kRegular' backup of the Run.\nThis may be true even if the scheduled backup type is 'kRegular'.\nThis will happen when this run corresponds to the first backup run of\nthe Job or if no previous snapshot information is found."
          type: "boolean"
          x-go-name: "IsFullBackup"
        numRestarts: 
          description: "Specifies the number of times the the task was restarted because of the\nchanges on the backup source host."
          type: "integer"
          format: "int32"
          x-go-name: "NumRestarts"
        parentSourceId: 
          description: "Specifies the id of the registered Protection Source that is the\nparent of the Objects that are protected by this Job Run."
          type: "integer"
          format: "int64"
          x-go-name: "ParentSourceId"
        quiesced: 
          description: "Specifies if app-consistent snapshot was captured. This field is set to\ntrue, if an app-consistent snapshot was taken by\nquiescing applications and the file system before taking a backup."
          type: "boolean"
          x-go-name: "Quiesced"
        slaViolated: 
          description: "Specifies if the SLA was violated for the Job Run. This field is set\nto true, if time to complete the Job Run is longer than the SLA\nspecified. This field is populated when the status is\nset to 'kSuccess' or 'kFailure'."
          type: "boolean"
          x-go-name: "SlaViolated"
        source: 
          description: "Specifies the source object to protect."
          $ref: "#/definitions/ProtectionSource"
        stats: 
          description: "Specifies the stats of the Backup Run task for the Protection Source."
          $ref: "#/definitions/BackupSourceStats"
        status: 
          description: "Specifies the status of the source object being protected.\n'kAccepted' indicates the task is queued to run but not yet running.\n'kRunning' indicates the task is running.\n'kCanceling' indicates a request to cancel the task has occurred but\nthe task is not yet canceled.\n'kCanceled' indicates the task has been canceled.\n'kSuccess' indicates the task was successful.\n'kFailure' indicates the task failed."
          type: "string"
          enum: 
            - "kAccepted"
            - "kRunning"
            - "kCanceling"
            - "kCanceled"
            - "kSuccess"
            - "kFailure"
          x-go-name: "Status"
        warnings: 
          description: "Specifies the warnings that occurred (if any) while running this task."
          type: "array"
          title: "Array of Warnings."
          items: 
            type: "string"
          x-go-name: "Warnings"
      x-go-package: "cohesity/iris/server/data/public"
    SourceForPrincipalParam: 
      description: "For the specified principal, grant access permissions to the\nthe specified Protection Sources and View names."
      type: "object"
      title: "Set Access Permissions for a Principal."
      properties: 
        protectionSourceIds: 
          description: "For the specified principal, grant access permissions to the\nProtection Sources listed in this array."
          type: "array"
          title: "Array of Protection Source Ids."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "ProtectionSourceIds"
        sid: 
          description: "Specifies the SID of the principal to grant access permissions to."
          type: "string"
          x-go-name: "Sid"
        viewNames: 
          description: "For the specified principal, grant access permissions to the\nViews names listed in this array."
          type: "array"
          title: "Array of View names."
          items: 
            type: "string"
          x-go-name: "ViewNames"
      x-go-package: "cohesity/iris/server/data/public"
    SourceSpecialParameter: 
      description: "Specifies additional special settings for a single Source in a Protection\nJob. This Source must be a leaf node in the Source tree."
      type: "object"
      title: "Source Special Parameters."
      properties: 
        physicalSpecialParameters: 
          description: "Specifies additional special parameters that are applicable only to\nSources of 'kHost' type in a kPhysical environment."
          $ref: "#/definitions/PhysicalSpecialParameters"
        skipIndexing: 
          description: "Specifies not to index the objects in the Protection Source when\nbacking up."
          type: "boolean"
          x-go-name: "SkipIndexing"
        sourceId: 
          description: "Specifies the object id of the Protection Source that these\nspecial settings apply. This field must refer to a leaf node\nsuch a VM or a Physical Server."
          type: "integer"
          format: "int64"
          x-go-name: "SourceId"
        sqlSpecialParameters: 
          description: "Specifies additional special parameters that are applicable only to\nProtection Sources of 'kSQL' type."
          $ref: "#/definitions/SqlSpecialParameters"
        truncateExchangeLog: 
          description: "If true, after the Cohesity Cluster successfully captures a Snapshot\nduring a Job Run, the Cluster truncates the Exchange transaction logs on\na Microsoft Exchange Server. The default value is false.\nThis field is deprecated. Use the field in ApplicationParameters inside\nsource specific parameter.\ndeprecated: true"
          type: "boolean"
          x-go-name: "TruncateExchangeLog"
        vmCredentials: 
          description: "Specifies the administrator credentials to log in to the\nguest Windows system of a VM that hosts the Microsoft Exchange Server.\nIf truncateExchangeLog is set to true and the specified source\nis a VM, administrator credentials to log in to the guest Windows system\nof the VM must be provided to truncate the logs.\nThis field is only applicable to Sources in the kVMware environment.\nThis field is deprecated. Use the field in VmCredentials inside\nsource specific parameter.\ndeprecated: true"
          type: "object"
          title: "VM Credentials."
          properties: 
            password: 
              description: "Specifies password of the username to access the target source."
              type: "string"
              x-go-name: "Password"
            username: 
              description: "Specifies username to access the target source."
              type: "string"
              x-go-name: "Username"
        vmwareSpecialParameters: 
          description: "Specifies additional special parameters that are applicable only to\nProtection Sources of 'kVMware' type."
          $ref: "#/definitions/VmwareSpecialParameters"
      x-go-package: "cohesity/iris/server/data/public"
    SourcesForSid: 
      description: "Specifies the Protection Sources objects and Views that the specified\nprincipal has permissions to access. The principal is specified using\na security identifier (SID)."
      type: "object"
      title: "Protection Sources and Views With Access Permissions."
      properties: 
        protectionSources: 
          description: "Specifies the Protection Source objects that the specified principal\nhas permissions to access."
          type: "array"
          title: "Array of Protection Sources."
          items: 
            $ref: "#/definitions/ProtectionSource"
          x-go-name: "ProtectionSources"
        sid: 
          description: "Specifies the security identifier (SID) of the principal."
          type: "string"
          x-go-name: "Sid"
        views: 
          description: "Specifies the names of the Views that the specified principal has\npermissions to access."
          type: "array"
          title: "Array of View Names."
          items: 
            $ref: "#/definitions/View"
          x-go-name: "Views"
      x-go-package: "cohesity/iris/server/data/public"
    SqlAagHostAndDatabases: 
      description: "Specifies AAGs and databases information on an SQL server. If AAGs exist\non the server, specifies information about the AAG and databases in the\ngroup for each AAG found on the server."
      type: "object"
      properties: 
        aagDatabases: 
          type: "array"
          title: "Specifies a list of AAGs and database members in each AAG."
          items: 
            $ref: "#/definitions/AagAndDatabases"
          x-go-name: "AagDatabases"
        applicationNode: 
          description: "Specifies the subtree used to store application-level Objects.\nDifferent environments use the subtree to store application-level\ninformation. For example for SQL Server, this subtree stores the\nSQL Server instances running on a VM or Physical hosts."
          $ref: "#/definitions/ProtectionSourceNode"
        databases: 
          description: "Specifies all database entities found on the server. Database may or\nmay not be in an AAG."
          type: "array"
          items: 
            $ref: "#/definitions/ProtectionSource"
          x-go-name: "Databases"
        errorMessage: 
          description: "Specifies an error message when the host is not registered as an SQL\nhost."
          type: "string"
          x-go-name: "ErrorMessage"
        unknownHostName: 
          description: "Specifies the name of the host that is not registered as an SQL server\non Cohesity Cluser."
          type: "string"
          x-go-name: "UnknownHostName"
      x-go-package: "cohesity/iris/server/data/public"
    SqlEnvJobParameters: 
      description: "Specifies job parameters applicable for all 'kSQL' Environment type\nProtection Sources in a Protection Job."
      type: "object"
      title: "Protection Job parameters applicable to 'kSQL' Environment type."
      properties: 
        aagPreference: 
          description: "kPrimaryReplicaOnly implies backups should always occur on the primary replica.\nkSecondaryReplicaOnly implies backups should always occur on the secondary replica.\nkPreferSecondaryReplica implies secondary replica is preferred for backups.\nkAnyReplica implies no preference of about whether backups are performed on the primary replica or on a secondary replica. If no secondary replica is available, then performing backups on the primary replica is acceptable."
          type: "string"
          enum: 
            - "kPrimaryReplicaOnly"
            - "kSecondaryReplicaOnly"
            - "kPreferSecondaryReplica"
            - "kAnyReplica"
          x-go-name: "AagPreference"
        aagPreferenceFromSqlServer: 
          description: "If true, AAG preferences are taken from the SQL server host. If this is\nset to false or not given, preferences can be overridden by\naagBackupPreference."
          type: "boolean"
          x-go-name: "AagPreferenceFromSqlServer"
        backupSystemDatabases: 
          description: "If true, system databases are backed up. If this is set to false,\nsystem databases are not backed up. If this field is not specified,\ndefault value is true."
          type: "boolean"
          x-go-name: "BackupSystemDatabases"
        backupType: 
          description: "kSqlVSSVolume implies volume based VSS full backup.\nkSqlVSSFile implies file based VSS full backup."
          type: "string"
          enum: 
            - "kSqlVSSVolume"
            - "kSqlVSSFile"
          x-go-name: "BackupType"
        backupVolumesOnly: 
          description: "If set to true, only the volumes associated with databases should be\nbacked up. The user cannot select additional volumes at host level for\nbackup.\n\nIf set to false, all the volumes on the host machine will be backed up.\nIn this case, the user can further select the exact set of volumes\nusing host level params.\n\nNote that the volumes associated with selected databases will always be\nincluded in the backup."
          type: "boolean"
          x-go-name: "BackupVolumesOnly"
        isCopyOnlyFull: 
          description: "If true, the backup is a full backup with the copy-only option specified."
          type: "boolean"
          x-go-name: "IsCopyOnlyFull"
        userDatabasePreference: 
          description: "kBackupAllDatabases implies to backup all databases.\nkBackupAllExceptAAGDatabases implies not to backup AAG databases.\nkBackupOnlyAAGDatabases implies to backup only AAG databases."
          type: "string"
          enum: 
            - "kBackupAllDatabases"
            - "kBackupAllExceptAAGDatabases"
            - "kBackupOnlyAAGDatabases"
          x-go-name: "UserDatabasePreference"
      x-go-package: "cohesity/iris/server/data/public"
    SqlProtectionSource: 
      description: "Specifies an Object representing one SQL Server instance or database."
      type: "object"
      title: "SQL Protection Source."
      properties: 
        IsAvailableForVssBackup: 
          description: "Specifies whether the database is marked as available for backup according\nto the SQL Server VSS writer. This may be false if either the state of\nthe databases is not online, or if the VSS writer is not online.\nThis field is set only for type 'kDatabase'."
          type: "boolean"
        createdTimestamp: 
          description: "Specifies the time when the database was created. It is displayed in the\ntimezone of the SQL server on which this database is running."
          type: "string"
          x-go-name: "CreatedTimestamp"
        databaseName: 
          description: "Specifies the database name of the SQL Protection Source, if the type\nis database."
          type: "string"
          x-go-name: "DatabaseName"
        dbAagEntityId: 
          description: "Specifies the AAG entity id if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
          type: "integer"
          format: "int64"
          x-go-name: "DbAagEntityId"
        dbAagName: 
          description: "Specifies the name of the AAG if the database is part of an AAG.\nThis field is set only for type 'kDatabase'."
          type: "string"
          x-go-name: "DbAagName"
        dbFiles: 
          description: "Specifies the last known information about the set of database files\non the host. This field is set only for type 'kDatabase'."
          type: "array"
          items: 
            $ref: "#/definitions/DbFileInfo"
          x-go-name: "DbFiles"
        id: 
          description: "Specifies an id that identifies an SQL Object."
          $ref: "#/definitions/SqlSourceId"
        name: 
          description: "Specifies the instance name of the SQL Protection Source"
          type: "string"
          x-go-name: "Name"
        ownerId: 
          description: "Specifies the id of the container VM for the SQL Protection Source."
          type: "integer"
          format: "int64"
          x-go-name: "OwnerId"
        recoveryModel: 
          description: "Specifies the Recovery Model for the database in SQL environment.\nOnly meaningful for the 'kDatabase' SQL Protection Source.\nSpecifies the Recovery Model set for the Microsoft SQL Server.\n'kSimpleRecoveryModel' indicates the Simple SQL Recovery Model which\ndoes not utilize log backups.\n'kFullRecoveryModel' indicates the Full SQL Recovery Model which\nrequires log backups and allows recovery to a single point in time.\n'kBulkLoggedRecoveryModel' indicates the Bulk Logged SQL Recovery Model\nwhich requires log backups and allows high-performance bulk copy operations."
          type: "string"
          enum: 
            - "kSimpleRecoveryModel"
            - "kFullRecoveryModel"
            - "kBulkLoggedRecoveryModel"
          x-go-name: "RecoveryModel"
        sqlServerDbState: 
          description: "The state of the database as returned by SQL Server."
          type: "integer"
          format: "int32"
          x-go-name: "SqlServerDbState"
        type: 
          description: "Specifies the type of the managed Object in a SQL Protection Source.\nExamples of SQL Objects include 'kInstance' and 'kDatabase'."
          type: "string"
          enum: 
            - "kInstance"
            - "kDatabase"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    SqlRestoreParameters: 
      description: "Specifies the parameters specific the Application Server instance."
      type: "object"
      title: "SQL Application Server Restore Parameters."
      properties: 
        captureTailLogs: 
          description: "Set this to true if tail logs are to be captured before the restore\noperation. This is only applicable if we are restoring the SQL database\nto its hosting Protection Source, and the database is not being renamed."
          type: "boolean"
          x-go-name: "CaptureTailLogs"
        keepOffline: 
          description: "Set this to true if we want to restore the database and do not want to\nbring it online after restore.\n\nThis is only applicable if we are restoring the database back to\nits original location."
          type: "boolean"
          x-go-name: "KeepOffline"
        newDatabaseName: 
          description: "Specifies optionally a new name for the restored database."
          type: "string"
          x-go-name: "NewDatabaseName"
        newInstanceName: 
          description: "Specifies an instance name of the SQL Server that should be restored.\nSQL application has many instances. Each instance has a unique name.\nOne of the instances that should be restored must be set in this field."
          type: "string"
          x-go-name: "NewInstanceName"
        restoreTimeSecs: 
          description: "Specifies the time in the past to which the SQL database needs to be\nrestored. This allows for granular recovery of SQL databases. If this is\nnot set, the SQL database will be restored from the full/incremental\nsnapshot."
          type: "integer"
          format: "int64"
          x-go-name: "RestoreTimeSecs"
        targetDataFilesDirectory: 
          description: "Specifies the directory where to put the database data files.\nMissing directory will be automatically created. This field must be\nset if restoring to a different target host."
          type: "string"
          x-go-name: "TargetDataFilesDirectory"
        targetLogFilesDirectory: 
          description: "Specifies the directory where to put the database log files. Missing\ndirectory will be automatically created. This field must be set if\nrestoring to a different target host."
          type: "string"
          x-go-name: "TargetLogFilesDirectory"
        targetSecondaryDataFilesDirectoryList: 
          description: "If this option is specified and the destination folders do not exist they\nwill be automatically created."
          type: "array"
          title: "Specifies the secondary data filename pattern and corresponding\ndirecories of the DB. Secondary data files are optional and are user\ndefined. The recommended file extention for secondary files is \".ndf\"."
          items: 
            $ref: "#/definitions/FilenamePatternToDirectory"
          x-go-name: "TargetSecondaryDataFilesDirectoryList"
      x-go-package: "cohesity/iris/server/data/public"
    SqlSourceId: 
      description: "Specifies a unique id for a SQL Protection Source."
      type: "object"
      title: "SQL Source Id."
      properties: 
        createdDateMsecs: 
          description: "Specifies a unique identifier generated from the date the database is\ncreated or renamed.\nCohesity uses this identifier in combination with the databaseId\nto uniquely identify a database."
          type: "integer"
          format: "int64"
          x-go-name: "CreatedDateMsecs"
        databaseId: 
          description: "Specifies a unique id of the database but only for the life of the\ndatabase. SQL Server may reuse database ids. Cohesity uses the\ncreateDateMsecs in combination with this databaseId to\nuniquely identify a database."
          type: "integer"
          format: "int64"
          x-go-name: "DatabaseId"
        instanceId: 
          description: "Specifies unique id for the SQL Server instance.\nThis id does not change during the life of the instance."
          type: "array"
          title: "Array of bytes that stores the SQL Server Instance id."
          items: 
            type: "integer"
            format: "uint8"
          x-go-name: "InstanceId"
      x-go-package: "cohesity/iris/server/data/public"
    SqlSpecialParameters: 
      description: "Specifies additional special settings applicable for a Protection Source\nof 'kSQL' type in a Protection Job."
      type: "object"
      title: "Protection Job parameters applicable for a 'kSQL' Protection Source."
      properties: 
        applicationEntityIds: 
          description: "Specifies the subset of application entities like SQL instances, and\ndatabases to protect in a Protection Source of type 'kSQL'. If not\nspecified, all application entities on the Protection Source."
          type: "array"
          title: "Array of Ids of Application Entities like SQL instances, and databases\nthat should be protected in a Protection Source."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "ApplicationEntityIds"
      x-go-package: "cohesity/iris/server/data/public"
    SslCertificateConfig: 
      description: "SslCertificateConfig represents the SSL certificate object exposed to the\nuser."
      type: "object"
      properties: 
        certificate: 
          description: "Certificate is a SSL certificate used by Iris HTTPS webserver.\nTODO(gaurav): Consider using multipart form for certificate file."
          type: "string"
          x-go-name: "Certificate"
        lastUpdateTimeMsecs: 
          description: "LastUpdateTimeMsecs is a time in milliseconds at which certificate was\nlast updated."
          type: "integer"
          format: "int64"
          x-go-name: "LastUpdateTimeMsecs"
        privateKey: 
          description: "PrivateKey is a matching private key of the above certificate."
          type: "string"
          x-go-name: "PrivateKey"
      x-go-package: "cohesity/iris/server/data/public"
    StaticRoute: 
      description: "Specifies the settings of a Static Route."
      type: "object"
      title: "Static Route."
      properties: 
        description: 
          description: "Specifies a description of the Static Route."
          type: "string"
          x-go-name: "Description"
        isUpdate: 
          description: "Specifies if the route is currently being updated on the Cohesity Cluster."
          type: "boolean"
          x-go-name: "IsUpdate"
        networkInterfaceGroup: 
          description: "Specifies the group name of the network interfaces to\nuse for communicating with the destination subnet."
          type: "string"
          x-go-name: "NetworkInterfaceGroup"
        networkInterfaceIds: 
          description: "Specifies the ids of the network interfaces to use for\ncommunicating with the destination subnet."
          type: "array"
          title: "Array of Network Interface Ids."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "NetworkInterfaceIds"
        subnet: 
          description: "Specifies the destination subnet of the Static Route.\nThe netmask can be specified by setting netmaskBits or netmaskIp4.\nThe netmask can only be set using netmaskIp4 if the IP address is\nan IPv4 address."
          type: "object"
          title: "Destination Subnet."
          properties: 
            description: 
              description: "Description of the subnet."
              type: "string"
              x-go-name: "Description"
            ip: 
              description: "Specifies either an IPv6 address or an IPv4 address."
              type: "string"
              x-go-name: "Ip"
            netmaskBits: 
              description: "Specifies the netmask using bits."
              type: "integer"
              format: "int32"
              x-go-name: "NetmaskBits"
            netmaskIp4: 
              description: "Specifies the netmask using an IP4 address.\nThe netmask can only be set using netmaskIp4 if the IP address\nis an IPv4 address."
              type: "string"
              x-go-name: "NetmaskIp4"
        vlanId: 
          description: "Specifies the ID of the VLAN to use for communication with the\ndestination subnet."
          type: "integer"
          format: "int32"
          x-go-name: "VlanId"
      x-go-package: "cohesity/iris/server/data/public"
    StopRemoteVaultSearchJobParameters: 
      description: "Request to stop a remote Vault search Job."
      type: "object"
      title: "Search Job Stop Request."
      properties: 
        searchJobUid: 
          description: "Specifies the unique id of the Remote Vault search job in progress."
          type: "object"
          title: "Unique Global Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
      x-go-package: "cohesity/iris/server/data/public"
    StorageEfficiencyTile: 
      type: "object"
      properties: 
        dataInBytes: 
          description: "Data brought into the cluster. This is the usage before data reduction if\nwe ignore the zeroes and effects of cloning."
          type: "integer"
          format: "int64"
          x-go-name: "DataInBytes"
        dataInDedupedBytes: 
          description: "Morphed Usage before data is replicated to other nodes as per RF or\nErasure Coding policy."
          type: "integer"
          format: "int64"
          x-go-name: "DataInDedupedBytes"
        dataReduction: 
          description: "Data Reduction is the ratio of DataInBytes to DataInDedupBytes."
          type: "integer"
          format: "int64"
          x-go-name: "DataReduction"
        lastWeekDataInBytes: 
          type: "array"
          title: "Data brought into the cluster in last 7 days in descending order of time."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "LastWeekDataInBytes"
        lastWeekDataInDedupedBytes: 
          description: "Morphed usage before data is replicated in last 7 days in descening order\nof time."
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "LastWeekDataInDedupedBytes"
        lastWeekDataReduction: 
          type: "array"
          title: "Data Reduction ratio is last 7 days in descending order of time."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "LastWeekDataReduction"
        lastWeekLogicalUsedBytes: 
          type: "array"
          title: "Logical Used in Bytes per day in last 7 days in descending order of time."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "LastWeekLogicalUsedBytes"
        lastWeekPhysicalUsedBytes: 
          type: "array"
          title: "Physical used in Bytes per day in last 7 days in descending order of time."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "LastWeekPhysicalUsedBytes"
        lastWeekStorageEfficiency: 
          type: "array"
          title: "Storage Efficiency ration in last 7 days in descending order of time."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "LastWeekStorageEfficiency"
        logicalUsedBytes: 
          description: "Logical Data used on the cluster."
          type: "integer"
          format: "int64"
          x-go-name: "LogicalUsedBytes"
        storageEfficiency: 
          description: "Storage Efficiency is the ratio of LogicalUsedBytes / RawUsedBytes."
          type: "integer"
          format: "int64"
          x-go-name: "StorageEfficiency"
      x-go-package: "cohesity/iris/server/data/public"
    StoragePolicy: 
      description: "Specifies the storage options applied to a Storage Domain (View Box)."
      type: "object"
      title: "Storage Policy."
      properties: 
        cloudSpillVaultId: 
          description: "Specifies the vault id assigned for an external Storage\nTarget to facilitate cloud spill."
          type: "integer"
          format: "int64"
          x-go-name: "CloudSpillVaultId"
        compressionPolicy: 
          description: "Specifies the compression setting to be applied to a Storage Domain\n(View Box).\n'kCompressionNone' indicates that data is not compressed.\n'kCompressionLow' indicates that data is compressed."
          type: "string"
          enum: 
            - "kCompressionNone"
            - "kCompressionLow"
          x-go-name: "Compression"
        deduplicateCompressDelaySecs: 
          description: "Specifies the time in seconds when deduplication and compression\nof data on the Storage Domain (View Box) starts.\nIf set to 0, deduplication and compression is done inline\n(as the data is being written).\nOtherwise, post-process deduplication and compression is done after the\nspecified delay."
          type: "integer"
          format: "int32"
          x-go-name: "DeduplicateCompressDelaySecs"
        deduplicationEnabled: 
          description: "Specifies if deduplication is enabled for the Storage Domain (View Box).\nIf deduplication is enabled, the Cohesity Cluster eliminates\nduplicate blocks of repeating data stored on the Cluster\nthus reducing the amount of storage space needed to store data."
          type: "boolean"
          x-go-name: "DeduplicationEnabled"
        encryptionPolicy: 
          description: "Specifies the encryption setting for the Storage Domain (View Box).\n'kEncryptionNone' indicates the data is not encrypted.\n'kEncryptionStrong' indicates the data is encrypted."
          type: "string"
          enum: 
            - "kEncryptionNone"
            - "kEncryptionStrong"
          x-go-name: "EncryptionLevel"
        erasureCodingInfo: 
          description: "Specifies information about erasure coding algorithm if erasure coding is\nenabled."
          $ref: "#/definitions/ErasureCodingInfo"
        inlineCompress: 
          description: "Specifies if compression should occur inline (as the data is being\nwritten). This field is only relevant if compression is enabled. If\ndeduplication is set to inline, Cohesity recommends setting compression to\ninline."
          type: "boolean"
          x-go-name: "InlineCompress"
        inlineDeduplicate: 
          description: "Specifies if deduplication should occur inline (as the data is being\nwritten). This field is only relevant if deduplication is enabled."
          type: "boolean"
          x-go-name: "InlineDeduplicate"
        numFailuresTolerated: 
          description: "Number of failures to tolerate. This is an optional field. Default value\nis 1 for cluster having 3 or more nodes. If erasure coding is not enabled,\nthen this specifies the replication factor for the Storage Domain (View Box).\nFor RF=2, number of failures to tolerate should be specified as 1. If\nerasure coding is enabled, then this value will be same as number of coded\nstripes."
          type: "integer"
          format: "int32"
          x-go-name: "NumFailuresTolerated"
      x-go-package: "cohesity/iris/server/data/public"
    StoragePolicyOverride: 
      description: "Specifies if inline deduplication and compression settings inherited from\nStorage Domain (View Box) should be disabled for this View."
      type: "object"
      title: "Storage Policy Override."
      properties: 
        disableInlineDedupAndCompression: 
          description: "If false, the inline deduplication and compression settings inherited\nfrom the Storage Domain (View Box) apply to this View.\nIf true, both inline deduplication and compression are disabled for this\nView. This can only be set to true if inline deduplication is set for\nthe Storage Domain (View Box)."
          type: "boolean"
          x-go-name: "DisableInlineDedupAndCompression"
      x-go-package: "cohesity/iris/server/data/public"
    Subnet: 
      description: "Defines a Subnet (Subnetwork).\nThe netmask can be specified by setting netmaskBits or netmaskIp4.\nThe netmask can only be set using netmaskIp4 if the IP address\nis an IPv4 address."
      type: "object"
      title: "Subnet"
      properties: 
        description: 
          description: "Description of the subnet."
          type: "string"
          x-go-name: "Description"
        ip: 
          description: "Specifies either an IPv6 address or an IPv4 address."
          type: "string"
          x-go-name: "Ip"
        netmaskBits: 
          description: "Specifies the netmask using bits."
          type: "integer"
          format: "int32"
          x-go-name: "NetmaskBits"
        netmaskIp4: 
          description: "Specifies the netmask using an IP4 address.\nThe netmask can only be set using netmaskIp4 if the IP address\nis an IPv4 address."
          type: "string"
          x-go-name: "NetmaskIp4"
      x-go-package: "cohesity/iris/server/data/public"
    SupportedConfig: 
      description: "Lists the supported Erasure Coding options for the number of\nNodes in the Cohesity Cluster. In addition, the minimum number\nof Nodes supported for this Cluster type is defined."
      type: "object"
      title: "Supported Erasure Coding and Node Configurations."
      properties: 
        minNodesAllowed: 
          description: "Specifies the minimum number of Nodes supported for this Cluster type.\nFor example, a Cohesity Cluster hosted directly on hardware must have at\nleast 3 Nodes."
          type: "integer"
          format: "int32"
          x-go-name: "MinNodesAllowed"
        supportedErasureCoding: 
          description: "List the supported Erasure Coding options for the current number of\nNodes (nodeCount) in this Cluster.\nEach string in the array is in the following format:\n\"NumDataStripes:NumCodedStripes\"\nFor example if there are 3 nodes in the Cluster, the following\nErasure Coding mode is returned: 2:1.\nSee the Cohesity Dashboard help documentation for details."
          type: "array"
          title: "Array of Supported Erasure Coding Options."
          items: 
            type: "string"
          x-go-name: "SupportedErasureCoding"
      x-go-package: "cohesity/iris/server/data/public"
    SyslogServer: 
      description: "Specifies the syslog servers configuration to upload Cluster\naudit logs and filer audit logs."
      type: "object"
      title: "Syslog Server Configuration."
      required: 
        - "address"
        - "port"
        - "protocol"
      properties: 
        address: 
          description: "Specifies the IP address or hostname of the syslog server."
          type: "string"
          x-go-name: "Address"
        isClusterAuditingEnabled: 
          description: "Specifies if Cluster audit logs should be sent to this syslog server.\nIf 'true', Cluster audit logs are sent to the syslog server. (default)\nIf 'false', Cluster audit logs are not sent to the syslog server.\nEither cluster audit logs or filer audit logs should be enabled."
          type: "boolean"
          x-go-name: "IsClusterAuditingEnabled"
        isFilerAuditingEnabled: 
          description: "Specifies if filer audit logs should be sent to this syslog server.\nIf 'true', filer audit logs are sent to the syslog server. (default)\nIf 'false', filer audit logs are not sent to the syslog server.\nEither cluster audit logs or filer audit logs should be enabled."
          type: "boolean"
          x-go-name: "IsFilerAuditingEnabled"
        name: 
          description: "Specifies a unique name for the syslog server on the Cluster."
          type: "string"
          x-go-name: "Name"
        port: 
          description: "Specifies the port where the syslog server listens."
          type: "integer"
          format: "int32"
          x-go-name: "Port"
        protocol: 
          description: "Specifies the protocol used to send the logs.\nSpecifies the protocol used to communicate to a server.\ne.g., kUDP, kTCP.\n\n'kUDP' indicates UDP protocol.\n'kTCP' indicates TCP protocol."
          type: "string"
          enum: 
            - "kUDP"
            - "kTCP"
          x-go-name: "Protocol"
      x-go-package: "cohesity/iris/server/data/public"
    TableOfContents: 
      description: "Returned by ImportList."
      type: "object"
      title: "Struct that defines the Table of Contents Layout."
      properties: 
        activeDirectory: 
          type: "array"
          items: 
            type: "string"
          x-go-name: "ActiveDirectory"
        cluster: 
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "Cluster"
        group: 
          type: "array"
          items: 
            type: "string"
          x-go-name: "Group"
        partition: 
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "Partition"
        principalSource: 
          type: "array"
          items: 
            type: "string"
          x-go-name: "PrincipalSource"
        protectionJob: 
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "ProtectionJob"
        protectionPolicy: 
          type: "array"
          items: 
            type: "string"
          x-go-name: "ProtectionPolicy"
        protectionSource: 
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "ProtectionSource"
        remoteCluster: 
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "RemoteCluster"
        role: 
          type: "array"
          items: 
            type: "string"
          x-go-name: "Role"
        sql: 
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "Sql"
        user: 
          type: "array"
          items: 
            type: "string"
          x-go-name: "User"
        vault: 
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "Vault"
        view: 
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "View"
        viewBox: 
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "ViewBox"
      x-go-package: "cohesity/iris/server/data/public"
    TagAttribute: 
      description: "Specifies a VMware tag."
      type: "object"
      title: "VMware Tag Attributes."
      properties: 
        id: 
          description: "Specifies the Coheisty id of the VM tag."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        name: 
          description: "Specifies the VMware name of the VM tag."
          type: "string"
          x-go-name: "Name"
        uuid: 
          description: "Specifies the VMware Universally Unique Identifier (UUID) of the\nVM tag."
          type: "string"
          x-go-name: "Uuid"
      x-go-package: "cohesity/iris/server/data/public"
    TapeMediaInformation: 
      type: "object"
      title: "Provides information about a single tape media in a QStar Archive Vault."
      properties: 
        barcode: 
          description: "Specifies a unique identifier for the media."
          type: "string"
          x-go-name: "Barcode"
        location: 
          description: "Specifies the location of the offline media as recorded by the\nbackup administrator using media management software."
          type: "string"
          x-go-name: "Location"
        online: 
          description: "Specifies a flag that indicates if the media is online or offline.\nOffline media must be manually loaded into the media library\nbefore a recovery can occur."
          type: "boolean"
          x-go-name: "Online"
      x-go-package: "cohesity/iris/server/data/public"
    TaskNotification: 
      type: "object"
      title: "Protobuf that captures Task Notifications for a user."
      properties: 
        createdTimeMsecs: 
          description: "Timestamp at which the notification was created."
          type: "integer"
          format: "int64"
          x-go-name: "CreatedTimeMsecs"
        description: 
          description: "Description holds the actual notification text generated for\nthe event."
          type: "string"
          x-go-name: "Description"
        dismissed: 
          description: "Dismissed keeps track of whether a notification has been seen\nor not. User may choose to dismiss individual event or all\nnotifications at once. Nil or 0 value represents false."
          type: "integer"
          format: "int64"
          x-go-name: "Dismissed"
        dismissedTimeMsecs: 
          description: "Timestamp at which user dismissed this notification event"
          type: "integer"
          format: "int64"
          x-go-name: "DismissedTimeMsecs"
        entityId: 
          description: "Entity fields will help clients navigate to the source page\nfrom where the notification event originated."
          type: "integer"
          format: "int64"
          x-go-name: "EntityId"
        entityType: 
          type: "string"
          x-go-name: "EntityType"
        notificationId: 
          description: "NotificationId identifies a user notification event uniquely.\nThis can also be used to dismiss individual notifications."
          type: "string"
          x-go-name: "NotificationId"
      x-go-package: "iris/base/notifications.pb"
    ThrottlingPolicy: 
      description: "Specifies the throttling policy for a registered Protection Source."
      type: "object"
      title: "Throttling Policy."
      properties: 
        enforceMaxStreams: 
          description: "Specifies whether datastore streams are configured for all datastores\nthat are part of the registered entity. If set to true, number of\nstreams from Cohesity cluster to the registered entity will be limited\nto the value set for maxConcurrentStreams. If not set or set to false,\nthere is no max limit for the number of concurrent streams."
          type: "boolean"
          x-go-name: "EnforceMaxStreams"
        isEnabled: 
          description: "Indicates whether read operations to the datastores, which are\npart of the registered Protection Source, are throttled."
          type: "boolean"
          x-go-name: "IsEnabled"
        latencyThresholds: 
          description: "Specifies the thresholds that should be applied to all\ndatastores that are part of the registered Object."
          $ref: "#/definitions/LatencyThresholds"
        maxConcurrentStreams: 
          description: "Specifies the limit on the number of streams Cohesity cluster will make\nconcurrently to the datastores of the registered entity. This limit is\nenforced only when the flag enforceMaxStreams is set to true."
          type: "integer"
          format: "int32"
          x-go-name: "MaxConcurrentStreams"
      x-go-package: "cohesity/iris/server/data/public"
    ThrottlingPolicyOverride: 
      type: "object"
      title: "Specifies throttling policy override for a Datastore in a registered entity."
      properties: 
        datastoreId: 
          description: "Specifies the Protection Source id of the Datastore."
          type: "integer"
          format: "int64"
          x-go-name: "DatastoreId"
        datastoreName: 
          description: "Specifies the display name of the Datastore."
          type: "string"
          x-go-name: "DatastoreName"
        throttlingPolicy: 
          description: "Specifies the throttling policy that should be applied to this Source."
          $ref: "#/definitions/ThrottlingPolicy"
      x-go-package: "cohesity/iris/server/data/public"
    ThroughputTile: 
      type: "object"
      title: "Throughput information for dashboard."
      properties: 
        maxReadThroughput: 
          description: "Maxium Read throughput in last 24 hours."
          type: "integer"
          format: "int64"
          x-go-name: "MaxReadThroughput"
        maxWriteThroughput: 
          description: "Maximum Write throughput in last 24 hours."
          type: "integer"
          format: "int64"
          x-go-name: "MaxWriteThroughput"
        readThroughputSamples: 
          description: "Read throughput samples taken for the past 24 hours at 10 minutes\ninterval given in descending order of time."
          type: "array"
          items: 
            $ref: "#/definitions/Sample"
          x-go-name: "ReadThroughputSamples"
        writeThroughputSamples: 
          description: "Write throughput samples taken for the past 24 hours at 10 minutes\ninterval given in descending order of time."
          type: "array"
          items: 
            $ref: "#/definitions/Sample"
          x-go-name: "WriteThroughputSamples"
      x-go-package: "cohesity/iris/server/data/public"
    TimeOfAWeek: 
      description: "Specifies a time period by specifying a single daily time period\nand one or more days of the week, for example 9 AM - 5 PM\non Monday, Wednesday or Friday. If different time periods are required\non different days, then multiple instances of this Weekly Time Period\nmust be specified."
      type: "object"
      title: "Time Period."
      properties: 
        days: 
          description: "Specifies a list of days of a week (such as 'kSunday') when the\ntime period should be applied.\nIf not set, the time range applies to all days of the week.\nSpecifies a day in a week such as 'kSunday', 'kMonday', etc."
          type: "array"
          title: "Array of Week Days."
          items: 
            type: "string"
            enum: 
              - "kSunday"
              - "kMonday"
              - "kTuesday"
              - "kWednesday"
              - "kThursday"
              - "kFriday"
              - "kSaturday"
          x-go-name: "Days"
        endTime: 
          description: "Specifies the end time for the daily time period."
          type: "object"
          title: "End Time."
          properties: 
            hour: 
              description: "Specifies an (0-23) hour in a day."
              type: "integer"
              format: "int32"
              x-go-name: "Hour"
            minute: 
              description: "Specifies a (0-59) minute in an hour."
              type: "integer"
              format: "int32"
              x-go-name: "Minute"
        startTime: 
          description: "Specifies the start time for the daily time period."
          type: "object"
          title: "Start Time."
          properties: 
            hour: 
              description: "Specifies an (0-23) hour in a day."
              type: "integer"
              format: "int32"
              x-go-name: "Hour"
            minute: 
              description: "Specifies a (0-59) minute in an hour."
              type: "integer"
              format: "int32"
              x-go-name: "Minute"
      x-go-package: "cohesity/iris/server/data/public"
    TimeOfDay: 
      description: "Specifies a time in day with hours and minutes."
      type: "object"
      title: "Time of Day."
      properties: 
        hour: 
          description: "Specifies an (0-23) hour in a day."
          type: "integer"
          format: "int32"
          x-go-name: "Hour"
        minute: 
          description: "Specifies a (0-59) minute in an hour."
          type: "integer"
          format: "int32"
          x-go-name: "Minute"
      x-go-package: "cohesity/iris/server/data/public"
    UniversalId: 
      description: "Specifies an id for an object that is unique across Cohesity Clusters.\nThe id is composite of all the ids listed below."
      type: "object"
      title: "Unique Global Id."
      properties: 
        clusterId: 
          description: "Specifies the Cohesity Cluster id where the object was created."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterId"
        clusterIncarnationId: 
          description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterIncarnationId"
        id: 
          description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
      x-go-package: "cohesity/iris/server/data/public"
    UpdateApplicationServerParameters: 
      description: "Specifies the parameters required to modify the parameters of previously\nregistered Application Servers in a Protection Source."
      type: "object"
      properties: 
        applications: 
          description: "Specifies the types of applications such as 'kSQL', 'kExchange' running\non the Protection Source.\noverrideDescription: true\nSupported environment types include 'kView', 'kSQL', 'kVMware',\n'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV',\n'kAcropolis', 'kAzure'.\nNOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter."
          type: "array"
          items: 
            type: "string"
            enum: 
              - "kVMware"
              - "kSQL"
              - "kView"
              - "kPuppeteer"
              - "kPhysical"
              - "kPure"
              - "kNetapp"
              - "kGenericNas"
              - "kHyperV"
              - "kAcropolis"
              - "kAzure"
          x-go-name: "Applications"
        hasPersistentAgent: 
          description: "Set this to true if a persistent agent is running on the host. If this is\nspecified, then credentials would not be used to log into the host\nenvironment. This mechanism may be used in environments such as VMware\nto get around UAC permission issues by running the agent as a service\nwith the right credentials. If this field is not specified, credentials\nmust be specified."
          type: "boolean"
          x-go-name: "HasPersistentAgent"
        password: 
          description: "Specifies password of the username to access the target source."
          type: "string"
          x-go-name: "Password"
        protectionSourceId: 
          description: "Specifies the Id of the Protection Source that contains one or more\nApplication Servers running on it."
          type: "integer"
          format: "int64"
          x-go-name: "ProtectionSourceId"
        username: 
          description: "Specifies username to access the target source."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    UpdateClusterParams: 
      description: "Specifies the configuration settings that can be updated on the\nCohesity Cluster."
      type: "object"
      title: "Update Cluster."
      properties: 
        bondingMode: 
          description: "Specifies the bonding mode to use when bonding NICs to this Cluster.\n'KActiveBackup' indicates an Active-backup policy bonding mode.\n'K802_3ad' indicates an EEE 802.3ad Dynamic link aggregation bonding mode.\n'KBalanceAlb' indicates a Adaptive load balancing bonding mode."
          type: "string"
          enum: 
            - "ActiveBackup"
            - "802_3ad"
            - "BalanceAlb"
          x-go-name: "BondingMode"
        clusterAuditLogConfig: 
          description: "Cluster Audit Log Configuration."
          $ref: "#/definitions/ClusterAuditLogConfiguration"
        dnsServerIps: 
          description: "Specifies the IP addresses of the DNS Servers used by the Cohesity\nCluster."
          type: "array"
          title: "Array of IP Addresses of DNS Servers."
          items: 
            type: "string"
          x-go-name: "DnsServerIps"
        domainNames: 
          description: "The first domain name specified in the array is the fully qualified\ndomain name assigned to the Cohesity Cluster. Any additional\ndomain names specified are used for the domain search list for\nhostname look-up."
          type: "array"
          title: "Array of Domain Names."
          items: 
            type: "string"
          x-go-name: "DomainNames"
        enableActiveMonitoring: 
          description: "Specifies if Cohesity can receive monitoring information from the\nCohesity Cluster.\nIf 'true', remote monitoring of the Cohesity Cluster is allowed."
          type: "boolean"
          x-go-name: "EagleConfigEnableAgent"
        enableUpgradePkgPolling: 
          description: "If 'true', Cohesity's upgrade server is polled for new releases."
          type: "boolean"
          x-go-name: "HaloServerEnabled"
        encryptionKeyRotationPeriodSecs: 
          description: "Specifies the period of time (in seconds) when encryption keys are rotated.\nBy default, the encryption keys are rotated every 77760000 seconds\n(30 days)."
          type: "integer"
          format: "int64"
          x-go-name: "EncryptionKeyRotationPeriodSecs"
        filerAuditLogConfig: 
          description: "Filer Audit Log Configuration."
          $ref: "#/definitions/FilerAuditLogConfiguration"
        gateway: 
          description: "Specifies the gateway IP address."
          type: "string"
          x-go-name: "Gateway"
        isDocumentationLocal: 
          description: "Specifies what version of the documentation is used.\nIf 'true', the version of documentation stored locally on the Cohesity\nCluster is used.\nIf 'false', the documentation stored on a Cohesity Web Server\nis used. The default is 'false'.\nCohesity recommends accessing the Help from the Cohesity Web site which\nprovides the newest and most complete version of Help."
          type: "boolean"
          x-go-name: "IsDocumentationLocal"
        languageLocale: 
          description: "Specifies the language and locale for this Cohesity Cluster."
          type: "string"
          x-go-name: "LanguageLocale"
        mtu: 
          description: "Specifies the Maxium Transmission Unit (MTU) in bytes of\nthe network."
          type: "integer"
          format: "int32"
          x-go-name: "Mtu"
        name: 
          description: "Specifies the name of the Cohesity Cluster."
          type: "string"
          x-go-name: "Name"
        ntpSettings: 
          description: "Specifies if the ntp/master slave scheme should be disabled for this\ncluster."
          $ref: "#/definitions/NtpSettingsConfig"
        reverseTunnelEnabled: 
          description: "If 'true', Cohesity's Remote Tunnel is enabled.\nCohesity can access the Cluster and provide remote assistance\nvia a Remote Tunnel."
          type: "boolean"
          x-go-name: "ReverseTunnelEnabled"
        smbAdDisabled: 
          description: "Specifies if Active Directory should be disabled for authentication of SMB\nshares. If 'true', Active Directory is disabled."
          type: "boolean"
          x-go-name: "SmbAdDisabled"
        syslogServers: 
          description: "Specifies a list of Syslog servers to send audit logs to."
          type: "array"
          title: "Array of Syslog Servers."
          items: 
            $ref: "#/definitions/SyslogServer"
          x-go-name: "SyslogServers"
        timezone: 
          description: "Specifies the timezone to use for showing time in emails, reports,\nfiler audit logs, etc."
          type: "string"
          x-go-name: "Timezone"
        turboMode: 
          description: "Specifies if the cluster is in Turbo mode."
          type: "boolean"
          x-go-name: "TurboMode"
      x-go-package: "cohesity/iris/server/data/public"
    UpdateMachineAccountsParams: 
      description: "Specifies the parameters required to update the machine accounts of an\nactive directory."
      type: "object"
      properties: 
        machineAccounts: 
          description: "Specifies an array of computer names used to identify the Cohesity\nCluster on the domain."
          type: "array"
          title: "Array of Machine Accounts."
          items: 
            type: "string"
          x-go-name: "MachineAccounts"
        overwriteExistingAccounts: 
          description: "Specifies whether the specified machine accounts should overwrite the\nexisting machine accounts in this domain."
          type: "boolean"
          x-go-name: "OverwriteExistingAccounts"
        password: 
          description: "Specifies the password for the specified userName."
          type: "string"
          x-go-name: "Password"
        userName: 
          description: "Specifies a userName that has administrative privileges in the domain."
          type: "string"
          x-go-name: "UserName"
      x-go-package: "cohesity/iris/server/data/public"
    UpdateProtectionJobRun: 
      description: "Specifies a Job Run and the expiration time to update. The expiration\ntime defines the retention period for the Job Run and its snapshots."
      type: "object"
      title: "Update Expiration for a Protection Job Run."
      properties: 
        copyRunTargets: 
          description: "Specifies the retention for archival, replication or extended local\nretention."
          type: "array"
          items: 
            $ref: "#/definitions/RunJobSnapshotTarget"
          x-go-name: "CopyRunTargets"
        expiryTimeUsecs: 
          description: "Specifies a new expiration time as a Unix epoch Timestamp\n(in microseconds). This expiration time defines the\nretention period for the snapshot.\nAfter an expiration time for a Job Run is reached, the Job Run\nand the snapshot captured by this Job Run are deleted.\nIf 0 is specified, the Job Run and the snapshot are immediately deleted."
          type: "integer"
          format: "int64"
          x-go-name: "ExpiryTimeUsecs"
        jobUid: 
          description: "Specifies a unique universal id for the Job."
          type: "object"
          title: "Unique Global Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        runStartTimeUsecs: 
          description: "Specifies the start time of the Job Run to update. The start time\nis specified as a Unix epoch Timestamp (in microseconds).\nThis uniquely identifies a snapshot. This parameter is required."
          type: "integer"
          format: "int64"
          x-go-name: "RunStartTimeUsecs"
        sourceIds: 
          description: "Ids of the Protection Sources. If this is specified, retention time will\nonly be updated for the sources specified."
          type: "array"
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "SourceIds"
      x-go-package: "cohesity/iris/server/data/public"
    UpdateProtectionJobRunsParam: 
      description: "Specifies the Job Runs to update with a new expiration times."
      type: "object"
      title: "Update Expirations for Protection Job Runs Request."
      properties: 
        jobRuns: 
          description: "Specifies the Job Runs to update with a new expiration times."
          type: "array"
          title: "Array of Job Runs."
          items: 
            $ref: "#/definitions/UpdateProtectionJobRun"
          x-go-name: "JobRuns"
      x-go-package: "cohesity/iris/server/data/public"
    UpdateResolutionParams: 
      description: "Apply an existing Resolution to a new list of Alerts,\nwhich are specified by Alert Ids."
      type: "object"
      title: "Update Alert Resolution Request."
      properties: 
        alertIdList: 
          description: "Specifies the Alerts to resolve, which are specified by Alert Ids."
          type: "array"
          title: "Array of Alerts to Resolve."
          items: 
            type: "string"
          x-go-name: "AlertIdList"
      x-go-package: "cohesity/iris/server/data/public"
    UpdateSourcesForPrincipalsParams: 
      description: "Specifies a list of principals to set access permissions for.\nFor each principal, set the Protection Sources and View names\nthat the specified principal has permissions to access."
      type: "object"
      title: "Set Access Permissions for Principals."
      properties: 
        sourcesForPrincipals: 
          description: "Specifies a list of principals. For each principal, specify\nthe Protection Sources and Views that the principal has\npermissions to access."
          type: "array"
          title: "Array of Principals, Sources and Views."
          items: 
            $ref: "#/definitions/SourceForPrincipalParam"
          x-go-name: "SourcesForPrincipals"
      x-go-package: "cohesity/iris/server/data/public"
    UpdateUserQuotaSettingsForView: 
      description: "Specifies the parameters to update user quota metadata in a view."
      type: "object"
      title: "Update the metadata for user quota policies in a view."
      properties: 
        defaultUserQuotaPolicy: 
          description: "The default user quota policy for this view."
          $ref: "#/definitions/QuotaPolicy"
        enableUserQuota: 
          description: "If set, it enables/disables the user quota overrides for a view.\nOtherwise, it leaves it at it's previous state."
          type: "boolean"
          x-go-name: "EnableUserQuota"
        inheritDefaultPolicyFromViewbox: 
          description: "If set to true, the default_policy in view metadata will be cleared and\nthe default policy from viewbox will take effect for all users in the\nview."
          type: "boolean"
          x-go-name: "InheritDefaultPolicyFromViewbox"
        viewName: 
          description: "View name of input view."
          type: "string"
          x-go-name: "ViewName"
      x-go-package: "cohesity/iris/server/data/public"
    UpdateViewParam: 
      description: "Specifies the settings that define a View."
      type: "object"
      title: "View."
      properties: 
        accessSids: 
          description: "Specifies the list of security identifiers (SIDs) for the restricted\nPrincipals who have access to this View."
          type: "array"
          title: "Array of Security Identifiers (SIDs)"
          items: 
            type: "string"
          x-go-name: "AccessSids"
        description: 
          description: "Specifies an optional text description about the View."
          type: "string"
          x-go-name: "Description"
        enableFilerAuditLogging: 
          description: "Specifies if Filer Audit Logging is enabled for this view."
          type: "boolean"
          x-go-name: "EnableFilerAuditLogging"
        enableMixedModePermissions: 
          description: "If set, mixed mode (NFS and SMB) access is enabled for this view."
          type: "boolean"
          x-go-name: "EnableMixedModePermissions"
        enableSmbAccessBasedEnumeration: 
          description: "Specifies if access-based enumeration should be enabled.\nIf 'true', only files and folders that the user has permissions to\naccess are visible on the SMB share for that user."
          type: "boolean"
          x-go-name: "EnableSmbAccessBasedEnumeration"
        enableSmbViewDiscovery: 
          description: "If set, it enables discovery of view for SMB."
          type: "boolean"
          x-go-name: "EnableSmbViewDiscovery"
        fileExtensionFilter: 
          description: "Optional filtering criteria that should be satisfied by all the files\ncreated in this view. It does not affect existing files."
          $ref: "#/definitions/FileExtensionFilter"
        logicalQuota: 
          description: "Specifies an optional logical quota limit (in bytes) for the usage allowed\non this View.\n(Logical data is when the data is fully hydrated and expanded.)\nThis limit overrides the limit inherited from the Storage Domain\n(View Box) (if set).\nIf logicalQuota is nil, the limit is inherited from the\nStorage Domain (View Box) (if set).\nA new write is not allowed if the Storage Domain (View Box) will exceed the\nspecified quota.\nHowever, it takes time for the Cohesity Cluster to calculate\nthe usage across Nodes, so the limit may be exceeded by a small amount.\nIn addition, if the limit is increased or data is removed,\nthere may be a delay before the Cohesity Cluster allows more data\nto be written to the View, as the Cluster is calculating the usage\nacross Nodes."
          type: "object"
          title: "Quota Policy"
          properties: 
            AlertLimit: 
              description: "AlertLimitBytes converted to GiB format for report purposes."
              type: "string"
            HardLimit: 
              description: "HardLimitBytes converted to GiB format for report purposes."
              type: "string"
            alertLimitBytes: 
              description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "AlertLimitBytes"
            alertThresholdPercentage: 
              description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
              type: "integer"
              format: "int64"
              x-go-name: "AlertThresholdPercentage"
            hardLimitBytes: 
              description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "HardLimitBytes"
        protocolAccess: 
          description: "Specifies the supported Protocols for the View."
          type: "string"
          enum: 
            - "kAll"
            - "kNFSOnly"
            - "kSMBOnly"
            - "kS3Only"
          x-go-name: "ProtocolAccess"
        qos: 
          description: "Specifies the Quality of Service (QoS) Policy for the View."
          $ref: "#/definitions/QoS"
        smbPermissionsInfo: 
          description: "Specifies the SMB permissions for the View."
          $ref: "#/definitions/SmbPermissionsInfo"
        storagePolicyOverride: 
          description: "Specifies if inline deduplication and compression settings inherited from\nthe Storage Domain (View Box) should be disabled for this View."
          $ref: "#/definitions/StoragePolicyOverride"
        subnetWhitelist: 
          description: "Specifies a list of Subnets with IP addresses that have permissions to\naccess the View. (Overrides the Subnets specified at the global\nCohesity Cluster level.)"
          type: "array"
          title: "Array of Subnets."
          items: 
            $ref: "#/definitions/Subnet"
          x-go-name: "SubnetWhitelist"
      x-go-package: "cohesity/iris/server/data/public"
    UpgradePhysicalAgentsMessage: 
      description: "Specifies the status of an upgrade request."
      type: "object"
      title: "Status of Physical Upgrade Request."
      properties: 
        message: 
          description: "Specifies the status message returned after initiating an upgrade request.\nStatus of each agent upgrade can be obtained by listing Physical Servers\nusing the GET /public/protectionSources operation."
          type: "string"
          x-go-name: "Message"
      x-go-package: "cohesity/iris/server/data/public"
    UpgradePhysicalServerAgents: 
      description: "Specifies a request to upgrade the Cohesity agents on one or more\nPhysical Servers registered on the Cohesity Cluster."
      type: "object"
      title: "Upgrade Physical Server Agents Request."
      required: 
        - "agentIds"
      properties: 
        agentIds: 
          description: "Specifies a list of agentIds associated with the Physical Servers\nto upgrade with the agent release currently available\nfrom the Cohesity Cluster."
          type: "array"
          title: "Array of Agent Ids."
          items: 
            type: "integer"
            format: "int64"
          x-go-name: "AgentIds"
      x-go-package: "cohesity/iris/server/data/public"
    UploadMRJarViewPathWrapper: 
      description: "UploadMRJarViewPathWrapper contains jar name and local mount path where the\nJars will be uploaded."
      type: "object"
      properties: 
        jarName: 
          description: "JarName is the name of the uploaded jar."
          type: "string"
          x-go-name: "JarName"
        jarPath: 
          description: "JarPath is the path for the directory where uploaded jar is stored."
          type: "string"
          x-go-name: "JarPath"
      x-go-package: "cohesity/iris/server/data/public"
    UsageAndPerformanceStats: 
      description: "Provides usage and performance statistics\nfor entities such as a disks, Nodes or Clusters."
      type: "object"
      title: "Usage and Performance Statistics"
      properties: 
        dataInBytes: 
          description: "Data brought into the cluster. This is the usage before data reduction if\nwe ignore the zeroes and effects of cloning."
          type: "integer"
          format: "int64"
          x-go-name: "DataInBytes"
        dataInBytesAfterReduction: 
          description: "Morphed Usage before data is replicated to other nodes as per RF or\nErasure Coding policy."
          type: "integer"
          format: "int64"
          x-go-name: "DataInBytesAfterReduction"
        minUsablePhysicalCapacityBytes: 
          description: "Specifies the minimum usable capacity available\nafter erasure coding or RF. This will only be populated for cluster.\nIf a cluster has multiple Domains (View Boxes) with different RF or\nerasure coding, this metric will be computed using the scheme that will\nprovide least saving."
          type: "integer"
          format: "int64"
          x-go-name: "MinUsablePhysicalCapacityBytes"
        numBytesRead: 
          description: "Provides the total number of bytes read in the last 30 seconds."
          type: "integer"
          format: "int64"
          x-go-name: "NumBytesRead"
        numBytesWritten: 
          description: "Provides the total number of bytes written in the last 30 second."
          type: "integer"
          format: "int64"
          x-go-name: "NumBytesWritten"
        physicalCapacityBytes: 
          description: "Provides the total physical capacity in bytes as computed\nby the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "PhysicalCapacityBytes"
        readIos: 
          description: "Provides the number of Read IOs that occurred in the last 30 seconds."
          type: "integer"
          format: "int64"
          x-go-name: "ReadIos"
        readLatencyMsecs: 
          description: "Provides the Read latency in milliseconds for the Read IOs that occurred\nduring the last 30 seconds."
          type: "number"
          format: "double"
          x-go-name: "ReadLatencyMsecs"
        systemCapacityBytes: 
          description: "Provides the total available capacity as computed by\nthe Linux 'statfs' command."
          type: "integer"
          format: "int64"
          x-go-name: "SystemCapacityBytes"
        systemUsageBytes: 
          description: "Provides the usage of bytes, as computed by the Linux 'statfs' command,\nafter the size of the data is reduced by\nchange-block tracking, compression and deduplication."
          type: "integer"
          format: "int64"
          x-go-name: "SystemUsageBytes"
        totalPhysicalRawUsageBytes: 
          description: "Provides the usage of bytes, as computed by the Cohesity Cluster,\nbefore the size of the data is reduced by\nchange-block tracking, compression and deduplication."
          type: "integer"
          format: "int64"
          x-go-name: "TotalPhysicalRawUsageBytes"
        totalPhysicalUsageBytes: 
          description: "Provides the total capacity, as computed by the Cohesity Cluster,\nafter the size of the data has been reduced by change-block tracking,\ncompression and deduplication."
          type: "integer"
          format: "int64"
          x-go-name: "TotalPhysicalUsageBytes"
        writeIos: 
          description: "Provides the number of Write IOs that occurred in the last 30 seconds."
          type: "integer"
          format: "int64"
          x-go-name: "WriteIos"
        writeLatencyMsecs: 
          description: "Provides the Write latency in milliseconds for the Write IOs that occurred\nduring the last 30 seconds."
          type: "number"
          format: "double"
          x-go-name: "WriteLatencyMsecs"
      x-go-package: "cohesity/iris/server/data/public"
    User: 
      description: "Specifies details about a user."
      type: "object"
      title: "User Details."
      properties: 
        createdTimeMsecs: 
          description: "Specifies the epoch time in milliseconds when the user account\nwas created on the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "CreatedTimeMsecs"
        description: 
          description: "Specifies a description about the user."
          type: "string"
          x-go-name: "Description"
        domain: 
          description: "Specifies the fully qualified domain name (FQDN) of an Active Directory\nor LOCAL for the default LOCAL domain on the Cohesity Cluster.\nA user is uniquely identified by combination of the username and\nthe domain."
          type: "string"
          x-go-name: "Domain"
        effectiveTimeMsecs: 
          description: "Specifies the epoch time in milliseconds when the user becomes\neffective. Until that time, the user cannot log in."
          type: "integer"
          format: "int64"
          x-go-name: "EffectiveTimeMsecs"
        emailAddress: 
          description: "Specifies the email address of the user."
          type: "string"
          x-go-name: "Email"
        lastUpdatedTimeMsecs: 
          description: "Specifies the epoch time in milliseconds when the user account was last\nmodified on the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "LastUpdatedTimeMsecs"
        password: 
          description: "Specifies the password of this user."
          type: "string"
          x-go-name: "Password"
        restricted: 
          description: "Whether the user is a restricted user. A restricted user can only view\nthe objects he has permissions to."
          type: "boolean"
          x-go-name: "Restricted"
        roles: 
          description: "Specifies the Cohesity roles to associate with the user such as\nsuch as 'Admin', 'Ops' or 'View'.\nThe Cohesity roles determine privileges on the Cohesity Cluster\nfor this user."
          type: "array"
          title: "Array of Roles."
          items: 
            type: "string"
          x-go-name: "Roles"
        s3AccessKeyId: 
          description: "Specifies the S3 Account Access Key ID."
          type: "string"
          x-go-name: "S3AccessKeyId"
        s3AccountId: 
          description: "Specifies the S3 Account Canonical User ID."
          type: "string"
          x-go-name: "S3AccountId"
        s3SecretKey: 
          description: "Specifies the S3 Account Secret Key."
          type: "string"
          x-go-name: "S3SecretKey"
        sid: 
          description: "Specifies the unique Security ID (SID) of the user."
          type: "string"
          x-go-name: "Sid"
        username: 
          description: "Specifies the login name of the user."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    UserDeleteParameters: 
      description: "Specifies the users to delete on the Cohesity Cluster."
      type: "object"
      title: "Delete Users Request."
      properties: 
        domain: 
          description: "Specifies the domain associated with the users to delete.\nOnly users associated with the same domain can be deleted by a\nsingle request.\nIf no domain is specified, the specified users are deleted from the\nLOCAL domain on the Cohesity Cluster.\nIf a non-LOCAL domain is specified, the specified users are deleted\non the Cohesity Cluster. However, the referenced user principals on the\nActive Directory are not deleted."
          type: "string"
          x-go-name: "Domain"
        users: 
          description: "Specifies the list of users to delete on Cohesity Cluster.\nOnly users from the same domain can be deleted by a single request."
          type: "array"
          title: "Array of Users."
          items: 
            type: "string"
          x-go-name: "Usernames"
      x-go-package: "cohesity/iris/server/data/public"
    UserId: 
      type: "object"
      title: "User Identifier params."
      properties: 
        sid: 
          description: "If interested in a user via smb_client, include SID.\nOtherwise, If valid unix-id to SID mappings are available (i.e., when\nmixed mode is enabled) the server will perform the necessary id mapping\nand return the correct usage irrespective of whether the unix id / SID is\nprovided.\nThe string is of following format -\nS-1-IdentifierAuthority-SubAuthority1-SubAuthority2-...-SubAuthorityn."
          type: "string"
          x-go-name: "Sid"
        unixUid: 
          description: "If interested in a user via unix-identifier, include UnixUid.\nOtherwise, If valid unix-id to SID mappings are available (i.e., when\nmixed mode is enabled) the server will perform the necessary id mapping\nand return the correct usage irrespective of whether the unix id / SID is\nprovided."
          type: "integer"
          format: "uint32"
          x-go-name: "UnixUid"
      x-go-package: "cohesity/iris/server/data/public"
    UserIdMapping: 
      type: "object"
      title: "Specifies how the Unix and Windows users are mapped in an Active Directory."
      properties: 
        centrifyZoneMapping: 
          description: "Specifies a centrify zone when mapping type is set to 'kCentrify'. It\ndefines a centrify zone from which the user id mapping info would be\nderived."
          $ref: "#/definitions/CentrifyZone"
        customAttributesMapping: 
          description: "Specifies the custom attributes when mapping type is set to\n'kCustomAttributes'. It defines the attribute names to derive the mapping\nfor a user of an Active Directory domain."
          $ref: "#/definitions/CustomUnixIdAttributes"
        fixedMapping: 
          description: "Specifies the fields when mapping type is set to 'kFixed'. It maps all\nActive Directory users of this domain to a fixed uid, and gid."
          $ref: "#/definitions/FixedUnixIdMapping"
        type: 
          description: "Specifies the mapping type used.\n'kRid' indicates the kRid mapping type.\n'kRfc2307' indicates the kRfc2307 mapping type.\n'kSfu30' indicates the kSfu30 mapping type.\n'kCentrify' indicates the mapping type to refer to a centrify zone.\n'kFixed' indicates the mapping from all Active Directory users to a fixed Unix uid, and gid.\n'kCustomAttributes' indicates the mapping to derive from custom attributes defined in an AD domain."
          type: "string"
          enum: 
            - "kRid"
            - "kRfc2307"
            - "kSfu30"
            - "kCentrify"
            - "kFixed"
            - "kCustomAttributes"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    UserParameters: 
      description: "Specifies the settings used to create/add a new user or modify an\nexisting user."
      type: "object"
      title: "User Request."
      properties: 
        description: 
          description: "Specifies a description about the user."
          type: "string"
          x-go-name: "Description"
        domain: 
          description: "Specifies the fully qualified domain name (FQDN) of an Active Directory\nor LOCAL for the default LOCAL domain on the Cohesity Cluster.\nA user is uniquely identified by combination of the username and\nthe domain."
          type: "string"
          x-go-name: "Domain"
        effectiveTimeMsecs: 
          description: "Specifies the epoch time in milliseconds when the user becomes\neffective. Until that time, the user cannot log in."
          type: "integer"
          format: "int64"
          x-go-name: "EffectiveTimeMsecs"
        emailAddress: 
          description: "Specifies the email address of the user."
          type: "string"
          x-go-name: "Email"
        password: 
          description: "Specifies the password of this user."
          type: "string"
          x-go-name: "Password"
        restricted: 
          description: "Whether the user is a restricted user. A restricted user can only view\nthe objects he has permissions to."
          type: "boolean"
          x-go-name: "Restricted"
        roles: 
          description: "Specifies the Cohesity roles to associate with the user such as\nsuch as 'Admin', 'Ops' or 'View'.\nThe Cohesity roles determine privileges on the Cohesity Cluster\nfor this user."
          type: "array"
          title: "Array of Roles."
          items: 
            type: "string"
          x-go-name: "Roles"
        username: 
          description: "Specifies the login name of the user."
          type: "string"
          x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    UserPreferencesProto_UserPreferences_Preference: 
      description: "Protobuf that describes Preferences for a user"
      type: "object"
      properties: 
        key: 
          description: "Property name."
          type: "string"
          x-go-name: "Key"
        value: 
          description: "Property value."
          type: "string"
          x-go-name: "Value"
      x-go-package: "iris/base/user_preferences.pb"
    UserQuota: 
      type: "object"
      title: "User quota override/policy applied to a user."
      properties: 
        quotaPolicy: 
          description: "User quota policy applied to this user."
          $ref: "#/definitions/QuotaPolicy"
        sid: 
          description: "If interested in a user via smb_client, include SID.\nOtherwise, If valid unix-id to SID mappings are available (i.e., when\nmixed mode is enabled) the server will perform the necessary id mapping\nand return the correct usage irrespective of whether the unix id / SID is\nprovided.\nThe string is of following format -\nS-1-IdentifierAuthority-SubAuthority1-SubAuthority2-...-SubAuthorityn."
          type: "string"
          x-go-name: "Sid"
        unixUid: 
          description: "If interested in a user via unix-identifier, include UnixUid.\nOtherwise, If valid unix-id to SID mappings are available (i.e., when\nmixed mode is enabled) the server will perform the necessary id mapping\nand return the correct usage irrespective of whether the unix id / SID is\nprovided."
          type: "integer"
          format: "uint32"
          x-go-name: "UnixUid"
      x-go-package: "cohesity/iris/server/data/public"
    UserQuotaAndUsage: 
      type: "object"
      title: "The user quota override and usage for a particular user."
      properties: 
        quotaPolicy: 
          description: "User quota policy applied to this user."
          $ref: "#/definitions/QuotaPolicy"
        sid: 
          description: "If interested in a user via smb_client, include SID.\nOtherwise, If valid unix-id to SID mappings are available (i.e., when\nmixed mode is enabled) the server will perform the necessary id mapping\nand return the correct usage irrespective of whether the unix id / SID is\nprovided.\nThe string is of following format -\nS-1-IdentifierAuthority-SubAuthority1-SubAuthority2-...-SubAuthorityn."
          type: "string"
          x-go-name: "Sid"
        unixUid: 
          description: "If interested in a user via unix-identifier, include UnixUid.\nOtherwise, If valid unix-id to SID mappings are available (i.e., when\nmixed mode is enabled) the server will perform the necessary id mapping\nand return the correct usage irrespective of whether the unix id / SID is\nprovided."
          type: "integer"
          format: "uint32"
          x-go-name: "UnixUid"
        usageBytes: 
          description: "Current logical usage of user id in the input view."
          type: "integer"
          format: "int64"
          x-go-name: "UsageBytes"
      x-go-package: "cohesity/iris/server/data/public"
    UserQuotaSettings: 
      type: "object"
      title: "The User Quota settings applied to a view."
      properties: 
        defaultUserQuotaPolicy: 
          description: "The default user quota policy for this view."
          $ref: "#/definitions/QuotaPolicy"
        enableUserQuota: 
          description: "If set, it enables/disables the user quota overrides for a view.\nOtherwise, it leaves it at it's previous state."
          type: "boolean"
          x-go-name: "EnableUserQuota"
      x-go-package: "cohesity/iris/server/data/public"
    UserQuotaSummaryForUser: 
      type: "object"
      title: "The user quota summary information/result for a user."
      properties: 
        numViewsAboveAlertThreshold: 
          description: "Number of views in which user has exceeded alert threshold limit."
          type: "integer"
          format: "uint32"
          x-go-name: "NumViewsAboveAlertThreshold"
        numViewsAboveHardLimit: 
          description: "Number of views in which the user has exceeded hard limit."
          type: "integer"
          format: "uint32"
          x-go-name: "NumViewsAboveHardLimit"
        totalNumViews: 
          description: "Total number of views in which the user has a quota policy specified\nor has non-zero usage."
          type: "integer"
          format: "uint32"
          x-go-name: "TotalNumViews"
      x-go-package: "cohesity/iris/server/data/public"
    UserQuotaSummaryForView: 
      type: "object"
      title: "The user quota summary information/result for a view."
      properties: 
        defaultUserQuotaPolicy: 
          description: "Default quota policy applied to all the users in the view who doesn't\nhave a policy override."
          $ref: "#/definitions/QuotaPolicy"
        numUsersAboveAlertThreshold: 
          description: "Number of users who has exceeded their specified alert limit."
          type: "integer"
          format: "int64"
          x-go-name: "NumUsersAboveAlertThreshold"
        numUsersAboveHardLimit: 
          description: "Number of users who has exceeded their specified quota hard limit."
          type: "integer"
          format: "int64"
          x-go-name: "NumUsersAboveHardLimit"
        totalNumUsers: 
          description: "Total number of users who has either a user quota policy override\nspecified or has non-zero logical usage."
          type: "integer"
          format: "int64"
          x-go-name: "TotalNumUsers"
      x-go-package: "cohesity/iris/server/data/public"
    VMwareObjectId: 
      description: "Specifies a unique Protection Source id across Cohesity Clusters.\nIt is derived from the id of the VMware Protection Source."
      type: "object"
      title: "VMware Object Id."
      properties: 
        morItem: 
          description: "Specifies the Managed Object Reference Item."
          type: "string"
          x-go-name: "MorItem"
        morType: 
          description: "Specifies the Managed Object Reference Type."
          type: "string"
          x-go-name: "MorType"
        uuid: 
          description: "Specifies a Universally Unique Identifier (UUID) of a VMware Object."
          type: "string"
          x-go-name: "Uuid"
      x-go-package: "cohesity/iris/server/data/public"
    VMwareProtectionSource: 
      description: "Specifies a Protection Source in a VMware environment."
      type: "object"
      title: "VMware Protection Source."
      properties: 
        agentId: 
          description: "Specifies the id of the persistent agent."
          type: "integer"
          format: "int64"
          x-go-name: "AgentId"
        agents: 
          description: "This is set only if the Virtual Machine has persistent agent."
          type: "array"
          title: "Specifies the list of agent information on the Virtual Machine."
          items: 
            $ref: "#/definitions/AgentInformation"
          x-go-name: "Agents"
        connectionState: 
          description: "Specifies the connection state of the Object and are only valid for\nESXi hosts ('kHostSystem') or Virtual Machines ('kVirtualMachine').\nThese enums are equivalent to the connection states documented in\nVMware's reference documentation.\nExamples of Cohesity connection states include 'kConnected',\n'kDisconnected', 'kInacccessible', etc."
          type: "string"
          enum: 
            - "kConnected"
            - "kDisconnected"
            - "kInacccessible"
            - "kInvalid"
            - "kOrphaned"
            - "kNotResponding"
          x-go-name: "ConnectionState"
        datastoreInfo: 
          description: "Specifies additional information of entities of type 'kDatastore'."
          $ref: "#/definitions/DatastoreInfo"
        folderType: 
          description: "Specifies the folder type for the 'kFolder' Object.\n'kVMFolder' indicates folder can hold VMs or vApps.\n'kHostFolder' indicates folder can hold hosts and compute resources.\n'kDatastoreFolder' indicates folder can hold datastores and storage pods.\n'kNetworkFolder' indicates folder can hold networks and switches.\n'kRootFolder' indicates folder can hold datacenters."
          type: "string"
          enum: 
            - "kVMFolder"
            - "kHostFolder"
            - "kDatastoreFolder"
            - "kNetworkFolder"
            - "kRootFolder"
          x-go-name: "FolderType"
        hasPersistentAgent: 
          description: "Set to true if a persistent agent is running on the Virtual Machine.\nThis is populated for entities of type 'kVirtualMachine'."
          type: "boolean"
          x-go-name: "HasPersistentAgent"
        hostType: 
          description: "Specifies the host type for the 'kVirtualMachine' Object.\n'kLinux' indicates the Linux operating system.\n'kWindows' indicates the Microsoft Windows operating system."
          type: "string"
          enum: 
            - "kLinux"
            - "kWindows"
          x-go-name: "HostType"
        id: 
          description: "Specifies the UUID of the VMware Protection Source."
          $ref: "#/definitions/VMwareObjectId"
        name: 
          description: "Specifies a human readable name of the Protection Source."
          type: "string"
          x-go-name: "Name"
        tagAttributes: 
          description: "Specifies the optional list of VM Tag attributes associated with this\nObject."
          type: "array"
          items: 
            $ref: "#/definitions/TagAttribute"
          x-go-name: "TagAttributes"
        toolsRunningStatus: 
          description: "Specifies the status of VMware Tools for the guest OS on the VM.\nThis is only valid for the 'kVirtualMachine' type.\n'kGuestToolsRunning' means the VMware tools are running on the guest OS.\n'kGuestToolsNotRunning' means the VMware tools are not running on the\nguest OS.\n'kUnknown' means the state of the VMware tools on the guest OS is not\nknown.\n'kGuestToolsExecutingScripts' means the guest OS is currently executing\nscripts using VMware tools."
          type: "string"
          enum: 
            - "kUnknown"
            - "kGuestToolsExecutingScripts"
            - "kGuestToolsNotRunning"
            - "kGuestToolsRunning"
          x-go-name: "VMwareToolsRunningStatus"
        type: 
          description: "Specifies the type of managed Object in a VMware Protection Source.\nExamples of VMware Objects include 'kVCenter', 'kFolder', 'kDatacenter',\n'kResourcePool', 'kDatastore', 'kVirtualMachine', etc."
          type: "string"
          enum: 
            - "kVCenter"
            - "kFolder"
            - "kDatacenter"
            - "kComputeResource"
            - "kClusterComputeResource"
            - "kResourcePool"
            - "kDatastore"
            - "kHostSystem"
            - "kVirtualMachine"
            - "kVirtualApp"
            - "kStandaloneHost"
            - "kStoragePod"
            - "kNetwork"
            - "kDistributedVirtualPortgroup"
            - "kTagCategory"
            - "kTag"
          x-go-name: "Type"
        virtualDisks: 
          description: "This is populated for entities of type 'kVirtualMachine'."
          type: "array"
          title: "Specifies an array of virtual disks that are part of the Virtual Machine."
          items: 
            $ref: "#/definitions/VirtualDiskInfo"
          x-go-name: "VirtualDisks"
      x-go-package: "cohesity/iris/server/data/public"
    Value: 
      description: "Specifies a data type and data field used to store data."
      type: "object"
      title: "Value."
      properties: 
        data: 
          $ref: "#/definitions/Value_Data"
        type: 
          description: "Specifies the type of value.\n0 specifies a data point of type Int64.\n1 specifies a data point of type Double.\n2 specifies a data point of type String.\n3 specifies a data point of type Bytes."
          type: "integer"
          format: "int32"
          x-go-name: "Type"
      x-go-package: "stats/base/stats_types.pb"
    Value_Data: 
      description: "Specify data in the appropriate field for the current data type."
      type: "object"
      title: "Specifies the fields to store data of a given type."
      properties: 
        bytesValue: 
          description: "Specifies the field to store an array of bytes if the current\ndata type is bytes. Specify a value for this field when type\nis equal to 4."
          type: "array"
          items: 
            type: "integer"
            format: "uint8"
          x-go-name: "BytesValue"
        doubleValue: 
          description: "Specifies the field to store data if the current data type is a\ndouble value. Specify a value for this field when type is equal to 2."
          type: "number"
          format: "double"
          x-go-name: "DoubleValue"
        int64Value: 
          description: "Specifies the field to store data if the current data type is a\nint64 value. Specify a value for this field when type is equal to 1."
          type: "integer"
          format: "int64"
          x-go-name: "Int64Value"
        stringValue: 
          description: "Specifies the field to store data if the current data type is a\nstring value. Specify a value for this field when type is equal to 3."
          type: "string"
          x-go-name: "StringValue"
      x-go-package: "stats/base/stats_types.pb"
    Vault: 
      description: "Specifies an external storage location and is equivalent to\nan External Target in the Cohesity Dashboard.\nA Vault can provide an additional Cloud Tier where cold data of the\nCohesity Cluster can be stored in the Cloud.\nA Vault can also provide archive storage for backup data. This archive data\nis stored on Tapes and in Cloud Vaults."
      type: "object"
      title: "Vault."
      properties: 
        compressionPolicy: 
          description: "Specifies whether to send data to the Vault in a\ncompressed format.\n'kCompressionNone' indicates that data is not compressed.\n'kCompressionLow' indicates that data is compressed."
          type: "string"
          enum: 
            - "kCompressionNone"
            - "kCompressionLow"
          x-go-name: "Compression"
        config: 
          description: "Specifies the settings required to connect to the Vault (External Target)."
          $ref: "#/definitions/VaultConfig"
        customerManagingEncryptionKeys: 
          description: "Specifies whether to manage the encryption key manually or let the\nCohesity Cluster manage it. If true, you must get the encryption key\nstore it outside the Cluster, before disaster strikes such as the\nsource local Cohesity Cluster being down.\nYou can get the encryption key by downloading it\nusing the Cohesity Dashboard or by calling the\nGET /public/vaults/encryptionKey/{id} operation."
          type: "boolean"
          x-go-name: "CustomerManagingEncryptionKeys"
        dedupEnabled: 
          description: "Specifies whether to deduplicate data before sending it to the Vault."
          type: "boolean"
          x-go-name: "DedupEnabled"
        description: 
          description: "Specifies a description about the Vault."
          type: "string"
          x-go-name: "Description"
        desiredWalLocation: 
          description: "Desired location for write ahead logs(wal)."
          type: "integer"
          format: "int32"
          x-go-name: "DesiredWalLocation"
        encryptionKeyFileDownloaded: 
          description: "Specifies if the encryption key file has been downloaded using the\nCohesity Dashboard (Cohesity UI).\nIf true, the encryption key has been downloaded using the Cohesity\nDashboard. An encryption key can only be downloaded once using the\nCohesity Dashboard."
          type: "boolean"
          x-go-name: "EncryptionKeyFileDownloaded"
        encryptionPolicy: 
          description: "Specifies whether to send and store data in an encrypted format.\n'kEncryptionNone' indicates the data is not encrypted.\n'kEncryptionStrong' indicates the data is encrypted."
          type: "string"
          enum: 
            - "kEncryptionNone"
            - "kEncryptionStrong"
          x-go-name: "EncryptionLevel"
        fullArchiveIntervalDays: 
          description: "Specifies the number days between full archives to the Vault.\nThe current default is 90 days.\nThis is only meaningful when incrementalArchivesEnabled is true and\nthe Vault usage type is kArchival."
          type: "integer"
          format: "int64"
          x-go-name: "FullArchiveIntervalDays"
        id: 
          description: "Specifies an id that identifies the Vault."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        incrementalArchivesEnabled: 
          description: "Specifies whether to perform incremental archival when sending data\nto the Vault.\nIf false, only full backups are performed.\nIf true, incremental backups are performed between the full backups."
          type: "boolean"
          x-go-name: "IncrementalArchivesEnabled"
        keyFileDownloadTimeUsecs: 
          description: "Specifies the time (in microseconds) when the encryption key file was\ndownloaded from the Cohesity Dashboard (Cohesity UI).\nAn encryption key can only be downloaded once\nusing the Cohesity Dashboard."
          type: "integer"
          format: "int64"
          x-go-name: "KeyFileDownloadTimeUsecs"
        keyFileDownloadUser: 
          description: "Specifies the user who downloaded the encryption key from the\nCohesity Dashboard (Cohesity UI). This field\nis only populated if encryption is enabled for the Vault and\ncustomerManagingEncryptionKeys is true."
          type: "string"
          x-go-name: "KeyFileDownloadUser"
        name: 
          description: "Specifies the name of the Vault."
          type: "string"
          x-go-name: "Name"
        type: 
          description: "Specifies the type of Vault.\n'kNearline' indicates a Google Nearline Vault.\n'kColdline' indicates a Google Coldline Vault.\n'kGlacier' indicates a AWS Glacier Vault.\n'kS3' indicates a AWS S3 Vault.\n'kAzureStandard' indicates a Microsoft Azure Standard Vault.\n'kS3Compatible' indicates a AWS S3 Compatible Vault.\n(See the online help for supported types.)\n'kQStarTape' indicates a QStar Tape Vault.\n'kGoogleStandard' indicates a Google Standard Vault.\n'kGoogleDRA' indicates a Google DRA Vault.\n'kAWSGovCloud' indicates a AWS Gov Cloud Vault.\n'kNAS' indicates a NAS Vault.\n'kAzureGovCloud' indicates an Microsoft Azure Gov Cloud Vault."
          type: "string"
          enum: 
            - "kNearline"
            - "kColdline"
            - "kGlacier"
            - "kS3"
            - "kAzureStandard"
            - "kS3Compatible"
            - "kQStarTape"
            - "kGoogleStandard"
            - "kGoogleDRA"
            - "kAWSGovCloud"
            - "kNAS"
            - "kAzureGovCloud"
          x-go-name: "Type"
        usageType: 
          description: "Specifies the usage type of the Vault.\n'kArchival' indicates the Vault provides archive storage for backup data.\n'kCloudSpill' indicates the Vault provides additional storage for cold data."
          type: "string"
          enum: 
            - "kArchival"
            - "kCloudSpill"
          x-go-name: "UsageType"
      x-go-package: "cohesity/iris/server/data/public"
    VaultConfig: 
      description: "Specifies the settings required to connect to a specific Vault type.\nFor some Vaults, you must also specify a storage location (bucketName)."
      type: "object"
      title: "Vault Configuration."
      properties: 
        amazon: 
          description: "Specifies the cloud credentials to connect to a Amazon\nservice account. Glacier, S3, and S3-compatible clouds use this\ncredential."
          title: "Amazon Cloud Credentials."
          $ref: "#/definitions/AmazonCloudCredentials"
        azure: 
          description: "Specifies the cloud credentials to connect to a Microsoft\nAzure service account."
          title: "Azure Cloud Credentials."
          $ref: "#/definitions/AzureCloudCredentials"
        bucketName: 
          description: "Specifies the name of a storage location of the Vault,\nwhere objects are stored. For Google and AMS, this\nstorage location is called a bucket. For Microsoft Azure, this\nstorage location is called a container. For QStar and NAS, you\ndo not specify a storage location."
          type: "string"
          x-go-name: "BucketName"
        google: 
          description: "Specifies the cloud credentials to connect to a Google\nservice account."
          title: "Google Cloud Credentials."
          $ref: "#/definitions/GoogleCloudCredentials"
        nas: 
          description: "Specifies the server credentials to connect to a NetApp server."
          title: "NAS Server Credentials."
          $ref: "#/definitions/NasCredentials"
        qstar: 
          description: "Specifies the server credentials to connect to a QStar service\nto manage the media Vault."
          title: "QStar Media Credentials."
          $ref: "#/definitions/QStarServerCredentials"
      x-go-package: "cohesity/iris/server/data/public"
    VaultEncryptionKey: 
      description: "Specifies the encrytion information needed to restore data."
      type: "object"
      title: "Vault Encryption Key."
      properties: 
        clusterName: 
          description: "Specifies the name of the source Cohesity Cluster\nthat archived the data on the Vault."
          type: "string"
          x-go-name: "ClusterName"
        encryptionKeyData: 
          description: "Specifies the encryption key data corresponding to the specified keyUid.\nIt contains a Key Encryption Key (KEK) or a\nEncrypted Data Encryption Key (eDEK)."
          type: "string"
          x-go-name: "EncryptionKeyData"
        keyUid: 
          description: "Specifies the universal id of the Data Encryption Key."
          type: "object"
          title: "Universal Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        vaultId: 
          description: "Specifies the id of the Vault whose data is encrypted by\nthis key."
          type: "integer"
          format: "int64"
          x-go-name: "VaultId"
        vaultName: 
          description: "Specifies the name of the Vault whose data is encrypted by this key."
          type: "string"
          x-go-name: "VaultName"
      x-go-package: "cohesity/iris/server/data/public"
    View: 
      description: "Specifies settings for defining a storage location (called a View)\nwith NFS and SMB mount paths in a Storage Domain (View Box) on the Cohesity\nCluster."
      type: "object"
      title: "View."
      properties: 
        accessSids: 
          description: "Specifies the list of security identifiers (SIDs) for the restricted\nPrincipals who have access to this View."
          type: "array"
          title: "Array of Security Identifiers (SIDs)"
          items: 
            type: "string"
          x-go-name: "AccessSids"
        aliases: 
          description: "Aliases created for the view. A view alias allows a directory path inside\na view to be mounted using the alias name."
          type: "array"
          items: 
            $ref: "#/definitions/ViewAliasInfo"
          x-go-name: "Aliases"
        allSmbMountPaths: 
          description: "Specifies the possible paths that can be used to mount this View\nas a SMB share. If Active Directory has multiple account names;\neach machine account has its own path."
          type: "array"
          title: "Array of SMB Paths."
          items: 
            type: "string"
          x-go-name: "AllSmbMountPaths"
        basicMountPath: 
          description: "Specifies the NFS mount path of the View (without the hostname\ninformation).\nThis path is used to support NFS mounting of the paths specified in the\nnfsExportPathList on Windows systems."
          type: "string"
          x-go-name: "BasicMountPath"
        caseInsensitiveNamesEnabled: 
          description: "Specifies whether to support case insensitive file/folder names. This\nparameter can only be set during create and cannot be changed."
          type: "boolean"
          x-go-name: "CaseInsensitiveNamesEnabled"
        createTimeMsecs: 
          description: "Specifies the time that the View was created in milliseconds."
          type: "integer"
          format: "int64"
          x-go-name: "CreateTimeMsecs"
        dataLockExpiryUsecs: 
          description: "DataLock (Write Once Read Many) lock expiry epoch time in microseconds. If\na view is marked as a DataLock view, only a Data Security Officer (a user\nhaving Data Security Privilege) can delete the view until the lock expiry\ntime."
          type: "integer"
          format: "int64"
          x-go-name: "DataLockExpiryUsecs"
        description: 
          description: "Specifies an optional text description about the View."
          type: "string"
          x-go-name: "Description"
        enableFilerAuditLogging: 
          description: "Specifies if Filer Audit Logging is enabled for this view."
          type: "boolean"
          x-go-name: "EnableFilerAuditLogging"
        enableMixedModePermissions: 
          description: "If set, mixed mode (NFS and SMB) access is enabled for this view."
          type: "boolean"
          x-go-name: "EnableMixedModePermissions"
        enableSmbAccessBasedEnumeration: 
          description: "Specifies if access-based enumeration should be enabled.\nIf 'true', only files and folders that the user has permissions to\naccess are visible on the SMB share for that user."
          type: "boolean"
          x-go-name: "EnableSmbAccessBasedEnumeration"
        enableSmbViewDiscovery: 
          description: "If set, it enables discovery of view for SMB."
          type: "boolean"
          x-go-name: "EnableSmbViewDiscovery"
        fileExtensionFilter: 
          description: "Optional filtering criteria that should be satisfied by all the files\ncreated in this view. It does not affect existing files."
          $ref: "#/definitions/FileExtensionFilter"
        logicalQuota: 
          description: "Specifies an optional logical quota limit (in bytes) for the usage allowed\non this View.\n(Logical data is when the data is fully hydrated and expanded.)\nThis limit overrides the limit inherited from the Storage Domain\n(View Box) (if set).\nIf logicalQuota is nil, the limit is inherited from the\nStorage Domain (View Box) (if set).\nA new write is not allowed if the Storage Domain (View Box) will exceed the\nspecified quota.\nHowever, it takes time for the Cohesity Cluster to calculate\nthe usage across Nodes, so the limit may be exceeded by a small amount.\nIn addition, if the limit is increased or data is removed,\nthere may be a delay before the Cohesity Cluster allows more data\nto be written to the View, as the Cluster is calculating the usage\nacross Nodes."
          type: "object"
          title: "Quota Policy"
          properties: 
            AlertLimit: 
              description: "AlertLimitBytes converted to GiB format for report purposes."
              type: "string"
            HardLimit: 
              description: "HardLimitBytes converted to GiB format for report purposes."
              type: "string"
            alertLimitBytes: 
              description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "AlertLimitBytes"
            alertThresholdPercentage: 
              description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
              type: "integer"
              format: "int64"
              x-go-name: "AlertThresholdPercentage"
            hardLimitBytes: 
              description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "HardLimitBytes"
        logicalUsageBytes: 
          description: "LogicalUsageBytes is the logical usage in bytes for the view."
          type: "integer"
          format: "int64"
          x-go-name: "LogicalUsageBytes"
        name: 
          description: "Specifies the name of the View."
          type: "string"
          x-go-name: "Name"
        nfsMountPath: 
          description: "Specifies the path for mounting this View as an NFS share."
          type: "string"
          x-go-name: "NfsMountPath"
        protocolAccess: 
          description: "Specifies the supported Protocols for the View."
          type: "string"
          enum: 
            - "kAll"
            - "kNFSOnly"
            - "kSMBOnly"
            - "kS3Only"
          x-go-name: "ProtocolAccess"
        qos: 
          description: "Specifies the Quality of Service (QoS) Policy for the View."
          $ref: "#/definitions/QoS"
        smbMountPath: 
          description: "Specifies the main path for mounting this View as an SMB share."
          type: "string"
          x-go-name: "SmbMountPath"
        smbPermissionsInfo: 
          description: "Specifies the SMB permissions for the View."
          $ref: "#/definitions/SmbPermissionsInfo"
        storagePolicyOverride: 
          description: "Specifies if inline deduplication and compression settings inherited from\nthe Storage Domain (View Box) should be disabled for this View."
          $ref: "#/definitions/StoragePolicyOverride"
        subnetWhitelist: 
          description: "Specifies a list of Subnets with IP addresses that have permissions to\naccess the View. (Overrides the Subnets specified at the global\nCohesity Cluster level.)"
          type: "array"
          title: "Array of Subnets."
          items: 
            $ref: "#/definitions/Subnet"
          x-go-name: "SubnetWhitelist"
        viewBoxId: 
          description: "Specifies the id of the Storage Domain (View Box) where the View is stored."
          type: "integer"
          format: "int64"
          x-go-name: "ViewBoxId"
        viewBoxName: 
          description: "Specifies the name of the Storage Domain (View Box) where the View is stored."
          type: "string"
          x-go-name: "ViewBoxName"
        viewId: 
          description: "Specifies an id of the View assigned by the Cohesity Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "ViewId"
        viewProtection: 
          description: "Specifies information about the Protection Jobs protecting this View."
          $ref: "#/definitions/ViewProtection"
      x-go-package: "cohesity/iris/server/data/public"
    ViewAlias: 
      type: "object"
      title: "View Alias."
      properties: 
        aliasName: 
          description: "Alias name."
          type: "string"
          x-go-name: "AliasName"
        viewName: 
          description: "View name."
          type: "string"
          x-go-name: "ViewName"
        viewPath: 
          description: "View path for the alias."
          type: "string"
          x-go-name: "ViewPath"
      x-go-package: "iris/base/iris_proxy.pb"
    ViewAliasInfo: 
      type: "object"
      title: "View Alias Info is returned as part of list views."
      properties: 
        aliasName: 
          description: "Alias name."
          type: "string"
          x-go-name: "AliasName"
        viewPath: 
          description: "View path for the alias."
          type: "string"
          x-go-name: "ViewPath"
      x-go-package: "iris/base/iris_proxy.pb"
    ViewBox: 
      description: "Provides details about a Storage Domain (View Box)."
      type: "object"
      title: "Domain (View Box)."
      required: 
        - "name"
        - "clusterPartitionId"
      properties: 
        adDomainName: 
          description: "Specifies an active directory domain that this view box is mapped to."
          type: "string"
          x-go-name: "AdDomainName"
        clusterPartitionId: 
          description: "Specifies the Cluster Partition id where the Storage Domain (View Box) is\nlocated."
          type: "integer"
          format: "int64"
          x-go-name: "ClusterPartitionId"
        clusterPartitionName: 
          description: "Specifies the Cohesity Cluster name where the Storage Domain (View Box) is\nlocated."
          type: "string"
          x-go-name: "ClusterPartitionName"
          readOnly: true
        defaultUserQuotaPolicy: 
          description: "Specifies an optional quota policy/limits that are inherited by all users\nwithin the views in this viewbox."
          type: "object"
          title: "Quota Policy"
          properties: 
            AlertLimit: 
              description: "AlertLimitBytes converted to GiB format for report purposes."
              type: "string"
            HardLimit: 
              description: "HardLimitBytes converted to GiB format for report purposes."
              type: "string"
            alertLimitBytes: 
              description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "AlertLimitBytes"
            alertThresholdPercentage: 
              description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
              type: "integer"
              format: "int64"
              x-go-name: "AlertThresholdPercentage"
            hardLimitBytes: 
              description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "HardLimitBytes"
        defaultViewQuotaPolicy: 
          description: "Specifies an optional default logical quota limit (in bytes)\nfor the Views in this Storage Domain (View Box).\n(Logical data is when the data is fully hydrated and expanded.)\nHowever, this inherited quota can be overwritten at the View level.\nA new write is not allowed if the Storage Domain (View Box) will exceed\nthe specified quota.\nHowever, it takes time for the Cohesity Cluster to calculate\nthe usage across Nodes, so the limit may be exceeded by a small amount.\nIn addition, if the limit is increased or data is removed,\nthere may be delay before the Cohesity Cluster allows more data\nto be written to the Storage Domain (View Box), as the Cluster is\ncalculating the usage across Nodes."
          type: "object"
          title: "Quota Policy"
          properties: 
            AlertLimit: 
              description: "AlertLimitBytes converted to GiB format for report purposes."
              type: "string"
            HardLimit: 
              description: "HardLimitBytes converted to GiB format for report purposes."
              type: "string"
            alertLimitBytes: 
              description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "AlertLimitBytes"
            alertThresholdPercentage: 
              description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
              type: "integer"
              format: "int64"
              x-go-name: "AlertThresholdPercentage"
            hardLimitBytes: 
              description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "HardLimitBytes"
        id: 
          description: "Specifies the Id of the Storage Domain (View Box)."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        name: 
          description: "Specifies the name of the Storage Domain (View Box)."
          type: "string"
          x-go-name: "Name"
        physicalQuota: 
          description: "Specifies an optional quota limit (in bytes) for the physical\nusage of this Storage Domain (View Box).\nThis quota limit defines a physical limit for size of the data that\ncan be physically stored on the Storage Domain (View Box), after the data\nhas been reduced by change block tracking, compression and deduplication.\nThe physical usage is the aggregate sum of the data stored for this\nStorage Domain (View Box) on all disks in the Cluster.\n(The usage includes Cloud Tier data and user data.)\nA new write is not allowed if the Storage Domain (View Box) will exceed\nthe specified quota. However, it takes time for the Cohesity Cluster to\ncalculate the usage across Nodes, so the limit may be exceeded by a small\namount. In addition, if the limit is increased or data is removed,\nthere may be a delay before the Cohesity Cluster allows more data\nto be written to the Storage Domain (View Box), as the Cluster is\ncalculating the usage across Nodes."
          type: "object"
          title: "Quota Policy"
          properties: 
            AlertLimit: 
              description: "AlertLimitBytes converted to GiB format for report purposes."
              type: "string"
            HardLimit: 
              description: "HardLimitBytes converted to GiB format for report purposes."
              type: "string"
            alertLimitBytes: 
              description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "AlertLimitBytes"
            alertThresholdPercentage: 
              description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
              type: "integer"
              format: "int64"
              x-go-name: "AlertThresholdPercentage"
            hardLimitBytes: 
              description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
              type: "integer"
              format: "int64"
              x-go-name: "HardLimitBytes"
        removalState: 
          description: "Specifies the current removal state of the Storage Domain (View Box).\n'kDontRemove' means the state of object is functional and\nit is not being removed.\n'kMarkedForRemoval' means the object is being removed.\n'kOkToRemove' means the object has been removed on the Cohesity Cluster and\nif the object is physical, it can be removed from the Cohesity Cluster."
          type: "string"
          enum: 
            - "kDontRemove"
            - "kMarkedForRemoval"
            - "kOkToRemove"
          x-go-name: "RemovalState"
        s3BucketsAllowed: 
          description: "Specifies whether creation of a S3 bucket is allowed in this\nStorage Domain (View Box).\nWhen a new S3 bucket creation request arrives, we'll look at all the View\nBoxes and the first Storage Domain (View Box) that allows creating S3\nbuckets in it will be the one where the bucket will be placed."
          type: "boolean"
          x-go-name: "S3BucketsAllowed"
        stats: 
          description: "Specifies statistics about the Storage Domain (View Box).\nreadOnly: true"
          $ref: "#/definitions/ViewBoxStats"
        storagePolicy: 
          description: "Specifies the storage options applied to the Storage Domain (View Box)."
          $ref: "#/definitions/StoragePolicy"
        treatFileSyncAsDataSync: 
          description: "If 'true', when the Cohesity Cluster is writing to a file, the\nfile modification time is not persisted synchronously during the\nfile write, so the modification time may not be accurate.\n(Typically the file modification time is off by 30 seconds but\nit can be longer.)\nOnly set to 'false' if your environment requires a very accurate\nmodification time.\nThe default value is 'true' which provides the best Cohesity\nCluster performance."
          type: "boolean"
          x-go-name: "TreatFileSyncAsDataSync"
      x-go-package: "cohesity/iris/server/data/public"
    ViewBoxPairInfo: 
      description: "Specifies a pairing between a Storage Domain (View Box) on local Cluster\nwith a Storage Domain (View Box) on a remote Cluster.\nWhen replication is configured between a local Cluster and a\nremote Cluster, the Snapshots are replicated from the specified\nStorage Domain (View Box) on the local Cluster to the Storage Domain\n(View Box) on the remote Cluster. See the online help for details about the\nsupported Storage Domains (View Box) pairings between Clusters."
      type: "object"
      title: "Storage Domain (View Box) Pairing."
      properties: 
        localViewBoxId: 
          description: "Specifies the id of the Storage Domain (View Box) on the local Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "LocalViewBoxId"
        localViewBoxName: 
          description: "Specifies the name of the Storage Domain (View Box) on the local Cluster."
          type: "string"
          x-go-name: "LocalViewBoxName"
        remoteViewBoxId: 
          description: "Specifies the id of the Storage Domain (View Box) on the remote Cluster."
          type: "integer"
          format: "int64"
          x-go-name: "RemoteViewBoxId"
        remoteViewBoxName: 
          description: "Specifies the name of the Storage Domain (View Box) on the remote Cluster."
          type: "string"
          x-go-name: "RemoteViewBoxName"
      x-go-package: "cohesity/iris/server/data/public"
    ViewBoxStats: 
      description: "Provides statistics about the Storage Domain (View Box)."
      type: "object"
      title: "Storage Domain (View Box) Stats."
      properties: 
        cloudUsagePerfStats: 
          description: "Provides the usage statistics for the data stored in the\ncloud for the Storage Domain (View Box). Performance statistics are not\npopulated."
          $ref: "#/definitions/UsageAndPerformanceStats"
        id: 
          description: "Specifies the id of the Storage Domain (View Box)."
          type: "integer"
          format: "int64"
          x-go-name: "Id"
        localUsagePerfStats: 
          description: "Provides usage statistics for the locally stored data\non the Storage Domain (View Box). Performance statistics are not populated."
          $ref: "#/definitions/UsageAndPerformanceStats"
        logicalStats: 
          description: "Provides the logical usage statistics for the Storage Domain (View Box)."
          $ref: "#/definitions/LogicalStats"
        usagePerfStats: 
          description: "Provides usage and performance statistics for the Storage Domain\n(View Box)\n(includes both local and cloud data)."
          $ref: "#/definitions/UsageAndPerformanceStats"
      x-go-package: "cohesity/iris/server/data/public"
    ViewProtection: 
      description: "Specifies information about the Protection Jobs that are protecting the\nView."
      type: "object"
      title: "View Protection."
      properties: 
        inactive: 
          description: "Specifies if this View is an inactive View that was created on this\nRemote Cluster to store the Snapshots created by replication.\nThis inactive View cannot be NFS or SMB mounted."
          type: "boolean"
          x-go-name: "Inactive"
        magnetoEntityId: 
          description: "Specifies the id of the Protection Source that is using this View."
          type: "integer"
          format: "int64"
          x-go-name: "MagnetoEntityId"
        protectionJobs: 
          description: "Specifies the Protection Jobs that are protecting the View."
          type: "array"
          title: "Array of Protection Jobs."
          items: 
            $ref: "#/definitions/ProtectionJobInfo"
          x-go-name: "ProtectionJobs"
      x-go-package: "cohesity/iris/server/data/public"
    ViewProtectionInfo: 
      description: "Specifies the protection information of Views on on the Cohesity Cluster."
      type: "object"
      title: "View Protection Information."
      properties: 
        stats: 
          description: "Specifies the stats of protection information of the View."
          type: "object"
          title: "Protection Summary Information of a registered Protection Source tree or\nthe Cohesity Cluster."
          properties: 
            protectedCount: 
              description: "Specifies the number of objects that are protected under the given\nentity."
              type: "integer"
              format: "int64"
              x-go-name: "ProtectedCount"
            protectedSize: 
              description: "Specifies the total size of the protected objects under the given entity."
              type: "integer"
              format: "int64"
              x-go-name: "ProtectedSize"
            unprotectedCount: 
              description: "Specifies the number of objects that are not protected under the given\nentity."
              type: "integer"
              format: "int64"
              x-go-name: "UnprotectedCount"
            unprotectedSize: 
              description: "Specifies the total size of the unprotected objects under the given\nentity."
              type: "integer"
              format: "int64"
              x-go-name: "UnprotectedSize"
        view: 
          description: "Specifies the View information."
          type: "object"
          title: "View."
          properties: 
            accessSids: 
              description: "Specifies the list of security identifiers (SIDs) for the restricted\nPrincipals who have access to this View."
              type: "array"
              title: "Array of Security Identifiers (SIDs)"
              items: 
                type: "string"
              x-go-name: "AccessSids"
            aliases: 
              description: "Aliases created for the view. A view alias allows a directory path inside\na view to be mounted using the alias name."
              type: "array"
              items: 
                $ref: "#/definitions/ViewAliasInfo"
              x-go-name: "Aliases"
            allSmbMountPaths: 
              description: "Specifies the possible paths that can be used to mount this View\nas a SMB share. If Active Directory has multiple account names;\neach machine account has its own path."
              type: "array"
              title: "Array of SMB Paths."
              items: 
                type: "string"
              x-go-name: "AllSmbMountPaths"
            basicMountPath: 
              description: "Specifies the NFS mount path of the View (without the hostname\ninformation).\nThis path is used to support NFS mounting of the paths specified in the\nnfsExportPathList on Windows systems."
              type: "string"
              x-go-name: "BasicMountPath"
            caseInsensitiveNamesEnabled: 
              description: "Specifies whether to support case insensitive file/folder names. This\nparameter can only be set during create and cannot be changed."
              type: "boolean"
              x-go-name: "CaseInsensitiveNamesEnabled"
            createTimeMsecs: 
              description: "Specifies the time that the View was created in milliseconds."
              type: "integer"
              format: "int64"
              x-go-name: "CreateTimeMsecs"
            dataLockExpiryUsecs: 
              description: "DataLock (Write Once Read Many) lock expiry epoch time in microseconds. If\na view is marked as a DataLock view, only a Data Security Officer (a user\nhaving Data Security Privilege) can delete the view until the lock expiry\ntime."
              type: "integer"
              format: "int64"
              x-go-name: "DataLockExpiryUsecs"
            description: 
              description: "Specifies an optional text description about the View."
              type: "string"
              x-go-name: "Description"
            enableFilerAuditLogging: 
              description: "Specifies if Filer Audit Logging is enabled for this view."
              type: "boolean"
              x-go-name: "EnableFilerAuditLogging"
            enableMixedModePermissions: 
              description: "If set, mixed mode (NFS and SMB) access is enabled for this view."
              type: "boolean"
              x-go-name: "EnableMixedModePermissions"
            enableSmbAccessBasedEnumeration: 
              description: "Specifies if access-based enumeration should be enabled.\nIf 'true', only files and folders that the user has permissions to\naccess are visible on the SMB share for that user."
              type: "boolean"
              x-go-name: "EnableSmbAccessBasedEnumeration"
            enableSmbViewDiscovery: 
              description: "If set, it enables discovery of view for SMB."
              type: "boolean"
              x-go-name: "EnableSmbViewDiscovery"
            fileExtensionFilter: 
              description: "Optional filtering criteria that should be satisfied by all the files\ncreated in this view. It does not affect existing files."
              $ref: "#/definitions/FileExtensionFilter"
            logicalQuota: 
              description: "Specifies an optional logical quota limit (in bytes) for the usage allowed\non this View.\n(Logical data is when the data is fully hydrated and expanded.)\nThis limit overrides the limit inherited from the Storage Domain\n(View Box) (if set).\nIf logicalQuota is nil, the limit is inherited from the\nStorage Domain (View Box) (if set).\nA new write is not allowed if the Storage Domain (View Box) will exceed the\nspecified quota.\nHowever, it takes time for the Cohesity Cluster to calculate\nthe usage across Nodes, so the limit may be exceeded by a small amount.\nIn addition, if the limit is increased or data is removed,\nthere may be a delay before the Cohesity Cluster allows more data\nto be written to the View, as the Cluster is calculating the usage\nacross Nodes."
              type: "object"
              title: "Quota Policy"
              properties: 
                AlertLimit: 
                  description: "AlertLimitBytes converted to GiB format for report purposes."
                  type: "string"
                HardLimit: 
                  description: "HardLimitBytes converted to GiB format for report purposes."
                  type: "string"
                alertLimitBytes: 
                  description: "Specifies if an alert should be triggered when the usage of this\nresource exceeds this quota limit.\nThis limit is optional and is specified in bytes.\nIf no value is specified, there is no limit."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AlertLimitBytes"
                alertThresholdPercentage: 
                  description: "Supported only for user quota policy.\nSpecifies when the uage goes above an alert threshold percentage which is:\nHardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes\nCan only be set if HardLimitBytes is set.\nCannot be set if AlertLimitBytes is already set."
                  type: "integer"
                  format: "int64"
                  x-go-name: "AlertThresholdPercentage"
                hardLimitBytes: 
                  description: "Specifies an optional quota limit on the usage allowed for this\nresource. This limit is specified in bytes. If no value is specified,\nthere is no limit."
                  type: "integer"
                  format: "int64"
                  x-go-name: "HardLimitBytes"
            logicalUsageBytes: 
              description: "LogicalUsageBytes is the logical usage in bytes for the view."
              type: "integer"
              format: "int64"
              x-go-name: "LogicalUsageBytes"
            name: 
              description: "Specifies the name of the View."
              type: "string"
              x-go-name: "Name"
            nfsMountPath: 
              description: "Specifies the path for mounting this View as an NFS share."
              type: "string"
              x-go-name: "NfsMountPath"
            protocolAccess: 
              description: "Specifies the supported Protocols for the View."
              type: "string"
              enum: 
                - "kAll"
                - "kNFSOnly"
                - "kSMBOnly"
                - "kS3Only"
              x-go-name: "ProtocolAccess"
            qos: 
              description: "Specifies the Quality of Service (QoS) Policy for the View."
              $ref: "#/definitions/QoS"
            smbMountPath: 
              description: "Specifies the main path for mounting this View as an SMB share."
              type: "string"
              x-go-name: "SmbMountPath"
            smbPermissionsInfo: 
              description: "Specifies the SMB permissions for the View."
              $ref: "#/definitions/SmbPermissionsInfo"
            storagePolicyOverride: 
              description: "Specifies if inline deduplication and compression settings inherited from\nthe Storage Domain (View Box) should be disabled for this View."
              $ref: "#/definitions/StoragePolicyOverride"
            subnetWhitelist: 
              description: "Specifies a list of Subnets with IP addresses that have permissions to\naccess the View. (Overrides the Subnets specified at the global\nCohesity Cluster level.)"
              type: "array"
              title: "Array of Subnets."
              items: 
                $ref: "#/definitions/Subnet"
              x-go-name: "SubnetWhitelist"
            viewBoxId: 
              description: "Specifies the id of the Storage Domain (View Box) where the View is stored."
              type: "integer"
              format: "int64"
              x-go-name: "ViewBoxId"
            viewBoxName: 
              description: "Specifies the name of the Storage Domain (View Box) where the View is stored."
              type: "string"
              x-go-name: "ViewBoxName"
            viewId: 
              description: "Specifies an id of the View assigned by the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "ViewId"
            viewProtection: 
              description: "Specifies information about the Protection Jobs protecting this View."
              $ref: "#/definitions/ViewProtection"
      x-go-package: "cohesity/iris/server/data/public"
    ViewProtectionSource: 
      description: "Specifies a Protection Source in a View environment."
      type: "object"
      title: "View Protection Source."
      properties: 
        id: 
          description: "Specifies a unique id of a Protection Source for a View.\nThe id is unique across Cohesity Clusters."
          type: "object"
          title: "Unique Global Id."
          properties: 
            clusterId: 
              description: "Specifies the Cohesity Cluster id where the object was created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterId"
            clusterIncarnationId: 
              description: "Specifies an id for the Cohesity Cluster that is generated when\na Cohesity Cluster is initially created."
              type: "integer"
              format: "int64"
              x-go-name: "ClusterIncarnationId"
            id: 
              description: "Specifies a unique id assigned to an object (such as a Job)\nby the Cohesity Cluster."
              type: "integer"
              format: "int64"
              x-go-name: "Id"
        name: 
          description: "Specifies a human readable name of the Protection Source of a View."
          type: "string"
          x-go-name: "Name"
        type: 
          description: "Specifies the type of managed Object in a View Protection Source\nenvironment.\nExamples of View Objects include 'kViewBox' or 'kView'."
          type: "string"
          enum: 
            - "kViewBox"
            - "kView"
          x-go-name: "Type"
      x-go-package: "cohesity/iris/server/data/public"
    ViewUserQuotaParameters: 
      description: "Specifies the params to create and edit a user quota policy in a view."
      type: "object"
      title: "Create and Edit User Quota Policy for view Params."
      properties: 
        userQuotaPolicy: 
          description: "The user quota policies that need to be updated."
          $ref: "#/definitions/UserQuota"
        viewName: 
          description: "View name of input view."
          type: "string"
          x-go-name: "ViewName"
      x-go-package: "cohesity/iris/server/data/public"
    ViewUserQuotas: 
      type: "object"
      title: "Result from a call to GetViewUsersQuota."
      properties: 
        cookie: 
          description: "This cookie can be used in the succeeding call to list user quotas and\nusages to get the next set of user quota overrides. If set to nil, it\nmeans that there's no more results that the server could provide."
          type: "string"
          x-go-name: "Cookie"
        quotaAndUsageInAllViews: 
          type: "array"
          title: "The quota and usage information for a user in all his views."
          items: 
            $ref: "#/definitions/QuotaAndUsageInView"
          x-go-name: "QuotaAndUsageInAllViews"
        summaryForUser: 
          description: "UserQuotaSummaryForUser is the summary for user quotas in all views for\na user."
          $ref: "#/definitions/UserQuotaSummaryForUser"
        summaryForView: 
          description: "UserQuotaSummaryForView is the summary for user quotas in a view."
          $ref: "#/definitions/UserQuotaSummaryForView"
        userQuotaSettings: 
          description: "The default user quota policy for this view."
          $ref: "#/definitions/UserQuotaSettings"
        usersQuotaAndUsage: 
          type: "array"
          title: "The list of user quota policies/overrides and usages."
          items: 
            $ref: "#/definitions/UserQuotaAndUsage"
          x-go-name: "UsersQuotaAndUsage"
      x-go-package: "cohesity/iris/server/data/public"
    VirtualDiskInfo: 
      type: "object"
      title: "Virtual Disk Information."
      properties: 
        busNumber: 
          description: "Specifies the Id of the controller bus that controls the disk."
          type: "integer"
          format: "int64"
          x-go-name: "BusNumber"
        controllerType: 
          description: "Specifies the controller type like SCSI, or IDE etc."
          type: "string"
          x-go-name: "ControllerType"
        filename: 
          description: "Specifies the host file name used as the virtual disk."
          type: "string"
          x-go-name: "Filename"
        unitNumber: 
          description: "Specifies the disk file name. This is the VMDK name and not the\nflat file name."
          type: "integer"
          format: "int64"
          x-go-name: "UnitNumber"
      x-go-package: "cohesity/iris/server/data/public"
    Vlan: 
      description: "Specifies the settings of a VLAN."
      type: "object"
      title: "VLAN."
      properties: 
        addToClusterPartition: 
          description: "Specifies whether to add the VLAN IPs to the cluster partition\nthat already has one or more IPs from this VLAN."
          type: "boolean"
          x-go-name: "AddToClusterPartition"
        description: 
          description: "Specifies a description of the VLAN."
          type: "string"
          x-go-name: "Description"
        gateway: 
          description: "Specifies the Gateway of the VLAN."
          type: "string"
          x-go-name: "Gateway"
        hostname: 
          description: "Specifies the hostname of the VLAN."
          type: "string"
          x-go-name: "Hostname"
        id: 
          description: "Specifies the id of the VLAN."
          type: "integer"
          format: "int32"
          x-go-name: "Id"
        ips: 
          description: "Specifies a list of IPs in the VLAN."
          type: "array"
          title: "Array of IPs."
          items: 
            type: "string"
          x-go-name: "Ips"
        subnet: 
          description: "Specifies the subnet of the VLAN.\nThe netmask can be specified by setting netmaskBits or netmaskIp4.\nThe netmask can only be set using netmaskIp4 if the IP address is\nan IPv4 address."
          type: "object"
          title: "Subnet."
          properties: 
            description: 
              description: "Description of the subnet."
              type: "string"
              x-go-name: "Description"
            ip: 
              description: "Specifies either an IPv6 address or an IPv4 address."
              type: "string"
              x-go-name: "Ip"
            netmaskBits: 
              description: "Specifies the netmask using bits."
              type: "integer"
              format: "int32"
              x-go-name: "NetmaskBits"
            netmaskIp4: 
              description: "Specifies the netmask using an IP4 address.\nThe netmask can only be set using netmaskIp4 if the IP address\nis an IPv4 address."
              type: "string"
              x-go-name: "NetmaskIp4"
      x-go-package: "cohesity/iris/server/data/public"
    VlanParameters: 
      type: "object"
      title: "Specifies VLAN parameters for the restore operation."
      properties: 
        disableVlan: 
          description: "Specifies whether to use the VIPs even when VLANs are configured on the\nCluster. If configured, VLAN IP addresses are used by default.\nIf VLANs are not configured, this flag is ignored.\nSet this flag to true to force using the partition VIPs when VLANs are\nconfigured on the Cluster."
          type: "boolean"
          x-go-name: "DisableVlan"
        vlan: 
          description: "Specifies the VLAN to use for mounting Cohesity's view on the remote\nhost. If specified, Cohesity hostname or the IP address on this VLAN\nis used."
          type: "integer"
          format: "int32"
          x-go-name: "Vlan"
      x-go-package: "cohesity/iris/server/data/public"
    VmVolumesInformation: 
      description: "Specifies information about a logical volume found a VM."
      type: "object"
      title: "VM Volume Information."
      properties: 
        filesystemVolumes: 
          description: "Specifies information about the filesystem volumes found in a\nlogical volume."
          type: "array"
          title: "Array of Filesystem Volumes."
          items: 
            $ref: "#/definitions/FilesystemVolume"
          x-go-name: "FilesystemVolumes"
      x-go-package: "cohesity/iris/server/data/public"
    VmwareCloneParameters: 
      description: "Specifies the information required for recovering or cloning VmWare VMs."
      type: "object"
      title: "VmWare Clone Parameters."
      properties: 
        datastoreFolderId: 
          description: "Specifies the folder where the restore datastore should be created.\nThis is applicable only when the VMs are being cloned."
          type: "integer"
          format: "int64"
          x-go-name: "DatastoreFolderId"
        disableNetwork: 
          description: "Specifies whether the network should be left in disabled state.\nAttached network is enabled by default. Set this flag to true to\ndisable it."
          type: "boolean"
          x-go-name: "DisableNetwork"
        networkId: 
          description: "Specifies a network configuration to be attached to the cloned or\nrecovered object.\nFor kCloneVMs and kRecoverVMs tasks, original network configuration\nis detached if the cloned or recovered object is kept under a different\nparent Protection Source or a different Resource Pool.\nBy default, for kRecoverVMs task, original network configuration is\npreserved if the recovered object is kept under the same parent\nProtection Source and the same Resource Pool.\nSpecify this field to override the preserved network configuration or\nto attach a new network configuration to the cloned or recovered objects.\nYou can get the networkId of the kNetwork object by setting\nincludeNetworks to 'true' in the GET /public/protectionSources operation.\nIn the response, get the id of the desired kNetwork object, the resource\npool, and the registered parent Protection Source."
          type: "integer"
          format: "int64"
          x-go-name: "NetworkId"
        poweredOn: 
          description: "Specifies the power state of the cloned or recovered objects.\nBy default, the cloned or recovered objects are powered off."
          type: "boolean"
          x-go-name: "KeepPoweredOn"
        prefix: 
          description: "Specifies a prefix to prepended to the source object name to derive a\nnew name for the recovered or cloned object.\nBy default, cloned or recovered objects retain their original name.\nLength of this field is limited to 8 characters."
          type: "string"
          x-go-name: "Prefix"
        resourcePoolId: 
          description: "Specifies the resource pool where the cloned or recovered objects are\nattached. This field is mandatory for kCloneVMs Restore Tasks always.\nFor kRecoverVMs Restore Tasks, this field is mandatory only if\nnewParentId field is specified. If this field is not specified,\nrecovered objects are attached to the original resource pool under the\noriginal parent."
          type: "integer"
          format: "int64"
          x-go-name: "ResourcePoolId"
        suffix: 
          description: "Specifies a suffix to appended to the original source object name\nto derive a new name for the recovered or cloned object.\nBy default, cloned or recovered objects retain their original name.\nLength of this field is limited to 8 characters."
          type: "string"
          x-go-name: "Suffix"
        vmFolderId: 
          description: "Specifies a folder where the VMs should be restored. This is applicable\nonly when the VMs are being restored to an alternate location or if clone\nis being performed."
          type: "integer"
          format: "int64"
          x-go-name: "VmFolderId"
      x-go-package: "cohesity/iris/server/data/public"
    VmwareEnvJobParameters: 
      description: "Specifies job parameters applicable for all 'kVMware' Environment type\nProtection Sources in a Protection Job."
      type: "object"
      title: "Protection Job parameters applicable to 'kVMware' Environment type."
      properties: 
        excludedDisks: 
          description: "Specifies the list of Disks to be excluded from backing up. These disks\nare excluded from all Protection Sources in the Protection Job."
          type: "array"
          items: 
            $ref: "#/definitions/DiskUnit"
          x-go-name: "ExcludedDisks"
        fallbackToCrashConsistent: 
          description: "If true, takes a crash-consistent snapshot when app-consistent snapshot\nfails. Otherwise, the snapshot attempt is marked failed."
          type: "boolean"
          x-go-name: "FallbackToCrashConsistent"
        skipPhysicalRdmDisks: 
          description: "If true, skip physical RDM disks when backing up VMs. Otherwise, backup\nof VMs having physical RDM will fail."
          type: "boolean"
          x-go-name: "SkipPhysicalRdmDisks"
      x-go-package: "cohesity/iris/server/data/public"
    VmwareRestoreParameters: 
      description: "Specifies the information required for recovering or cloning VmWare VMs."
      type: "object"
      title: "VmWare Restore Parameters."
      properties: 
        datastoreFolderId: 
          description: "Specifies the folder where the restore datastore should be created.\nThis is applicable only when the VMs are being cloned."
          type: "integer"
          format: "int64"
          x-go-name: "DatastoreFolderId"
        datastoreId: 
          description: "Specifies the datastore where the object's files should be\nrecovered to.\nThis field is mandatory to recover objects to a different\nresource pool or to a different parent source.\nIf not specified, objects are recovered to their\noriginal datastore locations in the parent source."
          type: "integer"
          format: "int64"
          x-go-name: "DatastoreId"
        disableNetwork: 
          description: "Specifies whether the network should be left in disabled state.\nAttached network is enabled by default. Set this flag to true to\ndisable it."
          type: "boolean"
          x-go-name: "DisableNetwork"
        networkId: 
          description: "Specifies a network configuration to be attached to the cloned or\nrecovered object.\nFor kCloneVMs and kRecoverVMs tasks, original network configuration\nis detached if the cloned or recovered object is kept under a different\nparent Protection Source or a different Resource Pool.\nBy default, for kRecoverVMs task, original network configuration is\npreserved if the recovered object is kept under the same parent\nProtection Source and the same Resource Pool.\nSpecify this field to override the preserved network configuration or\nto attach a new network configuration to the cloned or recovered objects.\nYou can get the networkId of the kNetwork object by setting\nincludeNetworks to 'true' in the GET /public/protectionSources operation.\nIn the response, get the id of the desired kNetwork object, the resource\npool, and the registered parent Protection Source."
          type: "integer"
          format: "int64"
          x-go-name: "NetworkId"
        poweredOn: 
          description: "Specifies the power state of the cloned or recovered objects.\nBy default, the cloned or recovered objects are powered off."
          type: "boolean"
          x-go-name: "KeepPoweredOn"
        prefix: 
          description: "Specifies a prefix to prepended to the source object name to derive a\nnew name for the recovered or cloned object.\nBy default, cloned or recovered objects retain their original name.\nLength of this field is limited to 8 characters."
          type: "string"
          x-go-name: "Prefix"
        resourcePoolId: 
          description: "Specifies the resource pool where the cloned or recovered objects are\nattached. This field is mandatory for kCloneVMs Restore Tasks always.\nFor kRecoverVMs Restore Tasks, this field is mandatory only if\nnewParentId field is specified. If this field is not specified,\nrecovered objects are attached to the original resource pool under the\noriginal parent."
          type: "integer"
          format: "int64"
          x-go-name: "ResourcePoolId"
        suffix: 
          description: "Specifies a suffix to appended to the original source object name\nto derive a new name for the recovered or cloned object.\nBy default, cloned or recovered objects retain their original name.\nLength of this field is limited to 8 characters."
          type: "string"
          x-go-name: "Suffix"
        vmFolderId: 
          description: "Specifies a folder where the VMs should be restored. This is applicable\nonly when the VMs are being restored to an alternate location or if clone\nis being performed."
          type: "integer"
          format: "int64"
          x-go-name: "VmFolderId"
      x-go-package: "cohesity/iris/server/data/public"
    VmwareSpecialParameters: 
      description: "Specifies additional special settings applicable for a Protection Source\nof 'kVMware' type in a Protection Job."
      type: "object"
      title: "Protection Job parameters applicable for a 'kVMware' Protection Source."
      properties: 
        applicationParameters: 
          description: "Specifies parameters that are related to applications running on the\nProtection Source."
          $ref: "#/definitions/ApplicationParameters"
        excludedDisks: 
          description: "Specifies the list of Disks to be excluded from backing up. These disks\nare excluded from all Protection Sources in the Protection Job."
          type: "array"
          items: 
            $ref: "#/definitions/DiskUnit"
          x-go-name: "ExcludedDisks"
        vmCredentials: 
          description: "Specifies the administrator credentials to log in to the\nguest Windows system of a VM that hosts the Microsoft Exchange Server.\nIf truncateExchangeLog is set to true and the specified source\nis a VM, administrator credentials to log in to the guest Windows system\nof the VM must be provided to truncate the logs.\nThis field is only applicable to Sources in the kVMware environment."
          type: "object"
          title: "VM Credentials."
          properties: 
            password: 
              description: "Specifies password of the username to access the target source."
              type: "string"
              x-go-name: "Password"
            username: 
              description: "Specifies username to access the target source."
              type: "string"
              x-go-name: "Username"
      x-go-package: "cohesity/iris/server/data/public"
    VolumeSecurityInfo: 
      description: "Specifies information about NetApp volume security settings."
      type: "object"
      title: "Volume Security Information."
      properties: 
        groupId: 
          description: "Specifies the Unix group ID for this volume. 0 indicates the root id."
          type: "integer"
          format: "int32"
          x-go-name: "GroupId"
        permissions: 
          description: "Specifies the Unix permission bits in octal string format."
          type: "string"
          x-go-name: "Permissions"
        style: 
          description: "Specifies the security style associated with this volume.\nSpecifies the type of a NetApp Volume.\n'kUnix' indicates Unix-style security.\n'kNtfs' indicates Windows NTFS-style security.\n'kMixed' indicates mixed-style security.\n'kUnified' indicates Unified-style security."
          type: "string"
          enum: 
            - "kUnix"
            - "kNtfs"
            - "kMixed"
            - "kUnified"
          x-go-name: "Style"
        userId: 
          description: "Specifies the Unix user id for this volume. 0 indicates the root id."
          type: "integer"
          format: "int32"
          x-go-name: "UserId"
      x-go-package: "cohesity/iris/server/data/public"
    VserverNetworkInterface: 
      description: "Specifies information about a logical network interface on a\nNetApp Vserver. The interface's IP address is the mount point for a\nspecific data protocol, such as NFS or CIFS."
      type: "object"
      title: "Vserver Network Interface."
      properties: 
        dataProtocols: 
          description: "Specifies the set of data protocols supported by this interface.\n'kNfs' indicates NFS connections.\n'kCifs' indicates SMB (CIFS) connections.\n'kIscsi' indicates iSCSI connections.\n'kFc' indicates Fiber Channel connections.\n'kFcache' indicates Flex Cache connections.\n'kHttp' indicates HTTP connections.\n'kNdmp' indicates NDMP connections.\n'kManagement' indicates non-data connections used for management purposes."
          type: "array"
          title: "Array of Data Protocols."
          items: 
            type: "string"
            enum: 
              - "kNfs"
              - "kCifs"
              - "kIscsi"
              - "kFc"
              - "kFcache"
              - "kHttp"
              - "kNdmp"
              - "kManagement"
          x-go-name: "DataProtocols"
        ipAddress: 
          description: "Specifies the IP address of this interface."
          type: "string"
          x-go-name: "IpAddress"
        name: 
          description: "Specifies the name of this interface."
          type: "string"
          x-go-name: "Name"
      x-go-package: "cohesity/iris/server/data/public"
    WindowsHostSnapshotParameters: 
      type: "object"
      title: "Specifies settings that are meaningful only on Windows hosts."
      properties: 
        copyOnlyBackup: 
          description: "Specifies whether to backup regardless of the state of each file's\nbackup history. Backup history will not be updated. Refer Microsoft\ndocumentation on VSS_BT_COPY."
          type: "boolean"
          x-go-name: "CopyOnlyBackup"
        disableMetadata: 
          description: "Specifies whether to disable fetching and storing of some metadata\non Cohesity Cluster to save storage space. Otherwise, there will be\nsome metadata fetched and stored on Cohesity Cluster."
          type: "boolean"
          x-go-name: "DisableMetadata"
        disableNotification: 
          description: "Specifies whether to disable some notification steps when taking\nsnapshots."
          type: "boolean"
          x-go-name: "DisableNotification"
        excludedVssWriters: 
          description: "For example, \"ASR Writer\", \"System Writer\". Refer Microsoft documentaion\nfor a complete list."
          type: "array"
          title: "Specifies a list of Windows VSS writers that are excluded from backups."
          items: 
            type: "string"
          x-go-name: "ExcludedVssWriters"
      x-go-package: "cohesity/iris/server/data/public"
  responses: 
    AddActiveDirectoryPrincipalsResponse: 
      description: "Success"
      schema: 
        description: "List of users or groups that were added to the Cohesity Cluster\nfor Active Directory principals."
        type: "array"
        title: "Array of Added Users and Groups."
        items: 
          $ref: "#/definitions/AddedActiveDirectoryPrincipal"
    AnalyzeJarResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/AnalyseJarResult"
    ApplicationResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/MapReduceInfo"
    CancelMapReduceInstanceRunResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/KillMapReduceInstanceResult"
    CloneDirectoryResponse: 
      description: "Success"
    CloneViewResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/View"
    ClusterPartitionResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ClusterPartition"
    ClusterResponse: 
      description: "Successful Response"
      schema: 
        $ref: "#/definitions/Cluster"
    CreateActiveDirectoryResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ActiveDirectoryEntry"
    CreateCloneTaskResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/RestoreTask"
    CreateGroupResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/Group"
    CreateProtectionJobResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ProtectionJob"
    CreateProtectionPolicyResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ProtectionPolicy"
    CreateRecoverTaskResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/RestoreTask"
    CreateRemoteClusterResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/RemoteCluster"
    CreateRemoteVaultRestoreTaskResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/UniversalId"
    CreateRemoteVaultSearchJobResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/CreatedRemoteVaultSearchJobUid"
    CreateResolutionResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/AlertResolution"
    CreateRestoreFilesTaskResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/RestoreTask"
    CreateRoleResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/Role"
    CreateSchedulerJobResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/SchedulerProto_SchedulerJob"
    CreateUserResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/User"
    CreateVaultResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/Vault"
    CreateViewAliasResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ViewAlias"
    CreateViewBoxResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ViewBox"
    CreateViewResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/View"
    CreateViewUserQuotaResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/UserQuotaAndUsage"
    DeleteViewResponse: 
      description: "Success"
    DownloadResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ExtractFileRangeResult"
    EmailReportResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter"
    Error: 
      description: "Error"
      schema: 
        $ref: "#/definitions/RequestError"
    GenerateAccessTokenResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/AccessToken"
    GetActiveDirectoryResponse: 
      description: "Success"
      schema: 
        description: "List of Active Directory domains that the Cohesity Cluster has joined."
        type: "array"
        title: "Array of Active Directories."
        items: 
          $ref: "#/definitions/ActiveDirectoryEntry"
    GetAlertByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/Alert"
    GetAlertsResponse: 
      description: "Success"
      schema: 
        description: "List of Alerts that match the specified filter criteria."
        type: "array"
        title: "Array of Alerts."
        items: 
          $ref: "#/definitions/Alert"
    GetApplicationByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/MapReduceInfo"
    GetApplicationsResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ApplicationsWrapper"
    GetArchiveMediaInfoResponse: 
      description: "Success"
      schema: 
        description: "List the tape media in QStar Archive Vault that match the specified\nfilters."
        type: "array"
        title: "Array of Tape Media."
        items: 
          $ref: "#/definitions/TapeMediaInformation"
    GetBasicClusterInfoResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/BasicClusterInfo"
    GetClusterPartitionsResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of Cluster Partitions that match the specified\nfilter criteria."
        type: "array"
        title: "Array of Cluster Partitions."
        items: 
          $ref: "#/definitions/ClusterPartition"
    GetClusterStatsResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ClusterStats"
    GetDashboardResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/DashboardResponse"
    GetDataTransferFromVaultsSummaryResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/DataTransferFromVaultsSummaryResponse"
    GetDataTransferToVaultsSummaryResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/DataTransferToVaultsSummaryResponse"
    GetEntitiesResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of entities."
        type: "array"
        title: "Array of Entities."
        items: 
          $ref: "#/definitions/EntityProto"
    GetEntitiesSchemaResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of entity schemas."
        type: "array"
        title: "Array of Entity Schemas."
        items: 
          $ref: "#/definitions/EntitySchemaProto"
    GetEntitySchemaByNameResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of entity schemas."
        type: "array"
        title: "Array of Entity Schemas."
        items: 
          $ref: "#/definitions/EntitySchemaProto"
    GetFileSnapshotsInformationResponse: 
      description: "Success"
      schema: 
        description: "Specifies an array of snapshots that contain the folder or file.\nIn addition, information about each file or folder is provided."
        type: "array"
        title: "Array of Snapshots and File/Folder Information."
        items: 
          $ref: "#/definitions/FileSnapshotInformation"
    GetGroupsResponse: 
      description: "Success"
      schema: 
        description: "Specifies the groups that match the specified filter criteria."
        type: "array"
        title: "Array of Groups."
        items: 
          $ref: "#/definitions/Group"
    GetMRUploadJarPathResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/GetMRJarUploadPathResult"
    GetMapReduceAppRunsResponse: 
      description: "Success"
      schema: 
        type: "array"
        items: 
          $ref: "#/definitions/AppRunHistory"
    GetMapperByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/MapperInfo"
    GetMappersResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/MappersWrapper"
    GetNodeByIdResponse: 
      description: "Success"
      schema: 
        type: "array"
        items: 
          $ref: "#/definitions/Node"
    GetNodeStatsResponse: 
      description: "Success"
      schema: 
        type: "array"
        items: 
          $ref: "#/definitions/NodeStats"
    GetNodesResponse: 
      description: "Success"
      schema: 
        type: "array"
        items: 
          $ref: "#/definitions/Node"
    GetNotificationsResponse: 
      description: "Success"
      schema: 
        type: "array"
        items: 
          $ref: "#/definitions/TaskNotification"
    GetPrivilegesResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of privileges."
        type: "array"
        title: "Array of Privileges."
        items: 
          $ref: "#/definitions/PrivilegeInfo"
    GetProtectionJobByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ProtectionJob"
    GetProtectionJobsResponse: 
      description: "Success"
      schema: 
        type: "array"
        title: "Array of Protection Jobs."
        items: 
          $ref: "#/definitions/ProtectionJob"
    GetProtectionPoliciesResponse: 
      description: "Success"
      schema: 
        description: "List of Protections Policies that match the specified filter criteria."
        type: "array"
        title: "Array of Protection Policies."
        items: 
          $ref: "#/definitions/ProtectionPolicy"
    GetProtectionPolicyByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ProtectionPolicy"
    GetProtectionRunsResponse: 
      description: "Success"
      schema: 
        type: "array"
        title: "Array of Protection Job Runs."
        items: 
          $ref: "#/definitions/ProtectionRunInstance"
    GetProtectionSourcesObjectByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ProtectionSource"
    GetProtectionSourcesObjectsResponse: 
      description: "Success"
      schema: 
        type: "array"
        title: "Array of Protection Source Objects."
        items: 
          $ref: "#/definitions/ProtectionSource"
    GetReducerByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ReducerInfo"
    GetReducersResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ReducersWrapper"
    GetRemoteClusterByIdResponse: 
      description: "Success"
      schema: 
        description: "A single remote Cluster instance with the specified Cluster id is returned\nin this Array."
        type: "array"
        title: "Single Remote Cluster in Array."
        items: 
          $ref: "#/definitions/RemoteCluster"
    GetRemoteClustersResponse: 
      description: "Success"
      schema: 
        description: "Specifies the remote Clusters that are registered on this Cluster\nfor replication that match the specified filter criteria."
        type: "array"
        title: "Array of Remote Clusters."
        items: 
          $ref: "#/definitions/RemoteCluster"
    GetRemoteVaultSearchJobResultsResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/RemoteVaultSearchJobResults"
    GetReplicationEncryptionKeyResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ReplicationEncryptionKeyReponse"
    GetResolutionByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/AlertResolution"
    GetResolutionsResponse: 
      description: "Success"
      schema: 
        description: "List of Alert Resolutions that match the specified filter criteria."
        type: "array"
        title: "Array of Alert Resolutions."
        items: 
          $ref: "#/definitions/AlertResolution"
    GetRestoreSummaryByObjectTypeReportResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of restore sources summary grouped by the object type."
        type: "array"
        title: "Array of Restore source summary by object type."
        items: 
          $ref: "#/definitions/RestoreSourceSummaryByObjectTypeElement"
    GetRestoreTaskByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/RestoreTask"
    GetRestoreTasksResponse: 
      description: "Success"
      schema: 
        type: "array"
        title: "Array of Restore Tasks."
        items: 
          $ref: "#/definitions/RestoreTask"
    GetRolesResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of roles."
        type: "array"
        title: "Array of Roles."
        items: 
          $ref: "#/definitions/Role"
    GetSchedulerJobsResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/SchedulerProto"
    GetSmbFileOpensResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/SmbActiveFileOpensResponse"
    GetStaticRoutesResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of the Static Routes for the Cohesity Cluster."
        type: "array"
        title: "Array of Static Routes."
        items: 
          $ref: "#/definitions/StaticRoute"
    GetTimeSeriesStatsResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/MetricDataBlock"
    GetUserPreferencesResponse: 
      description: "Success"
      schema: 
        type: "array"
        items: 
          $ref: "#/definitions/UserPreferencesProto_UserPreferences_Preference"
    GetUserPrivilegesResponse: 
      description: "Success"
      schema: 
        description: "List of privileges for the session user."
        type: "array"
        title: "Array of Privileges."
        items: 
          type: "string"
    GetUsersResponse: 
      description: "Success"
      schema: 
        description: "Specifies the users that match the specified search criteria."
        type: "array"
        title: "Array of Users."
        items: 
          $ref: "#/definitions/User"
    GetVaultByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/Vault"
    GetVaultEncryptionKeyResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/VaultEncryptionKey"
    GetVaultsResponse: 
      description: "Success"
      schema: 
        description: "List of Vaults that match the specified filter criteria."
        type: "array"
        title: "Array of Vaults."
        items: 
          $ref: "#/definitions/Vault"
    GetViewBoxByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ViewBox"
    GetViewBoxesResponse: 
      description: "Success"
      schema: 
        description: "List of Storage Domains (View Boxes) that match the specified filter\ncriteria."
        type: "array"
        title: "Array of View Boxes."
        items: 
          $ref: "#/definitions/ViewBox"
    GetViewByNameResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/View"
    GetViewUserQuotasResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ViewUserQuotas"
    GetViewsByShareNameResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/GetViewsByShareNameResult"
    GetViewsResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/GetViewsResult"
    GetVlanByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/Vlan"
    GetVlansResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of VLANs for this Cohesity Cluster."
        type: "array"
        title: "Array of VLANs."
        items: 
          $ref: "#/definitions/Vlan"
    GetVmVolumesInformationResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of logical volumes found in a VM."
        type: "array"
        title: "Array of Logical Volumes."
        items: 
          $ref: "#/definitions/VmVolumesInformation"
    GetWebServerCertificateResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/SslCertificateConfig"
    ImportConfigResponse: 
      description: "Success"
    ImportListResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/TableOfContents"
    ListApplicationServersResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of Application Servers found in a Protection Source\ntree given a the root node id of the Protection Source tree and filtered\nby the application type like 'kSQL', or 'kExchange'."
        type: "array"
        title: "Array of Application Servers."
        items: 
          $ref: "#/definitions/RegisteredApplicationServer"
    ListCentrifyZonesResponse: 
      description: "Success"
      schema: 
        type: "array"
        title: "Array of Centrify zones."
        items: 
          $ref: "#/definitions/ListCentrifyZone"
    ListProtectedVmsResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of Protected VMs in a registered Protection Source and\nthe protection stats."
        type: "array"
        items: 
          $ref: "#/definitions/ProtectedVmInfo"
    ListProtectionSourcesRegistrationInfoResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/GetRegistrationInfoResponse"
    ListProtectionSourcesResponse: 
      description: "Success"
      schema: 
        description: "List of Protection Sources and Object subtrees matching\nthe specified filter criteria."
        type: "array"
        title: "Array of Sources and Subtrees."
        items: 
          $ref: "#/definitions/ProtectionSourceNode"
    ListProtectionSourcesRootNodesResponse: 
      description: "Success"
      schema: 
        description: "Specifies the array of root nodes of Protection Source trees with\nregistration information."
        type: "array"
        title: "Array of Root Nodes."
        items: 
          $ref: "#/definitions/ProtectionSourceNode"
    ListRemoteVaultRestoreTasksStatusResponse: 
      description: "Success"
      schema: 
        description: "List of details about the statuses of remote Vault restore tasks."
        type: "array"
        title: "Array of Remote Vault Restore Tasks Statuses."
        items: 
          $ref: "#/definitions/RemoteVaultRestoreTaskStatus"
    ListRemoteVaultSearchJobByIdResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/RemoteVaultSearchJobInformation"
    ListRemoteVaultSearchJobsResponse: 
      description: "Success"
      schema: 
        description: "Specifies of a list of searches of remote Vaults."
        type: "array"
        title: "Array of Remote Vault Searches."
        items: 
          $ref: "#/definitions/RemoteVaultSearchJobInformation"
    ListSourcesForPrincipalsResponse: 
      description: "Success"
      schema: 
        description: "Specifies the Protection Source objects and Views that the specified\nlist of principals have permissions to access."
        type: "array"
        title: "Array of Protection Source Objects and Views."
        items: 
          $ref: "#/definitions/SourcesForSid"
    ListSqlAagHostsAndDatabasesResponse: 
      description: "List SQL AAG hosts and databases response.\nSuccess"
      schema: 
        type: "array"
        items: 
          $ref: "#/definitions/SqlAagHostAndDatabases"
    ListVirtualMachinesResponse: 
      description: "Success"
      schema: 
        type: "array"
        title: "Array of Protection Source VM Leaf Nodes."
        items: 
          $ref: "#/definitions/ProtectionSource"
    MapperResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/MapperInfo"
    NoContentResponse: 
      description: "No Content"
    NodeHardwareInfoHandlerResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/HardwareInfo"
    NotFoundResponse: 
      description: "Not Found"
    OverwriteViewResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/View"
    ProtectionSourcesJobRunsReportResponse: 
      description: "Success"
      schema: 
        description: "Specifies a list of Protection Sources Objects and the Snapshots that\ncontain backups of these Objects."
        type: "array"
        title: "Array of Protection Sources and Snapshots."
        items: 
          $ref: "#/definitions/ProtectionSourcesJobRunsReportElement"
    ProtectionSourcesJobsSummaryReportResponse: 
      description: "Success"
      schema: 
        description: "Specifies the list of Snapshot summary statistics\nthat match the filter criteria."
        type: "array"
        title: "Array of Protection Sources Summary Statistics."
        items: 
          $ref: "#/definitions/ProtectionSourcesSummaryStats"
    ReducerResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ReducerInfo"
    RegisterApplicationServersResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ProtectionSource"
    RegisterProtectionSourceResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ProtectionSource"
    RenameViewResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/View"
    ResetS3SecretKeyResponse: 
      description: "New S3 Secret Access Key."
      schema: 
        $ref: "#/definitions/NewS3SecretAccessKey"
    RunMapReduceAppInstanceResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/RunMapReduceInstanceResult"
    SearchActiveDirectoryPrincipalsResponse: 
      description: "Success"
      schema: 
        description: "List of principals matching the specified filter criteria."
        type: "array"
        title: "Array of Active Directory Principals."
        items: 
          $ref: "#/definitions/ActiveDirectoryPrincipal"
    SearchClusterAuditLogsResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ClusterAuditLogsSearchResult"
    SearchObjectsResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ObjectSearchResults"
    SearchPrincipalsResponse: 
      description: "Success"
      schema: 
        description: "List of principals matching the specified filter criteria."
        type: "array"
        title: "Array of Principals."
        items: 
          $ref: "#/definitions/Principal"
    SearchRestoredFilesResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/FileSearchResults"
    SubnetResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/Subnet"
    SuccessResponse: 
      description: "Success Response"
    UnregisterApplicationServersResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ProtectionSource"
    UpdateActiveDirectoryResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ActiveDirectoryEntry"
    UpdateApplicationServersResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ProtectionSource"
    UpdateClusterResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/Cluster"
    UpdateGroupResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/Group"
    UpdateProtectionJobResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ProtectionJob"
    UpdateProtectionPolicyResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ProtectionPolicy"
    UpdateRemoteClusterResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/RemoteCluster"
    UpdateResolutionResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/AlertResolution"
    UpdateRoleResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/Role"
    UpdateSchedulerJobResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/SchedulerProto_SchedulerJob"
    UpdateStaticRouteResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/StaticRoute"
    UpdateUserPreferencesResponse: 
      description: "Success"
      schema: 
        type: "array"
        items: 
          $ref: "#/definitions/UserPreferencesProto_UserPreferences_Preference"
    UpdateUserResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/User"
    UpdateVaultResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/Vault"
    UpdateViewBoxResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/ViewBox"
    UpdateViewResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/View"
    UpdateViewUserQuotaResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/UserQuotaAndUsage"
    UpdateVlanResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/Vlan"
    UpdateWebServerCertificateResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/SslCertificateConfig"
    UpgradePhysicalAgentsResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/UpgradePhysicalAgentsMessage"
    UploadJarResponse: 
      description: "Success"
      schema: 
        $ref: "#/definitions/UploadMRJarViewPathWrapper"
    UserQuotaSettingsResponse: 
      description: "The User Quota settings applied to a view."
      schema: 
        $ref: "#/definitions/UserQuotaSettings"

