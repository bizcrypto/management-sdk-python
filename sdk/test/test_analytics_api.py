# coding: utf-8

"""
    Cohesity REST API

    This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import cohesity
from cohesity.rest import ApiException
from cohesity.apis.analytics_api import AnalyticsApi


class TestAnalyticsApi(unittest.TestCase):
    """ AnalyticsApi unit test stubs """

    def setUp(self):
        self.api = cohesity.apis.analytics_api.AnalyticsApi()

    def tearDown(self):
        pass

    def test_analyze_jar(self):
        """
        Test case for analyze_jar

        Analyze the uploaded jar.
        """
        pass

    def test_cancel_map_reduce_instance_run(self):
        """
        Test case for cancel_map_reduce_instance_run

        Cancel a specific map reduce instance run.
        """
        pass

    def test_create_application(self):
        """
        Test case for create_application

        Create an Application.
        """
        pass

    def test_create_mapper(self):
        """
        Test case for create_mapper

        Create a Mapper.
        """
        pass

    def test_create_reducer(self):
        """
        Test case for create_reducer

        Create a Reducer.
        """
        pass

    def test_delete_application(self):
        """
        Test case for delete_application

        Delete an Application.
        """
        pass

    def test_delete_map_reduce_instance_run(self):
        """
        Test case for delete_map_reduce_instance_run

        Delete a Map-Reduce Application Instance Run.
        """
        pass

    def test_delete_mapper(self):
        """
        Test case for delete_mapper

        Delete a Mapper.
        """
        pass

    def test_delete_reducer(self):
        """
        Test case for delete_reducer

        Delete a Reducer.
        """
        pass

    def test_delete_uploaded_jar(self):
        """
        Test case for delete_uploaded_jar

        Delete the uploaded jar from temporary locaation.
        """
        pass

    def test_download_mr_base_jar(self):
        """
        Test case for download_mr_base_jar

        Downloads the map reduce base jar.
        """
        pass

    def test_download_mr_output_files(self):
        """
        Test case for download_mr_output_files

        Download map reduce base instance run output files from Yoda.
        """
        pass

    def test_get_application_by_id(self):
        """
        Test case for get_application_by_id

        List details about a single Application.
        """
        pass

    def test_get_applications(self):
        """
        Test case for get_applications

        List Applications filtered by the specified parameters.
        """
        pass

    def test_get_map_reduce_app_runs(self):
        """
        Test case for get_map_reduce_app_runs

        List map reduce application runs filtered by the specified parameters.
        """
        pass

    def test_get_mapper_by_id(self):
        """
        Test case for get_mapper_by_id

        List details about a single Mapper.
        """
        pass

    def test_get_mappers(self):
        """
        Test case for get_mappers

        List Mappers filtered by the specified parameters.
        """
        pass

    def test_get_mr_upload_jar_path(self):
        """
        Test case for get_mr_upload_jar_path

        Get details about the mounted path to upload Jars.
        """
        pass

    def test_get_reducer_by_id(self):
        """
        Test case for get_reducer_by_id

        List details about a single Reducer.
        """
        pass

    def test_get_reducers(self):
        """
        Test case for get_reducers

        List Reducers filtered by the specified parameters.
        """
        pass

    def test_run_map_reduce_app_instance(self):
        """
        Test case for run_map_reduce_app_instance

        Run a map-reduce application instance.
        """
        pass

    def test_update_application(self):
        """
        Test case for update_application

        Update an Application.
        """
        pass

    def test_update_mapper(self):
        """
        Test case for update_mapper

        Update a Mapper.
        """
        pass

    def test_update_reducer(self):
        """
        Test case for update_reducer

        Update a Reducer.
        """
        pass

    def test_upload_jar(self):
        """
        Test case for upload_jar

        Upload a jar to pre-specified Yoda internal view.
        """
        pass


if __name__ == '__main__':
    unittest.main()
