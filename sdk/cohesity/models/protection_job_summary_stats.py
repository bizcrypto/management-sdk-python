# coding: utf-8

"""
    Cohesity REST API

    This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class ProtectionJobSummaryStats(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, average_run_time_usecs=None, fastest_run_time_usecs=None, num_canceled_runs=None, num_failed_runs=None, num_sla_violations=None, num_successful_runs=None, slowest_run_time_usecs=None, total_bytes_read_from_source=None, total_logical_backup_size_bytes=None, total_physical_backup_size_bytes=None):
        """
        ProtectionJobSummaryStats - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'average_run_time_usecs': 'int',
            'fastest_run_time_usecs': 'int',
            'num_canceled_runs': 'int',
            'num_failed_runs': 'int',
            'num_sla_violations': 'int',
            'num_successful_runs': 'int',
            'slowest_run_time_usecs': 'int',
            'total_bytes_read_from_source': 'int',
            'total_logical_backup_size_bytes': 'int',
            'total_physical_backup_size_bytes': 'int'
        }

        self.attribute_map = {
            'average_run_time_usecs': 'averageRunTimeUsecs',
            'fastest_run_time_usecs': 'fastestRunTimeUsecs',
            'num_canceled_runs': 'numCanceledRuns',
            'num_failed_runs': 'numFailedRuns',
            'num_sla_violations': 'numSlaViolations',
            'num_successful_runs': 'numSuccessfulRuns',
            'slowest_run_time_usecs': 'slowestRunTimeUsecs',
            'total_bytes_read_from_source': 'totalBytesReadFromSource',
            'total_logical_backup_size_bytes': 'totalLogicalBackupSizeBytes',
            'total_physical_backup_size_bytes': 'totalPhysicalBackupSizeBytes'
        }

        self._average_run_time_usecs = average_run_time_usecs
        self._fastest_run_time_usecs = fastest_run_time_usecs
        self._num_canceled_runs = num_canceled_runs
        self._num_failed_runs = num_failed_runs
        self._num_sla_violations = num_sla_violations
        self._num_successful_runs = num_successful_runs
        self._slowest_run_time_usecs = slowest_run_time_usecs
        self._total_bytes_read_from_source = total_bytes_read_from_source
        self._total_logical_backup_size_bytes = total_logical_backup_size_bytes
        self._total_physical_backup_size_bytes = total_physical_backup_size_bytes

    @property
    def average_run_time_usecs(self):
        """
        Gets the average_run_time_usecs of this ProtectionJobSummaryStats.
        Specifies the average run time of all successful Protection Runs. It is specified as a Unix epoch Timestamp (in microseconds).

        :return: The average_run_time_usecs of this ProtectionJobSummaryStats.
        :rtype: int
        """
        return self._average_run_time_usecs

    @average_run_time_usecs.setter
    def average_run_time_usecs(self, average_run_time_usecs):
        """
        Sets the average_run_time_usecs of this ProtectionJobSummaryStats.
        Specifies the average run time of all successful Protection Runs. It is specified as a Unix epoch Timestamp (in microseconds).

        :param average_run_time_usecs: The average_run_time_usecs of this ProtectionJobSummaryStats.
        :type: int
        """

        self._average_run_time_usecs = average_run_time_usecs

    @property
    def fastest_run_time_usecs(self):
        """
        Gets the fastest_run_time_usecs of this ProtectionJobSummaryStats.
        Specifies the time taken for a fastest successful Protection Run so far. It is specified as a Unix epoch Timestamp (in microseconds).

        :return: The fastest_run_time_usecs of this ProtectionJobSummaryStats.
        :rtype: int
        """
        return self._fastest_run_time_usecs

    @fastest_run_time_usecs.setter
    def fastest_run_time_usecs(self, fastest_run_time_usecs):
        """
        Sets the fastest_run_time_usecs of this ProtectionJobSummaryStats.
        Specifies the time taken for a fastest successful Protection Run so far. It is specified as a Unix epoch Timestamp (in microseconds).

        :param fastest_run_time_usecs: The fastest_run_time_usecs of this ProtectionJobSummaryStats.
        :type: int
        """

        self._fastest_run_time_usecs = fastest_run_time_usecs

    @property
    def num_canceled_runs(self):
        """
        Gets the num_canceled_runs of this ProtectionJobSummaryStats.
        Specifies the number of runs that were canceled.

        :return: The num_canceled_runs of this ProtectionJobSummaryStats.
        :rtype: int
        """
        return self._num_canceled_runs

    @num_canceled_runs.setter
    def num_canceled_runs(self, num_canceled_runs):
        """
        Sets the num_canceled_runs of this ProtectionJobSummaryStats.
        Specifies the number of runs that were canceled.

        :param num_canceled_runs: The num_canceled_runs of this ProtectionJobSummaryStats.
        :type: int
        """

        self._num_canceled_runs = num_canceled_runs

    @property
    def num_failed_runs(self):
        """
        Gets the num_failed_runs of this ProtectionJobSummaryStats.
        Specifies the number of runs that failed to finish.

        :return: The num_failed_runs of this ProtectionJobSummaryStats.
        :rtype: int
        """
        return self._num_failed_runs

    @num_failed_runs.setter
    def num_failed_runs(self, num_failed_runs):
        """
        Sets the num_failed_runs of this ProtectionJobSummaryStats.
        Specifies the number of runs that failed to finish.

        :param num_failed_runs: The num_failed_runs of this ProtectionJobSummaryStats.
        :type: int
        """

        self._num_failed_runs = num_failed_runs

    @property
    def num_sla_violations(self):
        """
        Gets the num_sla_violations of this ProtectionJobSummaryStats.
        Specifies the number of runs having SLA violations.

        :return: The num_sla_violations of this ProtectionJobSummaryStats.
        :rtype: int
        """
        return self._num_sla_violations

    @num_sla_violations.setter
    def num_sla_violations(self, num_sla_violations):
        """
        Sets the num_sla_violations of this ProtectionJobSummaryStats.
        Specifies the number of runs having SLA violations.

        :param num_sla_violations: The num_sla_violations of this ProtectionJobSummaryStats.
        :type: int
        """

        self._num_sla_violations = num_sla_violations

    @property
    def num_successful_runs(self):
        """
        Gets the num_successful_runs of this ProtectionJobSummaryStats.
        Specifies the number of runs that finished successfully.

        :return: The num_successful_runs of this ProtectionJobSummaryStats.
        :rtype: int
        """
        return self._num_successful_runs

    @num_successful_runs.setter
    def num_successful_runs(self, num_successful_runs):
        """
        Sets the num_successful_runs of this ProtectionJobSummaryStats.
        Specifies the number of runs that finished successfully.

        :param num_successful_runs: The num_successful_runs of this ProtectionJobSummaryStats.
        :type: int
        """

        self._num_successful_runs = num_successful_runs

    @property
    def slowest_run_time_usecs(self):
        """
        Gets the slowest_run_time_usecs of this ProtectionJobSummaryStats.
        Specifies the time taken for a slowest successful Protection Run so far. It is specified as a Unix epoch Timestamp (in microseconds).

        :return: The slowest_run_time_usecs of this ProtectionJobSummaryStats.
        :rtype: int
        """
        return self._slowest_run_time_usecs

    @slowest_run_time_usecs.setter
    def slowest_run_time_usecs(self, slowest_run_time_usecs):
        """
        Sets the slowest_run_time_usecs of this ProtectionJobSummaryStats.
        Specifies the time taken for a slowest successful Protection Run so far. It is specified as a Unix epoch Timestamp (in microseconds).

        :param slowest_run_time_usecs: The slowest_run_time_usecs of this ProtectionJobSummaryStats.
        :type: int
        """

        self._slowest_run_time_usecs = slowest_run_time_usecs

    @property
    def total_bytes_read_from_source(self):
        """
        Gets the total_bytes_read_from_source of this ProtectionJobSummaryStats.
        Specifies the total amount of data read from the source (so far).

        :return: The total_bytes_read_from_source of this ProtectionJobSummaryStats.
        :rtype: int
        """
        return self._total_bytes_read_from_source

    @total_bytes_read_from_source.setter
    def total_bytes_read_from_source(self, total_bytes_read_from_source):
        """
        Sets the total_bytes_read_from_source of this ProtectionJobSummaryStats.
        Specifies the total amount of data read from the source (so far).

        :param total_bytes_read_from_source: The total_bytes_read_from_source of this ProtectionJobSummaryStats.
        :type: int
        """

        self._total_bytes_read_from_source = total_bytes_read_from_source

    @property
    def total_logical_backup_size_bytes(self):
        """
        Gets the total_logical_backup_size_bytes of this ProtectionJobSummaryStats.
        Specifies the size of the source object (such as a VM) protected by this task on the primary storage after the snapshot is taken. The logical size of the data on the source if the data is fully hydrated or expanded and not reduced by change-block tracking, compression and deduplication.

        :return: The total_logical_backup_size_bytes of this ProtectionJobSummaryStats.
        :rtype: int
        """
        return self._total_logical_backup_size_bytes

    @total_logical_backup_size_bytes.setter
    def total_logical_backup_size_bytes(self, total_logical_backup_size_bytes):
        """
        Sets the total_logical_backup_size_bytes of this ProtectionJobSummaryStats.
        Specifies the size of the source object (such as a VM) protected by this task on the primary storage after the snapshot is taken. The logical size of the data on the source if the data is fully hydrated or expanded and not reduced by change-block tracking, compression and deduplication.

        :param total_logical_backup_size_bytes: The total_logical_backup_size_bytes of this ProtectionJobSummaryStats.
        :type: int
        """

        self._total_logical_backup_size_bytes = total_logical_backup_size_bytes

    @property
    def total_physical_backup_size_bytes(self):
        """
        Gets the total_physical_backup_size_bytes of this ProtectionJobSummaryStats.
        Specifies the total amount of physical space used on the Cohesity Cluster to store the protected object after being reduced by change-block tracking, compression and deduplication. For example, if the logical backup size is 1GB, but only 1MB was used on the Cohesity Cluster to store it, this field be equal to 1MB.

        :return: The total_physical_backup_size_bytes of this ProtectionJobSummaryStats.
        :rtype: int
        """
        return self._total_physical_backup_size_bytes

    @total_physical_backup_size_bytes.setter
    def total_physical_backup_size_bytes(self, total_physical_backup_size_bytes):
        """
        Sets the total_physical_backup_size_bytes of this ProtectionJobSummaryStats.
        Specifies the total amount of physical space used on the Cohesity Cluster to store the protected object after being reduced by change-block tracking, compression and deduplication. For example, if the logical backup size is 1GB, but only 1MB was used on the Cohesity Cluster to store it, this field be equal to 1MB.

        :param total_physical_backup_size_bytes: The total_physical_backup_size_bytes of this ProtectionJobSummaryStats.
        :type: int
        """

        self._total_physical_backup_size_bytes = total_physical_backup_size_bytes

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
