# coding: utf-8

"""
    Cohesity REST API

    This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class RestoreObject(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, archival_target=None, job_id=None, job_run_id=None, job_uid=None, protection_source_id=None, started_time_usecs=None):
        """
        RestoreObject - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'archival_target': 'RestoreFilesTaskRequestSourceObjectInfoArchivalTarget',
            'job_id': 'int',
            'job_run_id': 'int',
            'job_uid': 'RestoreFilesTaskRequestSourceObjectInfoJobUid',
            'protection_source_id': 'int',
            'started_time_usecs': 'int'
        }

        self.attribute_map = {
            'archival_target': 'archivalTarget',
            'job_id': 'jobId',
            'job_run_id': 'jobRunId',
            'job_uid': 'jobUid',
            'protection_source_id': 'protectionSourceId',
            'started_time_usecs': 'startedTimeUsecs'
        }

        self._archival_target = archival_target
        self._job_id = job_id
        self._job_run_id = job_run_id
        self._job_uid = job_uid
        self._protection_source_id = protection_source_id
        self._started_time_usecs = started_time_usecs

    @property
    def archival_target(self):
        """
        Gets the archival_target of this RestoreObject.


        :return: The archival_target of this RestoreObject.
        :rtype: RestoreFilesTaskRequestSourceObjectInfoArchivalTarget
        """
        return self._archival_target

    @archival_target.setter
    def archival_target(self, archival_target):
        """
        Sets the archival_target of this RestoreObject.


        :param archival_target: The archival_target of this RestoreObject.
        :type: RestoreFilesTaskRequestSourceObjectInfoArchivalTarget
        """

        self._archival_target = archival_target

    @property
    def job_id(self):
        """
        Gets the job_id of this RestoreObject.
        Protection Job Id.  Specifies id of the Protection Job that backed up the objects to be restored.

        :return: The job_id of this RestoreObject.
        :rtype: int
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """
        Sets the job_id of this RestoreObject.
        Protection Job Id.  Specifies id of the Protection Job that backed up the objects to be restored.

        :param job_id: The job_id of this RestoreObject.
        :type: int
        """

        self._job_id = job_id

    @property
    def job_run_id(self):
        """
        Gets the job_run_id of this RestoreObject.
        Specifies the id of the Job Run that captured the snapshot.

        :return: The job_run_id of this RestoreObject.
        :rtype: int
        """
        return self._job_run_id

    @job_run_id.setter
    def job_run_id(self, job_run_id):
        """
        Sets the job_run_id of this RestoreObject.
        Specifies the id of the Job Run that captured the snapshot.

        :param job_run_id: The job_run_id of this RestoreObject.
        :type: int
        """

        self._job_run_id = job_run_id

    @property
    def job_uid(self):
        """
        Gets the job_uid of this RestoreObject.


        :return: The job_uid of this RestoreObject.
        :rtype: RestoreFilesTaskRequestSourceObjectInfoJobUid
        """
        return self._job_uid

    @job_uid.setter
    def job_uid(self, job_uid):
        """
        Sets the job_uid of this RestoreObject.


        :param job_uid: The job_uid of this RestoreObject.
        :type: RestoreFilesTaskRequestSourceObjectInfoJobUid
        """

        self._job_uid = job_uid

    @property
    def protection_source_id(self):
        """
        Gets the protection_source_id of this RestoreObject.
        Specifies the id of the leaf object to recover, clone or recover files/folders from.

        :return: The protection_source_id of this RestoreObject.
        :rtype: int
        """
        return self._protection_source_id

    @protection_source_id.setter
    def protection_source_id(self, protection_source_id):
        """
        Sets the protection_source_id of this RestoreObject.
        Specifies the id of the leaf object to recover, clone or recover files/folders from.

        :param protection_source_id: The protection_source_id of this RestoreObject.
        :type: int
        """

        self._protection_source_id = protection_source_id

    @property
    def started_time_usecs(self):
        """
        Gets the started_time_usecs of this RestoreObject.
        Specifies the time when the Job Run starts capturing a snapshot. Specified as a Unix epoch Timestamp (in microseconds).

        :return: The started_time_usecs of this RestoreObject.
        :rtype: int
        """
        return self._started_time_usecs

    @started_time_usecs.setter
    def started_time_usecs(self, started_time_usecs):
        """
        Sets the started_time_usecs of this RestoreObject.
        Specifies the time when the Job Run starts capturing a snapshot. Specified as a Unix epoch Timestamp (in microseconds).

        :param started_time_usecs: The started_time_usecs of this RestoreObject.
        :type: int
        """

        self._started_time_usecs = started_time_usecs

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
