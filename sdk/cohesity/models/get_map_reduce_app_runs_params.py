# coding: utf-8

"""
    Cohesity REST API

    This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class GetMapReduceAppRunsParams(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, app_id=None, app_instance_id=None, include_details=None, last_num_instances=None, max_run_end_time_in_secs=None, max_run_start_time_in_secs=None, min_run_end_time_in_secs=None, min_run_start_time_in_secs=None, page_size=None, run_status=None, start_offset=None):
        """
        GetMapReduceAppRunsParams - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'app_id': 'int',
            'app_instance_id': 'int',
            'include_details': 'bool',
            'last_num_instances': 'int',
            'max_run_end_time_in_secs': 'int',
            'max_run_start_time_in_secs': 'int',
            'min_run_end_time_in_secs': 'int',
            'min_run_start_time_in_secs': 'int',
            'page_size': 'int',
            'run_status': 'str',
            'start_offset': 'int'
        }

        self.attribute_map = {
            'app_id': 'appId',
            'app_instance_id': 'appInstanceId',
            'include_details': 'includeDetails',
            'last_num_instances': 'lastNumInstances',
            'max_run_end_time_in_secs': 'maxRunEndTimeInSecs',
            'max_run_start_time_in_secs': 'maxRunStartTimeInSecs',
            'min_run_end_time_in_secs': 'minRunEndTimeInSecs',
            'min_run_start_time_in_secs': 'minRunStartTimeInSecs',
            'page_size': 'pageSize',
            'run_status': 'runStatus',
            'start_offset': 'startOffset'
        }

        self._app_id = app_id
        self._app_instance_id = app_instance_id
        self._include_details = include_details
        self._last_num_instances = last_num_instances
        self._max_run_end_time_in_secs = max_run_end_time_in_secs
        self._max_run_start_time_in_secs = max_run_start_time_in_secs
        self._min_run_end_time_in_secs = min_run_end_time_in_secs
        self._min_run_start_time_in_secs = min_run_start_time_in_secs
        self._page_size = page_size
        self._run_status = run_status
        self._start_offset = start_offset

    @property
    def app_id(self):
        """
        Gets the app_id of this GetMapReduceAppRunsParams.
        ApplicationId is the Id of the map reduce application.

        :return: The app_id of this GetMapReduceAppRunsParams.
        :rtype: int
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """
        Sets the app_id of this GetMapReduceAppRunsParams.
        ApplicationId is the Id of the map reduce application.

        :param app_id: The app_id of this GetMapReduceAppRunsParams.
        :type: int
        """

        self._app_id = app_id

    @property
    def app_instance_id(self):
        """
        Gets the app_instance_id of this GetMapReduceAppRunsParams.
        ApplicationInstanceId is the Id of the map reduce application instance.

        :return: The app_instance_id of this GetMapReduceAppRunsParams.
        :rtype: int
        """
        return self._app_instance_id

    @app_instance_id.setter
    def app_instance_id(self, app_instance_id):
        """
        Sets the app_instance_id of this GetMapReduceAppRunsParams.
        ApplicationInstanceId is the Id of the map reduce application instance.

        :param app_instance_id: The app_instance_id of this GetMapReduceAppRunsParams.
        :type: int
        """

        self._app_instance_id = app_instance_id

    @property
    def include_details(self):
        """
        Gets the include_details of this GetMapReduceAppRunsParams.
        If this flag is true, then send details of instance, else send only RunInfo.

        :return: The include_details of this GetMapReduceAppRunsParams.
        :rtype: bool
        """
        return self._include_details

    @include_details.setter
    def include_details(self, include_details):
        """
        Sets the include_details of this GetMapReduceAppRunsParams.
        If this flag is true, then send details of instance, else send only RunInfo.

        :param include_details: The include_details of this GetMapReduceAppRunsParams.
        :type: bool
        """

        self._include_details = include_details

    @property
    def last_num_instances(self):
        """
        Gets the last_num_instances of this GetMapReduceAppRunsParams.
        Give last N instance of an app based on end time.

        :return: The last_num_instances of this GetMapReduceAppRunsParams.
        :rtype: int
        """
        return self._last_num_instances

    @last_num_instances.setter
    def last_num_instances(self, last_num_instances):
        """
        Sets the last_num_instances of this GetMapReduceAppRunsParams.
        Give last N instance of an app based on end time.

        :param last_num_instances: The last_num_instances of this GetMapReduceAppRunsParams.
        :type: int
        """

        self._last_num_instances = last_num_instances

    @property
    def max_run_end_time_in_secs(self):
        """
        Gets the max_run_end_time_in_secs of this GetMapReduceAppRunsParams.
        MaxRunEndTimestampInSecs specifies the maximum job run end timestamp in seconds. App run instances with end time less than equal to MaxRunEndTimestampInSecs will be selected. Default is LONG_MAX (inf).

        :return: The max_run_end_time_in_secs of this GetMapReduceAppRunsParams.
        :rtype: int
        """
        return self._max_run_end_time_in_secs

    @max_run_end_time_in_secs.setter
    def max_run_end_time_in_secs(self, max_run_end_time_in_secs):
        """
        Sets the max_run_end_time_in_secs of this GetMapReduceAppRunsParams.
        MaxRunEndTimestampInSecs specifies the maximum job run end timestamp in seconds. App run instances with end time less than equal to MaxRunEndTimestampInSecs will be selected. Default is LONG_MAX (inf).

        :param max_run_end_time_in_secs: The max_run_end_time_in_secs of this GetMapReduceAppRunsParams.
        :type: int
        """

        self._max_run_end_time_in_secs = max_run_end_time_in_secs

    @property
    def max_run_start_time_in_secs(self):
        """
        Gets the max_run_start_time_in_secs of this GetMapReduceAppRunsParams.
        MaxRunStartTimestampInSecs specifies the maximum job run start timestamp in seconds. App run instances with start time less than equal to MaxRunStartTimestampInSecs will be selected. Default is LONG_MAX (inf).

        :return: The max_run_start_time_in_secs of this GetMapReduceAppRunsParams.
        :rtype: int
        """
        return self._max_run_start_time_in_secs

    @max_run_start_time_in_secs.setter
    def max_run_start_time_in_secs(self, max_run_start_time_in_secs):
        """
        Sets the max_run_start_time_in_secs of this GetMapReduceAppRunsParams.
        MaxRunStartTimestampInSecs specifies the maximum job run start timestamp in seconds. App run instances with start time less than equal to MaxRunStartTimestampInSecs will be selected. Default is LONG_MAX (inf).

        :param max_run_start_time_in_secs: The max_run_start_time_in_secs of this GetMapReduceAppRunsParams.
        :type: int
        """

        self._max_run_start_time_in_secs = max_run_start_time_in_secs

    @property
    def min_run_end_time_in_secs(self):
        """
        Gets the min_run_end_time_in_secs of this GetMapReduceAppRunsParams.
        MinRunEndTimestampInSecs specifies the minimum job run end timestamp in seconds. App run instances with end time greater than equal to MinRunEndTimestampInSecs will be selected. Default is 0, i.e. beginning of time.

        :return: The min_run_end_time_in_secs of this GetMapReduceAppRunsParams.
        :rtype: int
        """
        return self._min_run_end_time_in_secs

    @min_run_end_time_in_secs.setter
    def min_run_end_time_in_secs(self, min_run_end_time_in_secs):
        """
        Sets the min_run_end_time_in_secs of this GetMapReduceAppRunsParams.
        MinRunEndTimestampInSecs specifies the minimum job run end timestamp in seconds. App run instances with end time greater than equal to MinRunEndTimestampInSecs will be selected. Default is 0, i.e. beginning of time.

        :param min_run_end_time_in_secs: The min_run_end_time_in_secs of this GetMapReduceAppRunsParams.
        :type: int
        """

        self._min_run_end_time_in_secs = min_run_end_time_in_secs

    @property
    def min_run_start_time_in_secs(self):
        """
        Gets the min_run_start_time_in_secs of this GetMapReduceAppRunsParams.
        MinRunStartTimestampInSecs specifies the minimum job run start timestamp in seconds. App run instances with start time greater than equal to MinRunStartTimestampInSecs will be selected. Default is 0, i.e. beginning of time.

        :return: The min_run_start_time_in_secs of this GetMapReduceAppRunsParams.
        :rtype: int
        """
        return self._min_run_start_time_in_secs

    @min_run_start_time_in_secs.setter
    def min_run_start_time_in_secs(self, min_run_start_time_in_secs):
        """
        Sets the min_run_start_time_in_secs of this GetMapReduceAppRunsParams.
        MinRunStartTimestampInSecs specifies the minimum job run start timestamp in seconds. App run instances with start time greater than equal to MinRunStartTimestampInSecs will be selected. Default is 0, i.e. beginning of time.

        :param min_run_start_time_in_secs: The min_run_start_time_in_secs of this GetMapReduceAppRunsParams.
        :type: int
        """

        self._min_run_start_time_in_secs = min_run_start_time_in_secs

    @property
    def page_size(self):
        """
        Gets the page_size of this GetMapReduceAppRunsParams.
        Number of results to be displayed on a page.

        :return: The page_size of this GetMapReduceAppRunsParams.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """
        Sets the page_size of this GetMapReduceAppRunsParams.
        Number of results to be displayed on a page.

        :param page_size: The page_size of this GetMapReduceAppRunsParams.
        :type: int
        """

        self._page_size = page_size

    @property
    def run_status(self):
        """
        Gets the run_status of this GetMapReduceAppRunsParams.
        Filter instances based on the map reduce application run status.

        :return: The run_status of this GetMapReduceAppRunsParams.
        :rtype: str
        """
        return self._run_status

    @run_status.setter
    def run_status(self, run_status):
        """
        Sets the run_status of this GetMapReduceAppRunsParams.
        Filter instances based on the map reduce application run status.

        :param run_status: The run_status of this GetMapReduceAppRunsParams.
        :type: str
        """

        self._run_status = run_status

    @property
    def start_offset(self):
        """
        Gets the start_offset of this GetMapReduceAppRunsParams.
        Start offset for pagination from where result needs to be fetched.

        :return: The start_offset of this GetMapReduceAppRunsParams.
        :rtype: int
        """
        return self._start_offset

    @start_offset.setter
    def start_offset(self, start_offset):
        """
        Sets the start_offset of this GetMapReduceAppRunsParams.
        Start offset for pagination from where result needs to be fetched.

        :param start_offset: The start_offset of this GetMapReduceAppRunsParams.
        :type: int
        """

        self._start_offset = start_offset

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
