# coding: utf-8

"""
    Cohesity REST API

    This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class ViewProtection(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, inactive=None, magneto_entity_id=None, protection_jobs=None):
        """
        ViewProtection - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'inactive': 'bool',
            'magneto_entity_id': 'int',
            'protection_jobs': 'list[ProtectionJobInfo]'
        }

        self.attribute_map = {
            'inactive': 'inactive',
            'magneto_entity_id': 'magnetoEntityId',
            'protection_jobs': 'protectionJobs'
        }

        self._inactive = inactive
        self._magneto_entity_id = magneto_entity_id
        self._protection_jobs = protection_jobs

    @property
    def inactive(self):
        """
        Gets the inactive of this ViewProtection.
        Specifies if this View is an inactive View that was created on this Remote Cluster to store the Snapshots created by replication. This inactive View cannot be NFS or SMB mounted.

        :return: The inactive of this ViewProtection.
        :rtype: bool
        """
        return self._inactive

    @inactive.setter
    def inactive(self, inactive):
        """
        Sets the inactive of this ViewProtection.
        Specifies if this View is an inactive View that was created on this Remote Cluster to store the Snapshots created by replication. This inactive View cannot be NFS or SMB mounted.

        :param inactive: The inactive of this ViewProtection.
        :type: bool
        """

        self._inactive = inactive

    @property
    def magneto_entity_id(self):
        """
        Gets the magneto_entity_id of this ViewProtection.
        Specifies the id of the Protection Source that is using this View.

        :return: The magneto_entity_id of this ViewProtection.
        :rtype: int
        """
        return self._magneto_entity_id

    @magneto_entity_id.setter
    def magneto_entity_id(self, magneto_entity_id):
        """
        Sets the magneto_entity_id of this ViewProtection.
        Specifies the id of the Protection Source that is using this View.

        :param magneto_entity_id: The magneto_entity_id of this ViewProtection.
        :type: int
        """

        self._magneto_entity_id = magneto_entity_id

    @property
    def protection_jobs(self):
        """
        Gets the protection_jobs of this ViewProtection.
        Specifies the Protection Jobs that are protecting the View.

        :return: The protection_jobs of this ViewProtection.
        :rtype: list[ProtectionJobInfo]
        """
        return self._protection_jobs

    @protection_jobs.setter
    def protection_jobs(self, protection_jobs):
        """
        Sets the protection_jobs of this ViewProtection.
        Specifies the Protection Jobs that are protecting the View.

        :param protection_jobs: The protection_jobs of this ViewProtection.
        :type: list[ProtectionJobInfo]
        """

        self._protection_jobs = protection_jobs

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
