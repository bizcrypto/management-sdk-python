# coding: utf-8

"""
    Cohesity REST API

    This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class MapReduceInfoRequiredProperty(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, default_value=None, description=None, is_required=None, name=None):
        """
        MapReduceInfoRequiredProperty - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'default_value': 'str',
            'description': 'str',
            'is_required': 'bool',
            'name': 'str'
        }

        self.attribute_map = {
            'default_value': 'defaultValue',
            'description': 'description',
            'is_required': 'isRequired',
            'name': 'name'
        }

        self._default_value = default_value
        self._description = description
        self._is_required = is_required
        self._name = name

    @property
    def default_value(self):
        """
        Gets the default_value of this MapReduceInfoRequiredProperty.
        Default Value of the property.

        :return: The default_value of this MapReduceInfoRequiredProperty.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """
        Sets the default_value of this MapReduceInfoRequiredProperty.
        Default Value of the property.

        :param default_value: The default_value of this MapReduceInfoRequiredProperty.
        :type: str
        """

        self._default_value = default_value

    @property
    def description(self):
        """
        Gets the description of this MapReduceInfoRequiredProperty.
        Description of this property

        :return: The description of this MapReduceInfoRequiredProperty.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this MapReduceInfoRequiredProperty.
        Description of this property

        :param description: The description of this MapReduceInfoRequiredProperty.
        :type: str
        """

        self._description = description

    @property
    def is_required(self):
        """
        Gets the is_required of this MapReduceInfoRequiredProperty.
        Whether the property is required or optional.

        :return: The is_required of this MapReduceInfoRequiredProperty.
        :rtype: bool
        """
        return self._is_required

    @is_required.setter
    def is_required(self, is_required):
        """
        Sets the is_required of this MapReduceInfoRequiredProperty.
        Whether the property is required or optional.

        :param is_required: The is_required of this MapReduceInfoRequiredProperty.
        :type: bool
        """

        self._is_required = is_required

    @property
    def name(self):
        """
        Gets the name of this MapReduceInfoRequiredProperty.
        Name of the property.

        :return: The name of this MapReduceInfoRequiredProperty.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this MapReduceInfoRequiredProperty.
        Name of the property.

        :param name: The name of this MapReduceInfoRequiredProperty.
        :type: str
        """

        self._name = name

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
