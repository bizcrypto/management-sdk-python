# coding: utf-8

"""
    Cohesity REST API

    This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class GoogleCloudCredentials(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, client_email_address=None, client_private_key=None, project_id=None):
        """
        GoogleCloudCredentials - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'client_email_address': 'str',
            'client_private_key': 'str',
            'project_id': 'str'
        }

        self.attribute_map = {
            'client_email_address': 'clientEmailAddress',
            'client_private_key': 'clientPrivateKey',
            'project_id': 'projectId'
        }

        self._client_email_address = client_email_address
        self._client_private_key = client_private_key
        self._project_id = project_id

    @property
    def client_email_address(self):
        """
        Gets the client_email_address of this GoogleCloudCredentials.
        Specifies the client email address used to access Google Cloud Storage.

        :return: The client_email_address of this GoogleCloudCredentials.
        :rtype: str
        """
        return self._client_email_address

    @client_email_address.setter
    def client_email_address(self, client_email_address):
        """
        Sets the client_email_address of this GoogleCloudCredentials.
        Specifies the client email address used to access Google Cloud Storage.

        :param client_email_address: The client_email_address of this GoogleCloudCredentials.
        :type: str
        """

        self._client_email_address = client_email_address

    @property
    def client_private_key(self):
        """
        Gets the client_private_key of this GoogleCloudCredentials.
        Specifies the private key used to access Google Cloud Storage that is generated when the service account is created.

        :return: The client_private_key of this GoogleCloudCredentials.
        :rtype: str
        """
        return self._client_private_key

    @client_private_key.setter
    def client_private_key(self, client_private_key):
        """
        Sets the client_private_key of this GoogleCloudCredentials.
        Specifies the private key used to access Google Cloud Storage that is generated when the service account is created.

        :param client_private_key: The client_private_key of this GoogleCloudCredentials.
        :type: str
        """

        self._client_private_key = client_private_key

    @property
    def project_id(self):
        """
        Gets the project_id of this GoogleCloudCredentials.
        Specifies the project id of an existing Google Cloud project to store objects.

        :return: The project_id of this GoogleCloudCredentials.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """
        Sets the project_id of this GoogleCloudCredentials.
        Specifies the project id of an existing Google Cloud project to store objects.

        :param project_id: The project_id of this GoogleCloudCredentials.
        :type: str
        """

        self._project_id = project_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
