# coding: utf-8

"""
    Cohesity REST API

    This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class EntityProto(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, attribute_vec=None, entity_id=None, latest_metric_vec=None):
        """
        EntityProto - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'attribute_vec': 'list[KeyValuePair]',
            'entity_id': 'EntityIdentifier',
            'latest_metric_vec': 'list[MetricValue]'
        }

        self.attribute_map = {
            'attribute_vec': 'attributeVec',
            'entity_id': 'entityId',
            'latest_metric_vec': 'latestMetricVec'
        }

        self._attribute_vec = attribute_vec
        self._entity_id = entity_id
        self._latest_metric_vec = latest_metric_vec

    @property
    def attribute_vec(self):
        """
        Gets the attribute_vec of this EntityProto.
        List of attributes of an entity.

        :return: The attribute_vec of this EntityProto.
        :rtype: list[KeyValuePair]
        """
        return self._attribute_vec

    @attribute_vec.setter
    def attribute_vec(self, attribute_vec):
        """
        Sets the attribute_vec of this EntityProto.
        List of attributes of an entity.

        :param attribute_vec: The attribute_vec of this EntityProto.
        :type: list[KeyValuePair]
        """

        self._attribute_vec = attribute_vec

    @property
    def entity_id(self):
        """
        Gets the entity_id of this EntityProto.
        Specifies a globally unique identifier of an entity.

        :return: The entity_id of this EntityProto.
        :rtype: EntityIdentifier
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """
        Sets the entity_id of this EntityProto.
        Specifies a globally unique identifier of an entity.

        :param entity_id: The entity_id of this EntityProto.
        :type: EntityIdentifier
        """

        self._entity_id = entity_id

    @property
    def latest_metric_vec(self):
        """
        Gets the latest_metric_vec of this EntityProto.
        List of the latest statistics for all metrics defined in the schema that this entity belongs to. If statistics for a metric is not available, then that data point is not returned.

        :return: The latest_metric_vec of this EntityProto.
        :rtype: list[MetricValue]
        """
        return self._latest_metric_vec

    @latest_metric_vec.setter
    def latest_metric_vec(self, latest_metric_vec):
        """
        Sets the latest_metric_vec of this EntityProto.
        List of the latest statistics for all metrics defined in the schema that this entity belongs to. If statistics for a metric is not available, then that data point is not returned.

        :param latest_metric_vec: The latest_metric_vec of this EntityProto.
        :type: list[MetricValue]
        """

        self._latest_metric_vec = latest_metric_vec

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
