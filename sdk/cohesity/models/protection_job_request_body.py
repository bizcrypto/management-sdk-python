# coding: utf-8

"""
    Cohesity REST API

    This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class ProtectionJobRequestBody(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, abort_in_blackout_period=None, alerting_policy=None, cloud_parameters=None, description=None, end_time_usecs=None, environment=None, environment_parameters=None, exclude_source_ids=None, exclude_vm_tag_ids=None, full_protection_sla_time_mins=None, full_protection_start_time=None, incremental_protection_sla_time_mins=None, incremental_protection_start_time=None, indexing_policy=None, leverage_storage_snapshots=None, name=None, parent_source_id=None, policy_id=None, priority=None, qos_type=None, quiesce=None, remote_script=None, source_ids=None, source_special_parameters=None, start_time=None, timezone=None, view_box_id=None, view_name=None, vm_tag_ids=None):
        """
        ProtectionJobRequestBody - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'abort_in_blackout_period': 'bool',
            'alerting_policy': 'list[str]',
            'cloud_parameters': 'CloudParameters',
            'description': 'str',
            'end_time_usecs': 'int',
            'environment': 'str',
            'environment_parameters': 'EnvironmentTypeJobParameters',
            'exclude_source_ids': 'list[int]',
            'exclude_vm_tag_ids': 'list[list[int]]',
            'full_protection_sla_time_mins': 'int',
            'full_protection_start_time': 'ProtectionJobFullProtectionStartTime',
            'incremental_protection_sla_time_mins': 'int',
            'incremental_protection_start_time': 'ProtectionJobIncrementalProtectionStartTime',
            'indexing_policy': 'IndexingPolicy',
            'leverage_storage_snapshots': 'bool',
            'name': 'str',
            'parent_source_id': 'int',
            'policy_id': 'str',
            'priority': 'str',
            'qos_type': 'str',
            'quiesce': 'bool',
            'remote_script': 'ProtectionJobRemoteScript',
            'source_ids': 'list[int]',
            'source_special_parameters': 'list[SourceSpecialParameter]',
            'start_time': 'ProtectionJobStartTime',
            'timezone': 'str',
            'view_box_id': 'int',
            'view_name': 'str',
            'vm_tag_ids': 'list[list[int]]'
        }

        self.attribute_map = {
            'abort_in_blackout_period': 'abortInBlackoutPeriod',
            'alerting_policy': 'alertingPolicy',
            'cloud_parameters': 'cloudParameters',
            'description': 'description',
            'end_time_usecs': 'endTimeUsecs',
            'environment': 'environment',
            'environment_parameters': 'environmentParameters',
            'exclude_source_ids': 'excludeSourceIds',
            'exclude_vm_tag_ids': 'excludeVmTagIds',
            'full_protection_sla_time_mins': 'fullProtectionSlaTimeMins',
            'full_protection_start_time': 'fullProtectionStartTime',
            'incremental_protection_sla_time_mins': 'incrementalProtectionSlaTimeMins',
            'incremental_protection_start_time': 'incrementalProtectionStartTime',
            'indexing_policy': 'indexingPolicy',
            'leverage_storage_snapshots': 'leverageStorageSnapshots',
            'name': 'name',
            'parent_source_id': 'parentSourceId',
            'policy_id': 'policyId',
            'priority': 'priority',
            'qos_type': 'qosType',
            'quiesce': 'quiesce',
            'remote_script': 'remoteScript',
            'source_ids': 'sourceIds',
            'source_special_parameters': 'sourceSpecialParameters',
            'start_time': 'startTime',
            'timezone': 'timezone',
            'view_box_id': 'viewBoxId',
            'view_name': 'viewName',
            'vm_tag_ids': 'vmTagIds'
        }

        self._abort_in_blackout_period = abort_in_blackout_period
        self._alerting_policy = alerting_policy
        self._cloud_parameters = cloud_parameters
        self._description = description
        self._end_time_usecs = end_time_usecs
        self._environment = environment
        self._environment_parameters = environment_parameters
        self._exclude_source_ids = exclude_source_ids
        self._exclude_vm_tag_ids = exclude_vm_tag_ids
        self._full_protection_sla_time_mins = full_protection_sla_time_mins
        self._full_protection_start_time = full_protection_start_time
        self._incremental_protection_sla_time_mins = incremental_protection_sla_time_mins
        self._incremental_protection_start_time = incremental_protection_start_time
        self._indexing_policy = indexing_policy
        self._leverage_storage_snapshots = leverage_storage_snapshots
        self._name = name
        self._parent_source_id = parent_source_id
        self._policy_id = policy_id
        self._priority = priority
        self._qos_type = qos_type
        self._quiesce = quiesce
        self._remote_script = remote_script
        self._source_ids = source_ids
        self._source_special_parameters = source_special_parameters
        self._start_time = start_time
        self._timezone = timezone
        self._view_box_id = view_box_id
        self._view_name = view_name
        self._vm_tag_ids = vm_tag_ids

    @property
    def abort_in_blackout_period(self):
        """
        Gets the abort_in_blackout_period of this ProtectionJobRequestBody.
        If true, the Cohesity Cluster aborts any currently executing Job Runs of this Protection Job when a blackout period specified for this Job starts, even if the Job Run started before the blackout period began. If false, a Job Run continues to execute, if the Job Run started before the blackout period starts.

        :return: The abort_in_blackout_period of this ProtectionJobRequestBody.
        :rtype: bool
        """
        return self._abort_in_blackout_period

    @abort_in_blackout_period.setter
    def abort_in_blackout_period(self, abort_in_blackout_period):
        """
        Sets the abort_in_blackout_period of this ProtectionJobRequestBody.
        If true, the Cohesity Cluster aborts any currently executing Job Runs of this Protection Job when a blackout period specified for this Job starts, even if the Job Run started before the blackout period began. If false, a Job Run continues to execute, if the Job Run started before the blackout period starts.

        :param abort_in_blackout_period: The abort_in_blackout_period of this ProtectionJobRequestBody.
        :type: bool
        """

        self._abort_in_blackout_period = abort_in_blackout_period

    @property
    def alerting_policy(self):
        """
        Gets the alerting_policy of this ProtectionJobRequestBody.
        During Job Runs, the following Job Events are generated: 1) Job succeeds 2) Job fails 3) Job violates the SLA These Job Events can cause Alerts to be generated. 'kSuccess' means the Protection Job succeeded. 'kFailure' means the Protection Job failed. 'kSlaViolation' means the Protection Job took longer than the time period specified in the SLA.

        :return: The alerting_policy of this ProtectionJobRequestBody.
        :rtype: list[str]
        """
        return self._alerting_policy

    @alerting_policy.setter
    def alerting_policy(self, alerting_policy):
        """
        Sets the alerting_policy of this ProtectionJobRequestBody.
        During Job Runs, the following Job Events are generated: 1) Job succeeds 2) Job fails 3) Job violates the SLA These Job Events can cause Alerts to be generated. 'kSuccess' means the Protection Job succeeded. 'kFailure' means the Protection Job failed. 'kSlaViolation' means the Protection Job took longer than the time period specified in the SLA.

        :param alerting_policy: The alerting_policy of this ProtectionJobRequestBody.
        :type: list[str]
        """
        allowed_values = ["kSuccess", "kFailure", "kSlaViolation"]
        if alerting_policy not in allowed_values:
            raise ValueError(
                "Invalid value for `alerting_policy` ({0}), must be one of {1}"
                .format(alerting_policy, allowed_values)
            )

        self._alerting_policy = alerting_policy

    @property
    def cloud_parameters(self):
        """
        Gets the cloud_parameters of this ProtectionJobRequestBody.
        Specifies Cloud specific parameters applicable in various scenarios.

        :return: The cloud_parameters of this ProtectionJobRequestBody.
        :rtype: CloudParameters
        """
        return self._cloud_parameters

    @cloud_parameters.setter
    def cloud_parameters(self, cloud_parameters):
        """
        Sets the cloud_parameters of this ProtectionJobRequestBody.
        Specifies Cloud specific parameters applicable in various scenarios.

        :param cloud_parameters: The cloud_parameters of this ProtectionJobRequestBody.
        :type: CloudParameters
        """

        self._cloud_parameters = cloud_parameters

    @property
    def description(self):
        """
        Gets the description of this ProtectionJobRequestBody.
        Specifies a text description about the Protection Job.

        :return: The description of this ProtectionJobRequestBody.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this ProtectionJobRequestBody.
        Specifies a text description about the Protection Job.

        :param description: The description of this ProtectionJobRequestBody.
        :type: str
        """

        self._description = description

    @property
    def end_time_usecs(self):
        """
        Gets the end_time_usecs of this ProtectionJobRequestBody.
        Specifies the epoch time (in microseconds) after which the Protection Job becomes dormant.

        :return: The end_time_usecs of this ProtectionJobRequestBody.
        :rtype: int
        """
        return self._end_time_usecs

    @end_time_usecs.setter
    def end_time_usecs(self, end_time_usecs):
        """
        Sets the end_time_usecs of this ProtectionJobRequestBody.
        Specifies the epoch time (in microseconds) after which the Protection Job becomes dormant.

        :param end_time_usecs: The end_time_usecs of this ProtectionJobRequestBody.
        :type: int
        """

        self._end_time_usecs = end_time_usecs

    @property
    def environment(self):
        """
        Gets the environment of this ProtectionJobRequestBody.
        Specifies the environment type (such as kVMware or kSQL) of the Protection Source this Job is protecting. Supported environment types include 'kView', 'kSQL', 'kVMware', 'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV', 'kAcropolis', 'kAzure'. NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.

        :return: The environment of this ProtectionJobRequestBody.
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """
        Sets the environment of this ProtectionJobRequestBody.
        Specifies the environment type (such as kVMware or kSQL) of the Protection Source this Job is protecting. Supported environment types include 'kView', 'kSQL', 'kVMware', 'kPuppeteer', 'kPhysical', 'kPure', 'kNetapp, 'kGenericNas, 'kHyperV', 'kAcropolis', 'kAzure'. NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.

        :param environment: The environment of this ProtectionJobRequestBody.
        :type: str
        """
        allowed_values = ["kVMware", "kSQL", "kView", "kPuppeteer", "kPhysical", "kPure", "kNetapp", "kGenericNas", "kHyperV", "kAcropolis", "kAzure"]
        if environment not in allowed_values:
            raise ValueError(
                "Invalid value for `environment` ({0}), must be one of {1}"
                .format(environment, allowed_values)
            )

        self._environment = environment

    @property
    def environment_parameters(self):
        """
        Gets the environment_parameters of this ProtectionJobRequestBody.
        Specifies additional settings that are applicable to all Sources in the Protection Job that are of specified environment type. For example, you can specify to exclude a disk from backup for all 'kVMware' Protection Sources in the Protection Job. If a setting conflicts with sourceSpecialParameters, then sourceSpecialParameters will be used.

        :return: The environment_parameters of this ProtectionJobRequestBody.
        :rtype: EnvironmentTypeJobParameters
        """
        return self._environment_parameters

    @environment_parameters.setter
    def environment_parameters(self, environment_parameters):
        """
        Sets the environment_parameters of this ProtectionJobRequestBody.
        Specifies additional settings that are applicable to all Sources in the Protection Job that are of specified environment type. For example, you can specify to exclude a disk from backup for all 'kVMware' Protection Sources in the Protection Job. If a setting conflicts with sourceSpecialParameters, then sourceSpecialParameters will be used.

        :param environment_parameters: The environment_parameters of this ProtectionJobRequestBody.
        :type: EnvironmentTypeJobParameters
        """

        self._environment_parameters = environment_parameters

    @property
    def exclude_source_ids(self):
        """
        Gets the exclude_source_ids of this ProtectionJobRequestBody.
        List of Object ids from a Protection Source that should not be protected and are excluded from being backed up by the Protection Job. Leaf and non-leaf Objects may be in this list and an Object in this list must have an ancestor in the sourceId list.

        :return: The exclude_source_ids of this ProtectionJobRequestBody.
        :rtype: list[int]
        """
        return self._exclude_source_ids

    @exclude_source_ids.setter
    def exclude_source_ids(self, exclude_source_ids):
        """
        Sets the exclude_source_ids of this ProtectionJobRequestBody.
        List of Object ids from a Protection Source that should not be protected and are excluded from being backed up by the Protection Job. Leaf and non-leaf Objects may be in this list and an Object in this list must have an ancestor in the sourceId list.

        :param exclude_source_ids: The exclude_source_ids of this ProtectionJobRequestBody.
        :type: list[int]
        """

        self._exclude_source_ids = exclude_source_ids

    @property
    def exclude_vm_tag_ids(self):
        """
        Gets the exclude_vm_tag_ids of this ProtectionJobRequestBody.
        Optionally specify a list of VMs to exclude from protecting by listing Protection Source ids of VM Tags in this two dimensional array. Using this two dimensional array of Tag ids, the Cluster generates a list of VMs to exclude from protecting, which are derived from intersections of the inner arrays and union of the outer array, as shown by the following example. For example a Datacenter is selected to be protected but you want to exclude all the 'Former Employees' VMs in the East and West but keep all the VMs for 'Former Employees' in the South which are also stored in this Datacenter, by specifying the following tag id array: [ [1000, 2221], [1000, 3031] ], where 1000 is the 'Former Employee' VM Tag id, 2221 is the 'East' VM Tag id and 3031 is the 'West' VM Tag id. The first inner array [1000, 2221] produces a list of VMs that are both tagged with 'Former Employees' and 'East' (an intersection). The second inner array [1000, 3031] produces a list of VMs that are both tagged with 'Former Employees' and 'West' (an intersection). The outer array combines the list of VMs from the two inner arrays. The list of resulting VMs are excluded from being protected this Job.

        :return: The exclude_vm_tag_ids of this ProtectionJobRequestBody.
        :rtype: list[list[int]]
        """
        return self._exclude_vm_tag_ids

    @exclude_vm_tag_ids.setter
    def exclude_vm_tag_ids(self, exclude_vm_tag_ids):
        """
        Sets the exclude_vm_tag_ids of this ProtectionJobRequestBody.
        Optionally specify a list of VMs to exclude from protecting by listing Protection Source ids of VM Tags in this two dimensional array. Using this two dimensional array of Tag ids, the Cluster generates a list of VMs to exclude from protecting, which are derived from intersections of the inner arrays and union of the outer array, as shown by the following example. For example a Datacenter is selected to be protected but you want to exclude all the 'Former Employees' VMs in the East and West but keep all the VMs for 'Former Employees' in the South which are also stored in this Datacenter, by specifying the following tag id array: [ [1000, 2221], [1000, 3031] ], where 1000 is the 'Former Employee' VM Tag id, 2221 is the 'East' VM Tag id and 3031 is the 'West' VM Tag id. The first inner array [1000, 2221] produces a list of VMs that are both tagged with 'Former Employees' and 'East' (an intersection). The second inner array [1000, 3031] produces a list of VMs that are both tagged with 'Former Employees' and 'West' (an intersection). The outer array combines the list of VMs from the two inner arrays. The list of resulting VMs are excluded from being protected this Job.

        :param exclude_vm_tag_ids: The exclude_vm_tag_ids of this ProtectionJobRequestBody.
        :type: list[list[int]]
        """

        self._exclude_vm_tag_ids = exclude_vm_tag_ids

    @property
    def full_protection_sla_time_mins(self):
        """
        Gets the full_protection_sla_time_mins of this ProtectionJobRequestBody.
        If specified, this setting is number of minutes that a Job Run of a Full (no CBT) backup schedule is expected to complete, which is known as a Service-Level Agreement (SLA). A SLA violation is reported when the run time of a Job Run exceeds the SLA time period specified for this backup schedule.

        :return: The full_protection_sla_time_mins of this ProtectionJobRequestBody.
        :rtype: int
        """
        return self._full_protection_sla_time_mins

    @full_protection_sla_time_mins.setter
    def full_protection_sla_time_mins(self, full_protection_sla_time_mins):
        """
        Sets the full_protection_sla_time_mins of this ProtectionJobRequestBody.
        If specified, this setting is number of minutes that a Job Run of a Full (no CBT) backup schedule is expected to complete, which is known as a Service-Level Agreement (SLA). A SLA violation is reported when the run time of a Job Run exceeds the SLA time period specified for this backup schedule.

        :param full_protection_sla_time_mins: The full_protection_sla_time_mins of this ProtectionJobRequestBody.
        :type: int
        """

        self._full_protection_sla_time_mins = full_protection_sla_time_mins

    @property
    def full_protection_start_time(self):
        """
        Gets the full_protection_start_time of this ProtectionJobRequestBody.


        :return: The full_protection_start_time of this ProtectionJobRequestBody.
        :rtype: ProtectionJobFullProtectionStartTime
        """
        return self._full_protection_start_time

    @full_protection_start_time.setter
    def full_protection_start_time(self, full_protection_start_time):
        """
        Sets the full_protection_start_time of this ProtectionJobRequestBody.


        :param full_protection_start_time: The full_protection_start_time of this ProtectionJobRequestBody.
        :type: ProtectionJobFullProtectionStartTime
        """

        self._full_protection_start_time = full_protection_start_time

    @property
    def incremental_protection_sla_time_mins(self):
        """
        Gets the incremental_protection_sla_time_mins of this ProtectionJobRequestBody.
        If specified, this setting is number of minutes that a Job Run of a CBT-based backup schedule is expected to complete, which is known as a Service-Level Agreement (SLA). A SLA violation is reported when the run time of a Job Run exceeds the SLA time period specified for this backup schedule.

        :return: The incremental_protection_sla_time_mins of this ProtectionJobRequestBody.
        :rtype: int
        """
        return self._incremental_protection_sla_time_mins

    @incremental_protection_sla_time_mins.setter
    def incremental_protection_sla_time_mins(self, incremental_protection_sla_time_mins):
        """
        Sets the incremental_protection_sla_time_mins of this ProtectionJobRequestBody.
        If specified, this setting is number of minutes that a Job Run of a CBT-based backup schedule is expected to complete, which is known as a Service-Level Agreement (SLA). A SLA violation is reported when the run time of a Job Run exceeds the SLA time period specified for this backup schedule.

        :param incremental_protection_sla_time_mins: The incremental_protection_sla_time_mins of this ProtectionJobRequestBody.
        :type: int
        """

        self._incremental_protection_sla_time_mins = incremental_protection_sla_time_mins

    @property
    def incremental_protection_start_time(self):
        """
        Gets the incremental_protection_start_time of this ProtectionJobRequestBody.


        :return: The incremental_protection_start_time of this ProtectionJobRequestBody.
        :rtype: ProtectionJobIncrementalProtectionStartTime
        """
        return self._incremental_protection_start_time

    @incremental_protection_start_time.setter
    def incremental_protection_start_time(self, incremental_protection_start_time):
        """
        Sets the incremental_protection_start_time of this ProtectionJobRequestBody.


        :param incremental_protection_start_time: The incremental_protection_start_time of this ProtectionJobRequestBody.
        :type: ProtectionJobIncrementalProtectionStartTime
        """

        self._incremental_protection_start_time = incremental_protection_start_time

    @property
    def indexing_policy(self):
        """
        Gets the indexing_policy of this ProtectionJobRequestBody.
        Specifies the settings for indexing files found in an Object (such as a VM) so these files can be searched and recovered. In addition, it specifies inclusion and exclusion rules that determine the directories to index.

        :return: The indexing_policy of this ProtectionJobRequestBody.
        :rtype: IndexingPolicy
        """
        return self._indexing_policy

    @indexing_policy.setter
    def indexing_policy(self, indexing_policy):
        """
        Sets the indexing_policy of this ProtectionJobRequestBody.
        Specifies the settings for indexing files found in an Object (such as a VM) so these files can be searched and recovered. In addition, it specifies inclusion and exclusion rules that determine the directories to index.

        :param indexing_policy: The indexing_policy of this ProtectionJobRequestBody.
        :type: IndexingPolicy
        """

        self._indexing_policy = indexing_policy

    @property
    def leverage_storage_snapshots(self):
        """
        Gets the leverage_storage_snapshots of this ProtectionJobRequestBody.
        Specifies whether to leverage the storage array based snapshots for this backup job. To leverage storage snapshots, the storage array has to be registered as a source. If storage based snapshots can not be taken, job will fallback to the default backup method.

        :return: The leverage_storage_snapshots of this ProtectionJobRequestBody.
        :rtype: bool
        """
        return self._leverage_storage_snapshots

    @leverage_storage_snapshots.setter
    def leverage_storage_snapshots(self, leverage_storage_snapshots):
        """
        Sets the leverage_storage_snapshots of this ProtectionJobRequestBody.
        Specifies whether to leverage the storage array based snapshots for this backup job. To leverage storage snapshots, the storage array has to be registered as a source. If storage based snapshots can not be taken, job will fallback to the default backup method.

        :param leverage_storage_snapshots: The leverage_storage_snapshots of this ProtectionJobRequestBody.
        :type: bool
        """

        self._leverage_storage_snapshots = leverage_storage_snapshots

    @property
    def name(self):
        """
        Gets the name of this ProtectionJobRequestBody.
        Specifies the name of the Protection Job.

        :return: The name of this ProtectionJobRequestBody.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this ProtectionJobRequestBody.
        Specifies the name of the Protection Job.

        :param name: The name of this ProtectionJobRequestBody.
        :type: str
        """

        self._name = name

    @property
    def parent_source_id(self):
        """
        Gets the parent_source_id of this ProtectionJobRequestBody.
        Specifies the id of the registered Protection Source that is the parent of the Objects that may be protected by this Job. For example when a vCenter Server is registered on a Cohesity Cluster, the Cohesity Cluster assigns a unique id to this field that represents the vCenter Server.

        :return: The parent_source_id of this ProtectionJobRequestBody.
        :rtype: int
        """
        return self._parent_source_id

    @parent_source_id.setter
    def parent_source_id(self, parent_source_id):
        """
        Sets the parent_source_id of this ProtectionJobRequestBody.
        Specifies the id of the registered Protection Source that is the parent of the Objects that may be protected by this Job. For example when a vCenter Server is registered on a Cohesity Cluster, the Cohesity Cluster assigns a unique id to this field that represents the vCenter Server.

        :param parent_source_id: The parent_source_id of this ProtectionJobRequestBody.
        :type: int
        """

        self._parent_source_id = parent_source_id

    @property
    def policy_id(self):
        """
        Gets the policy_id of this ProtectionJobRequestBody.
        Specifies the unique id of the Protection Policy associated with the Protection Job. The Policy provides retry settings, Protection Schedules, Priority, SLA, etc. The Job defines the Storage Domain (View Box), the Objects to Protect (if applicable), Start Time, Indexing settings, etc.

        :return: The policy_id of this ProtectionJobRequestBody.
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """
        Sets the policy_id of this ProtectionJobRequestBody.
        Specifies the unique id of the Protection Policy associated with the Protection Job. The Policy provides retry settings, Protection Schedules, Priority, SLA, etc. The Job defines the Storage Domain (View Box), the Objects to Protect (if applicable), Start Time, Indexing settings, etc.

        :param policy_id: The policy_id of this ProtectionJobRequestBody.
        :type: str
        """

        self._policy_id = policy_id

    @property
    def priority(self):
        """
        Gets the priority of this ProtectionJobRequestBody.
        Specifies the priority of execution for a Protection Job. Cohesity supports concurrent backups but if the number of Jobs exceeds the ability to process Jobs, the specified priority determines the execution Job priority. This field also specifies the replication priority.

        :return: The priority of this ProtectionJobRequestBody.
        :rtype: str
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """
        Sets the priority of this ProtectionJobRequestBody.
        Specifies the priority of execution for a Protection Job. Cohesity supports concurrent backups but if the number of Jobs exceeds the ability to process Jobs, the specified priority determines the execution Job priority. This field also specifies the replication priority.

        :param priority: The priority of this ProtectionJobRequestBody.
        :type: str
        """
        allowed_values = ["kLow", "kMedium", "kHigh"]
        if priority not in allowed_values:
            raise ValueError(
                "Invalid value for `priority` ({0}), must be one of {1}"
                .format(priority, allowed_values)
            )

        self._priority = priority

    @property
    def qos_type(self):
        """
        Gets the qos_type of this ProtectionJobRequestBody.
        Specifies the QoS policy type to use for this Protection Job. 'kBackupHDD' indicates the Cohesity Cluster writes data directly to the HDD tier for this Protection Job. This is the recommended setting. 'kBackupSSD' indicates the Cohesity Cluster writes data directly to the SSD tier for this Protection Job. Only specify this policy if you need fast ingest speed for a small number of Protection Jobs.

        :return: The qos_type of this ProtectionJobRequestBody.
        :rtype: str
        """
        return self._qos_type

    @qos_type.setter
    def qos_type(self, qos_type):
        """
        Sets the qos_type of this ProtectionJobRequestBody.
        Specifies the QoS policy type to use for this Protection Job. 'kBackupHDD' indicates the Cohesity Cluster writes data directly to the HDD tier for this Protection Job. This is the recommended setting. 'kBackupSSD' indicates the Cohesity Cluster writes data directly to the SSD tier for this Protection Job. Only specify this policy if you need fast ingest speed for a small number of Protection Jobs.

        :param qos_type: The qos_type of this ProtectionJobRequestBody.
        :type: str
        """
        allowed_values = ["kBackupHDD", "kBackupSSD"]
        if qos_type not in allowed_values:
            raise ValueError(
                "Invalid value for `qos_type` ({0}), must be one of {1}"
                .format(qos_type, allowed_values)
            )

        self._qos_type = qos_type

    @property
    def quiesce(self):
        """
        Gets the quiesce of this ProtectionJobRequestBody.
        Indicates if the App-Consistent option is enabled for this Job. If the option is enabled, the Cohesity Cluster quiesces the file system and applications before taking Application-Consistent Snapshots. VMware Tools must be installed on the guest Operating System.

        :return: The quiesce of this ProtectionJobRequestBody.
        :rtype: bool
        """
        return self._quiesce

    @quiesce.setter
    def quiesce(self, quiesce):
        """
        Sets the quiesce of this ProtectionJobRequestBody.
        Indicates if the App-Consistent option is enabled for this Job. If the option is enabled, the Cohesity Cluster quiesces the file system and applications before taking Application-Consistent Snapshots. VMware Tools must be installed on the guest Operating System.

        :param quiesce: The quiesce of this ProtectionJobRequestBody.
        :type: bool
        """

        self._quiesce = quiesce

    @property
    def remote_script(self):
        """
        Gets the remote_script of this ProtectionJobRequestBody.


        :return: The remote_script of this ProtectionJobRequestBody.
        :rtype: ProtectionJobRemoteScript
        """
        return self._remote_script

    @remote_script.setter
    def remote_script(self, remote_script):
        """
        Sets the remote_script of this ProtectionJobRequestBody.


        :param remote_script: The remote_script of this ProtectionJobRequestBody.
        :type: ProtectionJobRemoteScript
        """

        self._remote_script = remote_script

    @property
    def source_ids(self):
        """
        Gets the source_ids of this ProtectionJobRequestBody.
        Specifies the list of Object ids from the Protection Source to protect (or back up) by the Protection Job. An Object in this list may be descendant of another Object in this list. For example a Datacenter could be selected but its child Host excluded. However, a child VM under the Host could be explicitly selected to be protected. Both the Datacenter and the VM are listed.

        :return: The source_ids of this ProtectionJobRequestBody.
        :rtype: list[int]
        """
        return self._source_ids

    @source_ids.setter
    def source_ids(self, source_ids):
        """
        Sets the source_ids of this ProtectionJobRequestBody.
        Specifies the list of Object ids from the Protection Source to protect (or back up) by the Protection Job. An Object in this list may be descendant of another Object in this list. For example a Datacenter could be selected but its child Host excluded. However, a child VM under the Host could be explicitly selected to be protected. Both the Datacenter and the VM are listed.

        :param source_ids: The source_ids of this ProtectionJobRequestBody.
        :type: list[int]
        """

        self._source_ids = source_ids

    @property
    def source_special_parameters(self):
        """
        Gets the source_special_parameters of this ProtectionJobRequestBody.
        Specifies additional settings that can apply to a subset of the Sources listed in the Protection Job. For example, you can specify a list of files and folders to protect instead of protecting the entire Physical Server. If this field's setting conflicts with environmentParameters, then this setting will be used.

        :return: The source_special_parameters of this ProtectionJobRequestBody.
        :rtype: list[SourceSpecialParameter]
        """
        return self._source_special_parameters

    @source_special_parameters.setter
    def source_special_parameters(self, source_special_parameters):
        """
        Sets the source_special_parameters of this ProtectionJobRequestBody.
        Specifies additional settings that can apply to a subset of the Sources listed in the Protection Job. For example, you can specify a list of files and folders to protect instead of protecting the entire Physical Server. If this field's setting conflicts with environmentParameters, then this setting will be used.

        :param source_special_parameters: The source_special_parameters of this ProtectionJobRequestBody.
        :type: list[SourceSpecialParameter]
        """

        self._source_special_parameters = source_special_parameters

    @property
    def start_time(self):
        """
        Gets the start_time of this ProtectionJobRequestBody.


        :return: The start_time of this ProtectionJobRequestBody.
        :rtype: ProtectionJobStartTime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """
        Sets the start_time of this ProtectionJobRequestBody.


        :param start_time: The start_time of this ProtectionJobRequestBody.
        :type: ProtectionJobStartTime
        """

        self._start_time = start_time

    @property
    def timezone(self):
        """
        Gets the timezone of this ProtectionJobRequestBody.
        Specifies the timezone to use when calculating time for this Protection Job such as the Job start time. Specify the timezone in the following format: \"Area/Location\", for example: \"America/New_York\".

        :return: The timezone of this ProtectionJobRequestBody.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """
        Sets the timezone of this ProtectionJobRequestBody.
        Specifies the timezone to use when calculating time for this Protection Job such as the Job start time. Specify the timezone in the following format: \"Area/Location\", for example: \"America/New_York\".

        :param timezone: The timezone of this ProtectionJobRequestBody.
        :type: str
        """

        self._timezone = timezone

    @property
    def view_box_id(self):
        """
        Gets the view_box_id of this ProtectionJobRequestBody.
        Specifies the Storage Domain (View Box) id where this Job writes data.

        :return: The view_box_id of this ProtectionJobRequestBody.
        :rtype: int
        """
        return self._view_box_id

    @view_box_id.setter
    def view_box_id(self, view_box_id):
        """
        Sets the view_box_id of this ProtectionJobRequestBody.
        Specifies the Storage Domain (View Box) id where this Job writes data.

        :param view_box_id: The view_box_id of this ProtectionJobRequestBody.
        :type: int
        """

        self._view_box_id = view_box_id

    @property
    def view_name(self):
        """
        Gets the view_name of this ProtectionJobRequestBody.
        For a Remote Adapter 'kPuppeteer' Job or a 'kView' Job, this field specifies a View name that should be protected. Specify this field when creating a Protection Job for the first time for a View. If this field is specified, ParentSourceId, SourceIds, and ExcludeSourceIds should not be specified.

        :return: The view_name of this ProtectionJobRequestBody.
        :rtype: str
        """
        return self._view_name

    @view_name.setter
    def view_name(self, view_name):
        """
        Sets the view_name of this ProtectionJobRequestBody.
        For a Remote Adapter 'kPuppeteer' Job or a 'kView' Job, this field specifies a View name that should be protected. Specify this field when creating a Protection Job for the first time for a View. If this field is specified, ParentSourceId, SourceIds, and ExcludeSourceIds should not be specified.

        :param view_name: The view_name of this ProtectionJobRequestBody.
        :type: str
        """

        self._view_name = view_name

    @property
    def vm_tag_ids(self):
        """
        Gets the vm_tag_ids of this ProtectionJobRequestBody.
        Optionally specify a list of VMs to protect by listing Protection Source ids of VM Tags in this two dimensional array. Using this two dimensional array of Tag ids, the Cluster generates a list of VMs to protect which are derived from intersections of the inner arrays and union of the outer array, as shown by the following example. To protect only 'Eng' VMs in the East and all the VMs in the West, specify the following tag id array: [ [1101, 2221], [3031] ], where 1101 is the 'Eng' VM Tag id, 2221 is the 'East' VM Tag id and 3031 is the 'West' VM Tag id. The inner array [1101, 2221] produces a list of VMs that are both tagged with 'Eng' and 'East' (an intersection). The outer array combines the list from the inner array with list of VMs tagged with 'West' (a union). The list of resulting VMs are protected by this Job.

        :return: The vm_tag_ids of this ProtectionJobRequestBody.
        :rtype: list[list[int]]
        """
        return self._vm_tag_ids

    @vm_tag_ids.setter
    def vm_tag_ids(self, vm_tag_ids):
        """
        Sets the vm_tag_ids of this ProtectionJobRequestBody.
        Optionally specify a list of VMs to protect by listing Protection Source ids of VM Tags in this two dimensional array. Using this two dimensional array of Tag ids, the Cluster generates a list of VMs to protect which are derived from intersections of the inner arrays and union of the outer array, as shown by the following example. To protect only 'Eng' VMs in the East and all the VMs in the West, specify the following tag id array: [ [1101, 2221], [3031] ], where 1101 is the 'Eng' VM Tag id, 2221 is the 'East' VM Tag id and 3031 is the 'West' VM Tag id. The inner array [1101, 2221] produces a list of VMs that are both tagged with 'Eng' and 'East' (an intersection). The outer array combines the list from the inner array with list of VMs tagged with 'West' (a union). The list of resulting VMs are protected by this Job.

        :param vm_tag_ids: The vm_tag_ids of this ProtectionJobRequestBody.
        :type: list[list[int]]
        """

        self._vm_tag_ids = vm_tag_ids

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
