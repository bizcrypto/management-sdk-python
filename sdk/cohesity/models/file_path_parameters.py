# coding: utf-8

"""
    Cohesity REST API

    This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class FilePathParameters(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, backup_file_path=None, excluded_file_paths=None, skip_nested_volumes=None):
        """
        FilePathParameters - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'backup_file_path': 'str',
            'excluded_file_paths': 'list[str]',
            'skip_nested_volumes': 'bool'
        }

        self.attribute_map = {
            'backup_file_path': 'backupFilePath',
            'excluded_file_paths': 'excludedFilePaths',
            'skip_nested_volumes': 'skipNestedVolumes'
        }

        self._backup_file_path = backup_file_path
        self._excluded_file_paths = excluded_file_paths
        self._skip_nested_volumes = skip_nested_volumes

    @property
    def backup_file_path(self):
        """
        Gets the backup_file_path of this FilePathParameters.
        Specifies absolute path to a file or a directory in a Physical Server to protect.

        :return: The backup_file_path of this FilePathParameters.
        :rtype: str
        """
        return self._backup_file_path

    @backup_file_path.setter
    def backup_file_path(self, backup_file_path):
        """
        Sets the backup_file_path of this FilePathParameters.
        Specifies absolute path to a file or a directory in a Physical Server to protect.

        :param backup_file_path: The backup_file_path of this FilePathParameters.
        :type: str
        """

        self._backup_file_path = backup_file_path

    @property
    def excluded_file_paths(self):
        """
        Gets the excluded_file_paths of this FilePathParameters.
        Specifies absolute paths to descendant files or subdirectories of backupFilePath that should not be protected.

        :return: The excluded_file_paths of this FilePathParameters.
        :rtype: list[str]
        """
        return self._excluded_file_paths

    @excluded_file_paths.setter
    def excluded_file_paths(self, excluded_file_paths):
        """
        Sets the excluded_file_paths of this FilePathParameters.
        Specifies absolute paths to descendant files or subdirectories of backupFilePath that should not be protected.

        :param excluded_file_paths: The excluded_file_paths of this FilePathParameters.
        :type: list[str]
        """

        self._excluded_file_paths = excluded_file_paths

    @property
    def skip_nested_volumes(self):
        """
        Gets the skip_nested_volumes of this FilePathParameters.
        Specifies if any subdirectories under backupFilePath, where local or network volumes are mounted, should be excluded from being protected. If true, the volumes are not protected.

        :return: The skip_nested_volumes of this FilePathParameters.
        :rtype: bool
        """
        return self._skip_nested_volumes

    @skip_nested_volumes.setter
    def skip_nested_volumes(self, skip_nested_volumes):
        """
        Sets the skip_nested_volumes of this FilePathParameters.
        Specifies if any subdirectories under backupFilePath, where local or network volumes are mounted, should be excluded from being protected. If true, the volumes are not protected.

        :param skip_nested_volumes: The skip_nested_volumes of this FilePathParameters.
        :type: bool
        """

        self._skip_nested_volumes = skip_nested_volumes

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
