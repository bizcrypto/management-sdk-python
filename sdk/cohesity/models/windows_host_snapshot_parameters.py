# coding: utf-8

"""
    Cohesity REST API

    This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class WindowsHostSnapshotParameters(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, copy_only_backup=None, disable_metadata=None, disable_notification=None, excluded_vss_writers=None):
        """
        WindowsHostSnapshotParameters - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'copy_only_backup': 'bool',
            'disable_metadata': 'bool',
            'disable_notification': 'bool',
            'excluded_vss_writers': 'list[str]'
        }

        self.attribute_map = {
            'copy_only_backup': 'copyOnlyBackup',
            'disable_metadata': 'disableMetadata',
            'disable_notification': 'disableNotification',
            'excluded_vss_writers': 'excludedVssWriters'
        }

        self._copy_only_backup = copy_only_backup
        self._disable_metadata = disable_metadata
        self._disable_notification = disable_notification
        self._excluded_vss_writers = excluded_vss_writers

    @property
    def copy_only_backup(self):
        """
        Gets the copy_only_backup of this WindowsHostSnapshotParameters.
        Specifies whether to backup regardless of the state of each file's backup history. Backup history will not be updated. Refer Microsoft documentation on VSS_BT_COPY.

        :return: The copy_only_backup of this WindowsHostSnapshotParameters.
        :rtype: bool
        """
        return self._copy_only_backup

    @copy_only_backup.setter
    def copy_only_backup(self, copy_only_backup):
        """
        Sets the copy_only_backup of this WindowsHostSnapshotParameters.
        Specifies whether to backup regardless of the state of each file's backup history. Backup history will not be updated. Refer Microsoft documentation on VSS_BT_COPY.

        :param copy_only_backup: The copy_only_backup of this WindowsHostSnapshotParameters.
        :type: bool
        """

        self._copy_only_backup = copy_only_backup

    @property
    def disable_metadata(self):
        """
        Gets the disable_metadata of this WindowsHostSnapshotParameters.
        Specifies whether to disable fetching and storing of some metadata on Cohesity Cluster to save storage space. Otherwise, there will be some metadata fetched and stored on Cohesity Cluster.

        :return: The disable_metadata of this WindowsHostSnapshotParameters.
        :rtype: bool
        """
        return self._disable_metadata

    @disable_metadata.setter
    def disable_metadata(self, disable_metadata):
        """
        Sets the disable_metadata of this WindowsHostSnapshotParameters.
        Specifies whether to disable fetching and storing of some metadata on Cohesity Cluster to save storage space. Otherwise, there will be some metadata fetched and stored on Cohesity Cluster.

        :param disable_metadata: The disable_metadata of this WindowsHostSnapshotParameters.
        :type: bool
        """

        self._disable_metadata = disable_metadata

    @property
    def disable_notification(self):
        """
        Gets the disable_notification of this WindowsHostSnapshotParameters.
        Specifies whether to disable some notification steps when taking snapshots.

        :return: The disable_notification of this WindowsHostSnapshotParameters.
        :rtype: bool
        """
        return self._disable_notification

    @disable_notification.setter
    def disable_notification(self, disable_notification):
        """
        Sets the disable_notification of this WindowsHostSnapshotParameters.
        Specifies whether to disable some notification steps when taking snapshots.

        :param disable_notification: The disable_notification of this WindowsHostSnapshotParameters.
        :type: bool
        """

        self._disable_notification = disable_notification

    @property
    def excluded_vss_writers(self):
        """
        Gets the excluded_vss_writers of this WindowsHostSnapshotParameters.
        For example, \"ASR Writer\", \"System Writer\". Refer Microsoft documentaion for a complete list.

        :return: The excluded_vss_writers of this WindowsHostSnapshotParameters.
        :rtype: list[str]
        """
        return self._excluded_vss_writers

    @excluded_vss_writers.setter
    def excluded_vss_writers(self, excluded_vss_writers):
        """
        Sets the excluded_vss_writers of this WindowsHostSnapshotParameters.
        For example, \"ASR Writer\", \"System Writer\". Refer Microsoft documentaion for a complete list.

        :param excluded_vss_writers: The excluded_vss_writers of this WindowsHostSnapshotParameters.
        :type: list[str]
        """

        self._excluded_vss_writers = excluded_vss_writers

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
