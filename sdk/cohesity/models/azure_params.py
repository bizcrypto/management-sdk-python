# coding: utf-8

"""
    Cohesity REST API

    This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class AzureParams(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, resource_group=None, storage_account=None, storage_container=None):
        """
        AzureParams - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'resource_group': 'int',
            'storage_account': 'int',
            'storage_container': 'int'
        }

        self.attribute_map = {
            'resource_group': 'resourceGroup',
            'storage_account': 'storageAccount',
            'storage_container': 'storageContainer'
        }

        self._resource_group = resource_group
        self._storage_account = storage_account
        self._storage_container = storage_container

    @property
    def resource_group(self):
        """
        Gets the resource_group of this AzureParams.
        Specifies id of the Azure resource group. Its value is globally unique within Azure.

        :return: The resource_group of this AzureParams.
        :rtype: int
        """
        return self._resource_group

    @resource_group.setter
    def resource_group(self, resource_group):
        """
        Sets the resource_group of this AzureParams.
        Specifies id of the Azure resource group. Its value is globally unique within Azure.

        :param resource_group: The resource_group of this AzureParams.
        :type: int
        """

        self._resource_group = resource_group

    @property
    def storage_account(self):
        """
        Gets the storage_account of this AzureParams.
        Specifies id of the storage account that will contain the storage container within which we will create the blob that will become the VHD disk for the cloned VM.

        :return: The storage_account of this AzureParams.
        :rtype: int
        """
        return self._storage_account

    @storage_account.setter
    def storage_account(self, storage_account):
        """
        Sets the storage_account of this AzureParams.
        Specifies id of the storage account that will contain the storage container within which we will create the blob that will become the VHD disk for the cloned VM.

        :param storage_account: The storage_account of this AzureParams.
        :type: int
        """

        self._storage_account = storage_account

    @property
    def storage_container(self):
        """
        Gets the storage_container of this AzureParams.
        Specifies id of the storage container within the above storage account.

        :return: The storage_container of this AzureParams.
        :rtype: int
        """
        return self._storage_container

    @storage_container.setter
    def storage_container(self, storage_container):
        """
        Sets the storage_container of this AzureParams.
        Specifies id of the storage container within the above storage account.

        :param storage_container: The storage_container of this AzureParams.
        :type: int
        """

        self._storage_container = storage_container

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
